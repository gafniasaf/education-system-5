name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main]

permissions:
  contents: read

jobs:
  build-and-test:
    name: Typecheck, Lint, Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies (root and workspaces)
        run: npm ci

      - name: Typecheck
        run: npm run typecheck

      - name: Lint
        run: npm run lint

      - name: Run unit tests
        run: npm run test

      - name: Collect reports
        if: always()
        run: |
          mkdir -p reports/unit || true
          mkdir -p artifacts || true
          echo "CI run: $GITHUB_RUN_ID" > artifacts/ci-run.txt

      - name: Upload unit test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-reports
          path: |
            reports/unit/**
            artifacts/**
          if-no-files-found: warn

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build web image
        run: |
          docker compose build web

      - name: Start web
        env:
          WEB_PORT: 3022
        run: |
          docker compose up -d web

      - name: Wait for health
        run: |
          for i in {1..30}; do curl -fsS http://localhost:3022/api/ready && exit 0; sleep 2; done; exit 1

      - name: Run unit tests in container
        run: |
          docker compose run --rm --profile tests tests bash -lc 'bash artifacts/run-jest-summary.sh || true && mkdir -p reports/unit && ls -la reports/unit || true'

      - name: Run folio E2E tests in container
        run: |
          docker compose run --rm --profile tests tests bash -lc 'bash tests/e2e/run-json.sh'

      - name: Upload reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: reports/**

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: artifacts/**

      - name: Compose down
        if: always()
        run: |
          docker compose down -v || true

name: CI

on:
  workflow_dispatch:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']

jobs:
  build-test:
    name: Lint, Typecheck, Unit (Ubuntu)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Concurrency (cancel in-progress)
        uses: softprops/turnstyle@v1
        with:
          abort-after-seconds: 1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install deps
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Typecheck
        run: npm run typecheck

      - name: Unit tests with coverage
        run: npx jest -w 1 -c tests/jest.config.cjs --coverage

      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: reports/unit/coverage

  e2e:
    name: Playwright E2E (Windows) - Smoke
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Concurrency (cancel in-progress)
        uses: softprops/turnstyle@v1
        with:
          abort-after-seconds: 1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install deps
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install

      - name: Run E2E smoke tests
        env:
          CI: '1'
        run: npm run smoke-test

