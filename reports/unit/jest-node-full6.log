{"level":30,"time":1755747651089,"pid":21,"hostname":"4829d5d9db2d","requestId":"c8628aca-ce49-47ba-9ed5-aefd3b1664f0","ms":24,"msg":"route_success"}
{"level":30,"time":1755747651095,"pid":21,"hostname":"4829d5d9db2d","requestId":"befb23c6-68ae-41ab-bb17-69d20fd95531","ms":2,"msg":"route_success"}
{"level":30,"time":1755747651123,"pid":21,"hostname":"4829d5d9db2d","requestId":"87818d16-684f-49be-abdb-122af74975c1","ms":27,"msg":"route_success"}
{"level":30,"time":1755747651145,"pid":21,"hostname":"4829d5d9db2d","requestId":"df76378d-bb3b-4dd7-93ca-bd8ce0d74a17","ms":0,"msg":"route_success"}
{"level":30,"time":1755747651788,"pid":21,"hostname":"4829d5d9db2d","requestId":"7011386e-0c7a-43cd-ac0f-c7ac6d4d5d60","ms":2,"msg":"route_success"}
{"level":30,"time":1755747651797,"pid":21,"hostname":"4829d5d9db2d","requestId":"3bada5eb-7b35-49ab-b6cb-4de6e89109f8","ms":1,"msg":"route_success"}
{"level":30,"time":1755747651798,"pid":21,"hostname":"4829d5d9db2d","requestId":"ad3377f2-769d-4744-bc60-94551e9f7ac3","ms":0,"msg":"route_success"}
{"level":30,"time":1755747651799,"pid":21,"hostname":"4829d5d9db2d","requestId":"c94cf026-3f5a-4c15-bf93-4dab2d098cdb","ms":0,"msg":"route_success"}
{"level":30,"time":1755747651806,"pid":21,"hostname":"4829d5d9db2d","requestId":"b6b91517-9945-477b-b545-c0cb928e213c","ms":6,"msg":"route_success"}
{"level":30,"time":1755747651811,"pid":21,"hostname":"4829d5d9db2d","requestId":"4bacd965-a430-4b4e-bed7-97dabd937698","ms":5,"msg":"route_success"}
{"level":30,"time":1755747651814,"pid":21,"hostname":"4829d5d9db2d","requestId":"d973345b-5cb1-4c72-9008-c1fc18be59be","ms":1,"msg":"route_success"}
{"level":30,"time":1755747651993,"pid":21,"hostname":"4829d5d9db2d","requestId":"edd0babe-a7ab-4f83-abd7-a33323158ca1","ms":1,"msg":"route_success"}
{"level":30,"time":1755747651994,"pid":21,"hostname":"4829d5d9db2d","requestId":"85c52dee-3f43-4728-9b8b-cb3c0a90aea6","ms":1,"msg":"route_success"}
{"level":50,"time":1755747652004,"pid":21,"hostname":"4829d5d9db2d","requestId":"c0e261fc-490e-4211-bc12-ebf8d0ef87d7","issues":[{"path":"updated","message":"Required"}],"msg":"dto_response_validation_failed"}
{"level":30,"time":1755747652004,"pid":21,"hostname":"4829d5d9db2d","requestId":"83a8540d-ded0-4ef8-8f40-74ad0ef8e9fa","ms":10,"msg":"route_success"}
{"level":30,"time":1755747652007,"pid":21,"hostname":"4829d5d9db2d","requestId":"9901dea3-bf48-4573-b330-40cdc136c241","ms":1,"msg":"route_success"}
{"level":30,"time":1755747652008,"pid":21,"hostname":"4829d5d9db2d","requestId":"aa830ef3-5e46-4f8a-baa9-c5b140c3906a","ms":1,"msg":"route_success"}
FAIL tests/unit/future.messaging.spec.ts (10.542 s)
  ● Epic E: Messaging (MVP) › lists only threads for the current user with unread counts

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      32 |     const rows = await res.json();
      33 |     expect(Array.isArray(rows)).toBe(true);
    > 34 |     expect(rows.every((r: any) => typeof r.unread === 'number')).toBe(true);
         |                                                                  ^
      35 |   });
      36 |
      37 |   test('sends a message into a thread and fans out notifications to participants', async () => {

      at Object.<anonymous> (unit/future.messaging.spec.ts:34:66)

  ● Epic E: Messaging (MVP) › marks message as read for the current user and updates unread badge

    TypeError: Cannot read properties of undefined (reading 'unread')

      78 |     const listRes = await threads.GET(new Request('http://localhost/api/messages/threads', { headers: { 'x-test-auth': 'student' } }) as any);
      79 |     const list = await listRes.json();
    > 80 |     expect(list[0].unread).toBe(0);
         |                    ^
      81 |   });
      82 |   test('enforces permissions: unauthenticated yields 401', async () => {
      83 |     // clear test auth

      at Object.<anonymous> (unit/future.messaging.spec.ts:80:20)

  ● Epic E: Messaging (MVP) › PATCH /api/messages/threads/[id]/read-all zeroes unread for current user

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      107 |     globalThis.__TEST_HEADERS_STORE__.cookies.set('x-test-auth', 'student');
      108 |     const patch = await readAll.PATCH(new Request(`http://localhost/api/messages/threads/${thread.id}/read-all`, { method: 'PATCH', headers: { 'x-test-auth': 'student' } }) as any, { params: { id: thread.id } } as any);
    > 109 |     expect(patch.status).toBe(200);
          |                          ^
      110 |     const listRes = await threads.GET(new Request('http://localhost/api/messages/threads', { headers: { 'x-test-auth': 'student' } }) as any);
      111 |     const list = await listRes.json();
      112 |     expect(list[0].unread).toBe(0);

      at Object.<anonymous> (unit/future.messaging.spec.ts:109:26)

  ● Epic E: Messaging (MVP) › messages list sorted by created_at and unread increments after new message

    TypeError: Cannot read properties of undefined (reading 'unread')

      138 |     const listThreads = await threads.GET(new Request('http://localhost/api/messages/threads', { headers: { 'x-test-auth': 'student' } }) as any);
      139 |     const ts = await listThreads.json();
    > 140 |     expect(ts[0].unread).toBeGreaterThan(0);
          |                  ^
      141 |   });
      142 |
      143 |   test('PATCH /api/messages without id returns 400 and unknown id returns 404', async () => {

      at Object.<anonymous> (unit/future.messaging.spec.ts:140:18)

FAIL tests/unit/api.runtime.v2.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.runtime.v2.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.runtime.v2.spec.ts:3:1)

FAIL tests/unit/api.flags.providers.users.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.flags.providers.users.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.flags.providers.users.spec.ts:6:1)

{"level":30,"time":1755747652021,"pid":21,"hostname":"4829d5d9db2d","requestId":"a856f435-00fb-494f-8522-c82305241431","ms":1,"msg":"route_success"}
{"level":30,"time":1755747652022,"pid":21,"hostname":"4829d5d9db2d","requestId":"d6498bf3-348d-42ae-8011-3c24c8e08c8f","ms":1,"msg":"route_success"}
{"level":30,"time":1755747652023,"pid":21,"hostname":"4829d5d9db2d","requestId":"8fd6473b-3fad-4fc8-afb1-593a998150b7","ms":1,"msg":"route_success"}
{"level":30,"time":1755747652024,"pid":21,"hostname":"4829d5d9db2d","requestId":"8b159c7c-ab9b-494d-b38c-8e5f99eab53b","ms":0,"msg":"route_success"}
{"level":30,"time":1755747652025,"pid":21,"hostname":"4829d5d9db2d","requestId":"fc98a969-876b-479c-855b-b0f321d77ffc","ms":1,"msg":"route_success"}
{"level":30,"time":1755747658109,"pid":21,"hostname":"4829d5d9db2d","requestId":"180e519c-147b-4302-94e7-feb81e5d26bc","ms":1,"msg":"route_success"}
{"level":30,"time":1755747658116,"pid":21,"hostname":"4829d5d9db2d","requestId":"93e94b55-9991-42ca-bd9e-a301801418dd","ms":6,"msg":"route_success"}
{"level":30,"time":1755747658117,"pid":21,"hostname":"4829d5d9db2d","requestId":"8ed8532c-a239-407a-bd76-2a9ef9f00742","ms":0,"msg":"route_success"}
{"level":30,"time":1755747658118,"pid":21,"hostname":"4829d5d9db2d","requestId":"a9276837-2fc8-455b-ab09-27c141e16031","ms":1,"msg":"route_success"}
{"level":30,"time":1755747658118,"pid":21,"hostname":"4829d5d9db2d","requestId":"7dec7b68-aab1-434a-a31b-13abed66130d","ms":0,"msg":"route_success"}
{"level":30,"time":1755747658127,"pid":21,"hostname":"4829d5d9db2d","requestId":"2e2e685d-941c-44a8-bd68-8435d1ef8a13","ms":0,"msg":"route_success"}
{"level":30,"time":1755747658129,"pid":21,"hostname":"4829d5d9db2d","requestId":"80a6328e-5819-4abb-91ab-25b3d717894e","ms":1,"msg":"route_success"}
{"level":30,"time":1755747658130,"pid":21,"hostname":"4829d5d9db2d","requestId":"345f347d-db61-4068-a91a-e47ec1f25897","ms":1,"msg":"route_success"}
PASS tests/unit/api.reports.spec.ts
PASS tests/unit/lib.runtimeAuth.spec.ts
PASS tests/unit/api.pagination.headers.spec.ts
{"level":30,"time":1755747662347,"pid":21,"hostname":"4829d5d9db2d","requestId":"fd9f10cf-1c01-4564-9dd4-fe7ee764e727","ms":1,"msg":"route_success"}
{"level":30,"time":1755747662356,"pid":21,"hostname":"4829d5d9db2d","requestId":"b0c6dd46-c2d5-4b29-a50f-547e4491a886","ms":9,"msg":"route_success"}
{"level":30,"time":1755747662359,"pid":21,"hostname":"4829d5d9db2d","requestId":"dbd77a18-7863-42b4-9777-eaf8295c5000","ms":2,"msg":"route_success"}
{"level":30,"time":1755747662361,"pid":21,"hostname":"4829d5d9db2d","requestId":"03091721-98fb-49ad-9c72-09127ba34f24","ms":1,"msg":"route_success"}
{"level":30,"time":1755747662362,"pid":21,"hostname":"4829d5d9db2d","requestId":"696c7e45-8452-4f1f-b7c2-8293b5fdde4c","ms":1,"msg":"route_success"}
{"level":30,"time":1755747662362,"pid":21,"hostname":"4829d5d9db2d","requestId":"f249a98e-4461-4703-a66f-a71ed8fcd89f","ms":0,"msg":"route_success"}
{"level":30,"time":1755747662363,"pid":21,"hostname":"4829d5d9db2d","requestId":"d5d6644f-6d4f-42b5-aebb-fac49ed0fe5b","ms":0,"msg":"route_success"}
{"level":30,"time":1755747662756,"pid":21,"hostname":"4829d5d9db2d","requestId":"6c2337cd-7b19-409f-8cc7-b89da622689b","ms":1,"msg":"route_success"}
{"level":30,"time":1755747662757,"pid":21,"hostname":"4829d5d9db2d","requestId":"b9791325-f387-4e45-a68d-acb3c3cd7e71","ms":1,"msg":"route_success"}
{"level":30,"time":1755747662757,"pid":21,"hostname":"4829d5d9db2d","requestId":"1f2a1c96-72cb-409a-a9fe-4130ec324afa","ms":0,"msg":"route_success"}
{"level":30,"time":1755747662759,"pid":21,"hostname":"4829d5d9db2d","requestId":"f89da8a8-17f7-4a55-92a5-0f60396d46ee","ms":0,"msg":"route_success"}
{"level":30,"time":1755747662760,"pid":21,"hostname":"4829d5d9db2d","requestId":"8e2a430d-6497-4283-947e-0ff73317db44","ms":1,"msg":"route_success"}
{"level":30,"time":1755747662925,"pid":21,"hostname":"4829d5d9db2d","requestId":"dedc584a-7386-4495-b356-de1b33da957e","ms":1,"msg":"route_success"}
PASS tests/unit/future.notifications.spec.ts
{"level":50,"time":1755747664013,"pid":21,"hostname":"4829d5d9db2d","requestId":"cc2913df-cea0-49f8-b406-e60fd70448fd","ms":13,"err":"supabase.from(...).insert is not a function","msg":"route_error"}
{"level":50,"time":1755747664034,"pid":21,"hostname":"4829d5d9db2d","requestId":"510fad64-c186-48a5-89c4-03d5f25048e6","ms":1,"err":"supabase.from(...).update is not a function","msg":"route_error"}
{"level":50,"time":1755747664036,"pid":21,"hostname":"4829d5d9db2d","requestId":"fe47d690-1b20-42fc-b1ec-1dceb0b9e7ba","ms":0,"err":"supabase.from(...).delete is not a function","msg":"route_error"}
{"level":50,"time":1755747664037,"pid":21,"hostname":"4829d5d9db2d","requestId":"b04249b6-d884-41a8-b73b-9dd1e520af1f","ms":1,"err":"supabase.from(...).insert is not a function","msg":"route_error"}
{"level":50,"time":1755747664045,"pid":21,"hostname":"4829d5d9db2d","requestId":"b5b73548-032e-4b54-a158-18c88c0e7dca","ms":1,"err":"supabase.from(...).update is not a function","msg":"route_error"}
FAIL tests/unit/api.registry.mutations.ratelimit.spec.ts
  ● registry mutations rate-limit headers › courses POST returns 429 headers when limited

    TypeError: supabase.from(...).insert is not a function

      106 |   if (!parsed.success) return NextResponse.json({ error: { code: "BAD_REQUEST", message: parsed.error.message }, requestId }, { status: 400, headers: { "x-request-id": requestId } });
      107 |   const supabase = getRouteHandlerSupabase();
    > 108 |   const { data, error } = await supabase.from("external_courses").insert(parsed.data as any).select().single();
          |                                                                   ^
      109 |   if (error) return NextResponse.json({ error: { code: "DB_ERROR", message: error.message }, requestId }, { status: 500, headers: { "x-request-id": requestId } });
      110 |   try { await supabase.from('audit_logs').insert({ actor_id: user.id, action: 'registry.external.create', entity_type: 'external_course', entity_id: (data as any).id, details: parsed.data }); } catch {}
      111 |   try { return jsonDto(externalCourse.parse(data as any), externalCourse as any, { requestId, status: 201 }); } catch { return NextResponse.json({ error: { code: 'INTERNAL', message: 'Invalid external course shape' }, requestId }, { status: 500, headers: { 'x-request-id': requestId } }); }

      at POST (../apps/web/src/app/api/registry/courses/route.ts:108:67)
      at Object.POST (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.registry.mutations.ratelimit.spec.ts:16:17)

  ● registry mutations rate-limit headers › courses PATCH returns 429 headers when limited

    TypeError: supabase.from(...).update is not a function

      138 |   if (!parsed.success) return NextResponse.json({ error: { code: "BAD_REQUEST", message: parsed.error.message }, requestId }, { status: 400, headers: { "x-request-id": requestId } });
      139 |   const supabase = getRouteHandlerSupabase();
    > 140 |   const { data, error } = await supabase.from("external_courses").update(parsed.data.data as any).eq("id", parsed.data.id).select().single();
          |                                                                   ^
      141 |   if (error) return NextResponse.json({ error: { code: "DB_ERROR", message: error.message }, requestId }, { status: 500, headers: { "x-request-id": requestId } });
      142 |   try { await supabase.from('audit_logs').insert({ actor_id: user.id, action: 'registry.external.update', entity_type: 'external_course', entity_id: parsed.data.id, details: parsed.data.data }); } catch {}
      143 |   try { return jsonDto(externalCourse.parse(data as any), externalCourse as any, { requestId, status: 200 }); } catch { return NextResponse.json({ error: { code: 'INTERNAL', message: 'Invalid external course shape' }, requestId }, { status: 500, headers: { 'x-request-id': requestId } }); }

      at PATCH (../apps/web/src/app/api/registry/courses/route.ts:140:67)
      at Object.PATCH (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.registry.mutations.ratelimit.spec.ts:25:17)

  ● registry mutations rate-limit headers › courses DELETE returns 429 headers when limited

    TypeError: supabase.from(...).delete is not a function

      167 |   try { q = parseQuery(req, idSchema); } catch (e: any) { return NextResponse.json({ error: { code: 'BAD_REQUEST', message: e.message }, requestId }, { status: 400, headers: { 'x-request-id': requestId } }); }
      168 |   const supabase = getRouteHandlerSupabase();
    > 169 |   const { data, error } = await supabase.from("external_courses").delete().eq("id", q.id).select().single();
          |                                                                         ^
      170 |   if (error) return NextResponse.json({ error: { code: "DB_ERROR", message: error.message }, requestId }, { status: 500, headers: { "x-request-id": requestId } });
      171 |   try { await supabase.from('audit_logs').insert({ actor_id: user.id, action: 'registry.external.delete', entity_type: 'external_course', entity_id: q.id, details: {} }); } catch {}
      172 |   const { jsonDto } = await import('@/lib/jsonDto');

      at DELETE (../apps/web/src/app/api/registry/courses/route.ts:169:73)
      at Object.DELETE (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.registry.mutations.ratelimit.spec.ts:34:17)

  ● registry mutations rate-limit headers › versions POST returns 429 headers when limited

    TypeError: supabase.from(...).insert is not a function

      77 |   if (!parsed.success) return NextResponse.json({ error: { code: "BAD_REQUEST", message: parsed.error.message }, requestId }, { status: 400, headers: { "x-request-id": requestId } });
      78 |   const supabase = getRouteHandlerSupabase();
    > 79 |   const { data, error } = await supabase.from("course_versions").insert(parsed.data as any).select().single();
         |                                                                  ^
      80 |   if (error) return NextResponse.json({ error: { code: "DB_ERROR", message: error.message }, requestId }, { status: 500, headers: { "x-request-id": requestId } });
      81 |   try { await supabase.from('audit_logs').insert({ actor_id: user.id, action: 'registry.version.create', entity_type: 'course_version', entity_id: (data as any).id, details: parsed.data }); } catch {}
      82 |   try { return jsonDto(courseVersion.parse(data as any), courseVersion as any, { requestId, status: 201 }); } catch { return NextResponse.json({ error: { code: 'INTERNAL', message: 'Invalid course version shape' }, requestId }, { status: 500, headers: { 'x-request-id': requestId } }); }

      at POST (../apps/web/src/app/api/registry/versions/route.ts:79:66)
      at Object.POST (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.registry.mutations.ratelimit.spec.ts:43:17)

  ● registry mutations rate-limit headers › versions PATCH returns 429 headers when limited

    TypeError: supabase.from(...).update is not a function

      108 |   if (!parsed.success) return NextResponse.json({ error: { code: "BAD_REQUEST", message: parsed.error.message }, requestId }, { status: 400, headers: { "x-request-id": requestId } });
      109 |   const supabase = getRouteHandlerSupabase();
    > 110 |   const { data, error } = await supabase.from("course_versions").update(parsed.data as any).eq("id", q.id).select().single();
          |                                                                  ^
      111 |   if (error) return NextResponse.json({ error: { code: "DB_ERROR", message: error.message }, requestId }, { status: 500, headers: { "x-request-id": requestId } });
      112 |   try { await supabase.from('audit_logs').insert({ actor_id: user.id, action: 'registry.version.update', entity_type: 'course_version', entity_id: q.id, details: parsed.data }); } catch {}
      113 |   try { return jsonDto(courseVersion.parse(data as any), courseVersion as any, { requestId, status: 200 }); } catch { return NextResponse.json({ error: { code: 'INTERNAL', message: 'Invalid course version shape' }, requestId }, { status: 500, headers: { 'x-request-id': requestId } }); }

      at PATCH (../apps/web/src/app/api/registry/versions/route.ts:110:66)
      at Object.PATCH (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.registry.mutations.ratelimit.spec.ts:52:17)

PASS tests/unit/api.quizzes.spec.ts
{"level":30,"time":1755747664862,"pid":21,"hostname":"4829d5d9db2d","requestId":"d1ba4dad-905d-4a38-adb0-c4b76529b1e5","ms":0,"msg":"route_success"}
{"level":30,"time":1755747664864,"pid":21,"hostname":"4829d5d9db2d","requestId":"0e642487-8b63-440a-b5e7-a54a663d5cd6","ms":2,"msg":"route_success"}
{"level":30,"time":1755747664864,"pid":21,"hostname":"4829d5d9db2d","requestId":"d6551090-0da9-4cbc-9609-8eb743b72d14","ms":0,"msg":"route_success"}
{"level":30,"time":1755747664865,"pid":21,"hostname":"4829d5d9db2d","requestId":"5bf9dd6b-11bb-41be-865d-ccab2572c973","ms":0,"msg":"route_success"}
{"level":30,"time":1755747664866,"pid":21,"hostname":"4829d5d9db2d","requestId":"1f5af054-5c38-4015-b5b7-15167368152c","ms":1,"msg":"route_success"}
{"level":30,"time":1755747664867,"pid":21,"hostname":"4829d5d9db2d","requestId":"fa522ff4-cfec-4ce2-8b95-a7449b7ad6e8","ms":1,"msg":"route_success"}
{"level":30,"time":1755747664867,"pid":21,"hostname":"4829d5d9db2d","requestId":"5a97c964-ad9a-4bb6-9353-17bbebffd643","ms":0,"msg":"route_success"}
{"level":30,"time":1755747665831,"pid":21,"hostname":"4829d5d9db2d","requestId":"a1bdafcb-2663-4f61-88c8-b00895f8e074","ms":1,"msg":"route_success"}
{"level":30,"time":1755747665832,"pid":21,"hostname":"4829d5d9db2d","requestId":"bbd89732-87a8-4474-8141-861363afb48f","ms":1,"msg":"route_success"}
{"level":30,"time":1755747665833,"pid":21,"hostname":"4829d5d9db2d","requestId":"6deec37b-5136-4a1e-8e12-4b6df57282ac","ms":0,"msg":"route_success"}
{"level":30,"time":1755747665834,"pid":21,"hostname":"4829d5d9db2d","requestId":"393a2e9c-22bf-4341-87b0-3c5f246abe26","ms":1,"msg":"route_success"}
{"level":30,"time":1755747665834,"pid":21,"hostname":"4829d5d9db2d","requestId":"e2ac33c1-7294-42d3-8e56-9d9d4e96ab18","ms":0,"msg":"route_success"}
{"level":30,"time":1755747665835,"pid":21,"hostname":"4829d5d9db2d","requestId":"c4ae9dba-3996-4d05-af8c-e91739b9772f","ms":1,"msg":"route_success"}
{"level":30,"time":1755747665836,"pid":21,"hostname":"4829d5d9db2d","requestId":"a4c23261-81eb-4dfa-93de-4e3d5bca7917","ms":0,"msg":"route_success"}
{"level":30,"time":1755747665837,"pid":21,"hostname":"4829d5d9db2d","requestId":"2722049d-aca4-4668-8eb6-fb533fc56426","ms":0,"msg":"route_success"}
{"level":30,"time":1755747665837,"pid":21,"hostname":"4829d5d9db2d","requestId":"2ab45489-9ffa-4071-8faa-a6bcfcb4b2c4","ms":0,"msg":"route_success"}
PASS tests/unit/api.quiz-attempts.spec.ts
FAIL tests/unit/api.runtime.auth.exchange.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.runtime.auth.exchange.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.runtime.auth.exchange.spec.ts:2:1)

PASS tests/unit/api.runtime.guard.matrix.spec.ts (6.05 s)
{"level":30,"time":1755747673101,"pid":21,"hostname":"4829d5d9db2d","requestId":"f00e3430-20c1-426d-94b0-38e5d83ffed5","ms":1,"msg":"route_success"}
{"level":30,"time":1755747673108,"pid":21,"hostname":"4829d5d9db2d","requestId":"48f361c2-f849-48d4-b5f9-d1d92445f419","ms":0,"msg":"route_success"}
{"level":30,"time":1755747673110,"pid":21,"hostname":"4829d5d9db2d","requestId":"781c2097-2763-429f-a572-8d93c5d04bae","ms":1,"msg":"route_success"}
{"level":30,"time":1755747673110,"pid":21,"hostname":"4829d5d9db2d","requestId":"48941d00-2d21-45e5-9c3c-390bb482900d","ms":0,"msg":"route_success"}
{"level":30,"time":1755747673111,"pid":21,"hostname":"4829d5d9db2d","requestId":"9b8a97ac-2d43-4be0-a6ff-73346e413082","ms":1,"msg":"route_success"}
{"level":30,"time":1755747673112,"pid":21,"hostname":"4829d5d9db2d","requestId":"c2d5f50f-d21a-443b-9606-1efc2d1fa8ef","ms":1,"msg":"route_success"}
{"level":30,"time":1755747673112,"pid":21,"hostname":"4829d5d9db2d","requestId":"a95bdec6-68b6-40ab-bf55-3bd19098e135","ms":0,"msg":"route_success"}
{"level":30,"time":1755747673113,"pid":21,"hostname":"4829d5d9db2d","requestId":"5eac5cbe-451d-4f54-b9db-0ec3903254df","ms":0,"msg":"route_success"}
{"level":30,"time":1755747673114,"pid":21,"hostname":"4829d5d9db2d","requestId":"87ddd9b4-db15-47c0-bc2f-19e31197531d","ms":1,"msg":"route_success"}
{"level":30,"time":1755747674719,"pid":21,"hostname":"4829d5d9db2d","requestId":"34fd98c2-a081-49c1-9cdd-0f4929ce36c0","ms":1,"msg":"route_success"}
{"level":30,"time":1755747674760,"pid":21,"hostname":"4829d5d9db2d","requestId":"9731ffc9-bfff-4fac-ba18-003b50f9cbbd","ms":28,"msg":"route_success"}
{"level":30,"time":1755747674763,"pid":21,"hostname":"4829d5d9db2d","requestId":"e1b9a024-1db7-437a-8025-881c52258ff4","ms":1,"msg":"route_success"}
{"level":30,"time":1755747674764,"pid":21,"hostname":"4829d5d9db2d","requestId":"a82be3af-056e-4752-a3c5-f2db0a4ec103","ms":1,"msg":"route_success"}
{"level":30,"time":1755747674766,"pid":21,"hostname":"4829d5d9db2d","requestId":"996978c7-83dc-4a7d-849a-194a697b69aa","ms":1,"msg":"route_success"}
{"level":30,"time":1755747674793,"pid":21,"hostname":"4829d5d9db2d","requestId":"2df951ad-7ca3-4ef7-b41a-8e5a46f721f1","ms":26,"msg":"route_success"}
{"level":30,"time":1755747674795,"pid":21,"hostname":"4829d5d9db2d","requestId":"75b6b254-be7e-4beb-8824-42d9bbfd6ee4","ms":1,"msg":"route_success"}
{"level":30,"time":1755747674796,"pid":21,"hostname":"4829d5d9db2d","requestId":"f6a1be91-79d1-4eb0-a2a6-8b8ae1ea640e","ms":0,"msg":"route_success"}
{"level":30,"time":1755747674797,"pid":21,"hostname":"4829d5d9db2d","requestId":"cc8d92e1-26a8-4db8-b5e6-90b8cfd78cca","ms":0,"msg":"route_success"}
{"level":30,"time":1755747674798,"pid":21,"hostname":"4829d5d9db2d","requestId":"74ae9df8-6599-49ca-92e1-9b1dd2431ad8","ms":1,"msg":"route_success"}
PASS tests/unit/api.validation.bad-request.matrix.spec.ts
PASS tests/unit/ui/NotificationsDropdownClient.spec.tsx (9.578 s)
FAIL tests/unit/api.runtime.asset.sign-url.scope.spec.ts
  ● runtime asset sign-url scopes (smoke) › missing scope → 403/401

    TypeError: Failed to parse URL from [object Object]

      32 |
      33 | function post(url: string, body: any, headers?: Record<string,string>) {
    > 34 |   return new Request(url, { method: 'POST', headers: { 'content-type': 'application/json', origin: 'https://provider.example', referer: 'https://provider.example/x', ...(headers||{}) } as any, body: JSON.stringify(body) } as any);
         |          ^
      35 | }
      36 |
      37 | describe('runtime asset sign-url scope', () => {

      at post (unit/api.runtime.asset.sign-url.scope.spec.ts:34:10)
      at Object.<anonymous> (unit/api.runtime.asset.sign-url.scope.spec.ts:13:44)

    Cause:
    TypeError: Invalid URL

      32 |
      33 | function post(url: string, body: any, headers?: Record<string,string>) {
    > 34 |   return new Request(url, { method: 'POST', headers: { 'content-type': 'application/json', origin: 'https://provider.example', referer: 'https://provider.example/x', ...(headers||{}) } as any, body: JSON.stringify(body) } as any);
         |          ^
      35 | }
      36 |
      37 | describe('runtime asset sign-url scope', () => {

      at post (unit/api.runtime.asset.sign-url.scope.spec.ts:34:10)
      at Object.<anonymous> (unit/api.runtime.asset.sign-url.scope.spec.ts:13:44)

  ● runtime asset sign-url scope › valid scope and content-type → 200 with url/key

    expect(received).toContain(expected) // indexOf

    Expected value: 403
    Received array: [200]

      49 |     const token = makeJwt(['files.write']);
      50 |     const res = await (AssetSignPOST as any)(post('http://localhost/api/runtime/asset/sign-url', { content_type: 'image/png' }, { authorization: `Bearer ${token}` }));
    > 51 |     expect([200]).toContain(res.status);
         |                   ^
      52 |     const json = await res.json();
      53 |     expect(json.url).toBeTruthy();
      54 |     expect(json.key).toMatch(/runtime\//);

      at Object.<anonymous> (unit/api.runtime.asset.sign-url.scope.spec.ts:51:19)

  ● runtime asset sign-url scope › unsupported content type → 400

    expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 403

      58 |     const token = makeJwt(['files.write']);
      59 |     const res = await (AssetSignPOST as any)(post('http://localhost/api/runtime/asset/sign-url', { content_type: 'application/x-foo' }, { authorization: `Bearer ${token}` }));
    > 60 |     expect(res.status).toBe(400);
         |                        ^
      61 |   });
      62 | });
      63 |

      at Object.<anonymous> (unit/api.runtime.asset.sign-url.scope.spec.ts:60:24)

{"level":30,"time":1755747686014,"pid":21,"hostname":"4829d5d9db2d","requestId":"3c0e0392-cec1-4822-8fee-1c9a7941cc14","ms":17,"msg":"route_success"}
{"level":30,"time":1755747686026,"pid":21,"hostname":"4829d5d9db2d","requestId":"269b7e68-7278-4ce9-ad97-44c49d83374b","ms":9,"msg":"route_success"}
{"level":30,"time":1755747686037,"pid":21,"hostname":"4829d5d9db2d","requestId":"8cc398c4-332e-48e1-89b0-6382883aea6c","ms":6,"msg":"route_success"}
{"level":30,"time":1755747687204,"pid":21,"hostname":"4829d5d9db2d","requestId":"fde73349-2424-4a90-87de-fe09054bffa1","ms":1,"msg":"route_success"}
{"level":30,"time":1755747687204,"pid":21,"hostname":"4829d5d9db2d","requestId":"1cb23974-24f6-4116-ab1b-f9b88c9707af","ms":0,"msg":"route_success"}
{"level":30,"time":1755747687205,"pid":21,"hostname":"4829d5d9db2d","requestId":"ad9a1c41-5db3-4a0e-9e79-d5a0ce46bb7d","ms":1,"msg":"route_success"}
{"level":30,"time":1755747687206,"pid":21,"hostname":"4829d5d9db2d","requestId":"d65facbe-3e41-4434-99a3-26e0ac10de12","ms":0,"msg":"route_success"}
{"level":30,"time":1755747687206,"pid":21,"hostname":"4829d5d9db2d","requestId":"4f52919b-77be-40a8-8f0d-b5a0e21f5c65","ms":0,"msg":"route_success"}
{"level":30,"time":1755747687207,"pid":21,"hostname":"4829d5d9db2d","requestId":"e4512901-4104-48c1-ab73-4b32ef2c346b","ms":0,"msg":"route_success"}
{"level":30,"time":1755747687208,"pid":21,"hostname":"4829d5d9db2d","requestId":"8c818265-3597-4397-a861-d2ed7dbcc158","ms":0,"msg":"route_success"}
{"level":30,"time":1755747687208,"pid":21,"hostname":"4829d5d9db2d","requestId":"4d3e5d3c-dad7-431a-a320-a6061732cec0","ms":0,"msg":"route_success"}
{"level":30,"time":1755747687209,"pid":21,"hostname":"4829d5d9db2d","requestId":"075bba4c-64fc-4287-9fe2-cd3c5fc676a0","ms":1,"msg":"route_success"}
FAIL tests/unit/api.parent-links.spec.ts
  ● API /api/parent-links › GET unauth → 401; missing parent_id → 400; non-admin self allowed; non-self forbidden

    expect(received).toContain(expected) // indexOf

    Expected value: 403
    Received array: [200, 204]

      58 |     globalThis.__TEST_HEADERS_STORE__?.cookies?.set?.('x-test-auth', 'parent');
      59 |     res = await (PLGet as any)(makeGet('http://localhost/api/parent-links?parent_id=test-parent-id'));
    > 60 |     expect([200, 204]).toContain(res.status);
         |                        ^
      61 |     // parent non-self forbidden
      62 |     res = await (PLGet as any)(makeGet('http://localhost/api/parent-links?parent_id=other-parent-id'));
      63 |     expect(res.status).toBe(403);

      at Object.<anonymous> (unit/api.parent-links.spec.ts:60:24)

FAIL tests/unit/api.runtime.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.runtime.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.runtime.spec.ts:5:1)

FAIL tests/unit/lib.serverFetch.spec.ts
  ● Console

    console.debug
      [serverFetch] 200 /api/ping 0ms

      at serverFetch (../apps/web/src/lib/serverFetch.ts:90:13)

    console.debug
      [serverFetch] 200 http://localhost:3333http://example.com/api/secure 0ms

      at serverFetch (../apps/web/src/lib/serverFetch.ts:90:13)

    console.debug
      [serverFetch] 200 /api/test 0ms

      at serverFetch (../apps/web/src/lib/serverFetch.ts:90:13)

  ● serverFetch utils › serverFetch builds absolute URL and propagates headers when given path

    expect(received).toBe(expected) // Object.is equality

    Expected: "http://localhost:3333/api/ping"
    Received: "/api/ping"

      33 |       (process.env as any).PORT = '3333';
      34 |       await serverFetch('/api/ping', { headers: { 'x-request-id': 'in' } });
    > 35 |       expect(calls[0].url).toBe('http://localhost:3333/api/ping');
         |                            ^
      36 |       expect((calls[0].init.headers as Headers).get('x-request-id')).toBe('in');
      37 |     } finally {
      38 |       global.fetch = old;

      at Object.<anonymous> (unit/lib.serverFetch.spec.ts:35:28)

FAIL tests/unit/api.runtime.outcomes.jwks.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.runtime.outcomes.jwks.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.runtime.outcomes.jwks.spec.ts:2:1)

PASS tests/unit/middleware.headers-and-guards.spec.ts
FAIL tests/unit/api.submissions.rate-limit.spec.ts
  ● submissions rate limits and headers › POST student create returns 429 with standard headers when limited

    TypeError: Failed to parse URL from [object Object]

       5 | }), { virtual: true });
       6 |
    >  7 | function post(url: string, headers?: Record<string,string>, body?: any) { return new Request(url, { method: 'POST', headers: headers as any, body: JSON.stringify(body || {}) } as any); }
         |                                                                                  ^
       8 |
       9 | describe('submissions POST rate limit headers', () => {
      10 |   const orig = { ...process.env } as any;

      at post (unit/api.submissions.rate-limit.spec.ts:7:82)
      at Object.<anonymous> (unit/api.submissions.rate-limit.spec.ts:42:48)

    Cause:
    TypeError: Invalid URL

       5 | }), { virtual: true });
       6 |
    >  7 | function post(url: string, headers?: Record<string,string>, body?: any) { return new Request(url, { method: 'POST', headers: headers as any, body: JSON.stringify(body || {}) } as any); }
         |                                                                                  ^
       8 |
       9 | describe('submissions POST rate limit headers', () => {
      10 |   const orig = { ...process.env } as any;

      at post (unit/api.submissions.rate-limit.spec.ts:7:82)
      at Object.<anonymous> (unit/api.submissions.rate-limit.spec.ts:42:48)

{"level":30,"time":1755747690686,"pid":21,"hostname":"4829d5d9db2d","requestId":"278c6793-434a-4949-b022-e584a87f3fa6","ms":1,"msg":"route_success"}
{"level":30,"time":1755747690687,"pid":21,"hostname":"4829d5d9db2d","requestId":"028b98c8-1a15-4a0a-abd4-769ca39d7904","ms":1,"msg":"route_success"}
{"level":30,"time":1755747690691,"pid":21,"hostname":"4829d5d9db2d","requestId":"c9865b36-b42e-4470-94aa-285bd0f06309","ms":1,"msg":"route_success"}
{"level":30,"time":1755747691805,"pid":21,"hostname":"4829d5d9db2d","requestId":"9222aab4-f91f-472c-85ca-0ffdb17bb0c4","ms":1,"msg":"route_success"}
{"level":30,"time":1755747691806,"pid":21,"hostname":"4829d5d9db2d","requestId":"c346cb86-59ea-4fab-9a17-8471fcfa3f98","ms":0,"msg":"route_success"}
{"level":30,"time":1755747691807,"pid":21,"hostname":"4829d5d9db2d","requestId":"b5a688b0-0db5-4f88-a1ee-3ad49b5cedb0","ms":1,"msg":"route_success"}
{"level":30,"time":1755747691809,"pid":21,"hostname":"4829d5d9db2d","requestId":"6043f582-7594-406c-ab9f-947a7e9d9d05","ms":1,"msg":"route_success"}
{"level":30,"time":1755747691809,"pid":21,"hostname":"4829d5d9db2d","requestId":"adfc9d66-f128-4d55-8444-838fae6d8542","ms":0,"msg":"route_success"}
{"level":30,"time":1755747691810,"pid":21,"hostname":"4829d5d9db2d","requestId":"86ddaf82-6418-4442-9863-10d85fcae33a","ms":0,"msg":"route_success"}
{"level":30,"time":1755747691818,"pid":21,"hostname":"4829d5d9db2d","requestId":"0de4653c-0dc6-44f8-9667-05ac6f970bee","ms":7,"msg":"route_success"}
{"level":30,"time":1755747691819,"pid":21,"hostname":"4829d5d9db2d","requestId":"6abf31b1-9b74-4b27-862c-bca84a76f5d3","ms":1,"msg":"route_success"}
{"level":30,"time":1755747691819,"pid":21,"hostname":"4829d5d9db2d","requestId":"68cb33f1-fb7f-40cb-b3cf-4e061ba09148","ms":0,"msg":"route_success"}
PASS tests/unit/api.announcements.spec.ts
{"level":50,"time":1755747693412,"pid":21,"hostname":"4829d5d9db2d","requestId":"36f4c4cc-50b1-496e-a7cd-3edb257c6f7d","issues":[{"path":"url","message":"Invalid url"}],"msg":"dto_response_validation_failed"}
{"level":30,"time":1755747693412,"pid":21,"hostname":"4829d5d9db2d","requestId":"0059e98e-c75b-498b-a726-e0582dbd1449","ms":2,"msg":"route_success"}
{"level":50,"time":1755747693424,"pid":21,"hostname":"4829d5d9db2d","requestId":"21cc2c27-0e62-4fa1-aa99-e5ce77a1f62e","issues":[{"path":"url","message":"Invalid url"}],"msg":"dto_response_validation_failed"}
{"level":30,"time":1755747693424,"pid":21,"hostname":"4829d5d9db2d","requestId":"561cf2c5-eeb3-4376-b3c9-9915cfc751a5","ms":2,"msg":"route_success"}
{"level":30,"time":1755747693426,"pid":21,"hostname":"4829d5d9db2d","requestId":"05adefa9-a18b-4067-a59d-6371e948ca08","ms":0,"msg":"route_success"}
{"level":30,"time":1755747693507,"pid":21,"hostname":"4829d5d9db2d","requestId":"a5098fab-07b1-4c27-bc6f-2291026c8dce","ms":0,"msg":"route_success"}
{"level":30,"time":1755747693509,"pid":21,"hostname":"4829d5d9db2d","requestId":"196a3cbf-9e4b-4486-a922-81ba040d711b","ms":0,"msg":"route_success"}
FAIL tests/unit/future.files.spec.ts
  ● Epic H: Files and Media › issues an upload URL for a given owner and content type

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

       6 |     globalThis.__TEST_HEADERS_STORE__.cookies.set('x-test-auth', 'teacher');
       7 |     const res = await mod.POST(new Request('http://localhost/api/files/upload-url', { method: 'POST', headers: { 'content-type': 'application/json', 'x-test-auth': 'teacher' }, body: JSON.stringify({ owner_type: 'assignment', owner_id: 'a1', content_type: 'text/plain' }) }) as any);
    >  8 |     expect(res.status).toBe(200);
         |                        ^
       9 |     const json = await res.json();
      10 |     expect(json.url).toContain('/api/files/upload-url');
      11 |   });

      at Object.<anonymous> (unit/future.files.spec.ts:8:24)

  ● Epic H: Files and Media › accepts PUT upload and returns a public download URL, then serves bytes

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      17 |     globalThis.__TEST_HEADERS_STORE__.cookies.set('x-test-auth', 'teacher');
      18 |     const res = await mod.PUT(new Request('http://localhost/api/files/upload-url?owner_type=assignment&owner_id=a1&content_type=text/plain', { method: 'PUT', headers: { 'x-test-auth': 'teacher' }, body: new TextEncoder().encode('hello') }) as any);
    > 19 |     expect(res.status).toBe(200);
         |                        ^
      20 |     const { id, url } = await res.json();
      21 |     expect(id).toBeTruthy();
      22 |     const dl = await import('../../apps/web/src/app/api/files/download-url/route');

      at Object.<anonymous> (unit/future.files.spec.ts:19:24)

FAIL tests/unit/api.runtime.checkpoint.scopes.spec.ts
  ● runtime checkpoint scopes › save requires progress.write; load requires progress.read

    expect(received).toContain(expected) // indexOf

    Expected value: 403
    Received array: [200, 201, 204]

      35 |     token = makeJwt(['progress.write']);
      36 |     res = await (SavePOST as any)(post('http://localhost/api/runtime/checkpoint/save', { key: 'k', state: { a: 1 } }, { authorization: `Bearer ${token}` }));
    > 37 |     expect([200,201,204]).toContain(res.status);
         |                           ^
      38 |     // Load without scope -> 403
      39 |     token = makeJwt([]);
      40 |     res = await (LoadGET as any)(get('http://localhost/api/runtime/checkpoint/load?key=k', { authorization: `Bearer ${token}` }));

      at Object.<anonymous> (unit/api.runtime.checkpoint.scopes.spec.ts:37:27)

{"level":30,"time":1755747695362,"pid":21,"hostname":"4829d5d9db2d","requestId":"3654941b-2d57-40b2-95e1-93b1c7034fda","ms":51,"msg":"route_success"}
{"level":30,"time":1755747695389,"pid":21,"hostname":"4829d5d9db2d","requestId":"e489d589-f429-4fd5-a83d-b7008ce20a2a","ms":25,"msg":"route_success"}
{"level":30,"time":1755747697259,"pid":21,"hostname":"4829d5d9db2d","requestId":"b2c42a8b-1413-4dbc-ae77-3c7b8cee4935","ms":6,"msg":"route_success"}
{"level":30,"time":1755747697262,"pid":21,"hostname":"4829d5d9db2d","requestId":"3f7d559d-333f-4e74-b0bd-88ace245e617","ms":2,"msg":"route_success"}
{"level":30,"time":1755747697263,"pid":21,"hostname":"4829d5d9db2d","requestId":"59aabb6f-1e01-434a-9fcd-4654f8e8014a","ms":1,"msg":"route_success"}
{"level":30,"time":1755747697264,"pid":21,"hostname":"4829d5d9db2d","requestId":"20f30fa3-29be-4bde-a763-7e81c4d355c0","ms":1,"msg":"route_success"}
FAIL tests/unit/api.messages.threads-and-messages.spec.ts
  ● messages threads and messages (TEST_MODE) › thread create has unique participants; unread counts adjust with read

    expect(received).toContain(expected) // indexOf

    Expected value: undefined
    Received array: [0, 1]

      30 |     const teacherThreads = await listTeacherThreads.json();
      31 |     const tRow = teacherThreads.find((x: any) => x.id === thread.id);
    > 32 |     expect([0,1]).toContain(tRow.unread);
         |                   ^
      33 |
      34 |     // mark student's message read as teacher
      35 |     const msgsList = await (MessagesGET as any)(getUrl(`http://localhost/api/messages?thread_id=${thread.id}`, { 'x-test-auth': 'teacher' }));

      at Object.<anonymous> (unit/api.messages.threads-and-messages.spec.ts:32:19)

PASS tests/unit/api.registry.spec.ts
FAIL tests/unit/api.admin.governance.smoke.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.admin.governance.smoke.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.admin.governance.smoke.spec.ts:1:1)

{"level":30,"time":1755747699165,"pid":21,"hostname":"4829d5d9db2d","requestId":"476d50b0-6931-4be8-bfd7-4267f2c9af28","ms":2,"msg":"route_success"}
{"level":30,"time":1755747699167,"pid":21,"hostname":"4829d5d9db2d","requestId":"687191d5-b2a0-4cf7-94e8-b7b15cc100ae","ms":1,"msg":"route_success"}
{"level":30,"time":1755747699175,"pid":21,"hostname":"4829d5d9db2d","requestId":"adcdd2a6-8b1b-4455-995e-f6b430b8fab3","ms":2,"msg":"route_success"}
{"level":30,"time":1755747699177,"pid":21,"hostname":"4829d5d9db2d","requestId":"a6e958b6-e358-4ea3-b408-58a2a2b93e9e","ms":0,"msg":"route_success"}
{"level":30,"time":1755747699178,"pid":21,"hostname":"4829d5d9db2d","requestId":"7a792710-a374-48f2-9df8-78d76d6d59a6","ms":1,"msg":"route_success"}
{"level":30,"time":1755747699180,"pid":21,"hostname":"4829d5d9db2d","requestId":"f24b7614-e956-47a1-a82f-0abcd26e4032","ms":0,"msg":"route_success"}
{"level":30,"time":1755747701282,"pid":21,"hostname":"4829d5d9db2d","requestId":"3b09d4c7-c2c6-4a3c-adae-91ff48e54796","ms":31,"msg":"route_success"}
{"level":30,"time":1755747701291,"pid":21,"hostname":"4829d5d9db2d","requestId":"75baacbc-2847-4c34-88ed-e0ab64411052","ms":9,"msg":"route_success"}
FAIL tests/unit/api.runtime.events.scopes.spec.ts
  ● runtime events scopes › course.progress requires progress.write; course.attempt.completed requires attempts.write

    expect(received).toContain(expected) // indexOf

    Expected value: 403
    Received array: [200, 201, 204]

      31 |     token = makeJwt(['progress.write']);
      32 |     res = await (EventsPOST as any)(post('http://localhost/api/runtime/events', { type: 'course.progress', pct: 10 }, { authorization: `Bearer ${token}` }));
    > 33 |     expect([200,201,204]).toContain(res.status);
         |                           ^
      34 |     // Missing attempts.write for attempt.completed -> 403
      35 |     token = makeJwt([]);
      36 |     res = await (EventsPOST as any)(post('http://localhost/api/runtime/events', { type: 'course.attempt.completed', score: 1, max: 1, passed: true }, { authorization: `Bearer ${token}` }));

      at Object.<anonymous> (unit/api.runtime.events.scopes.spec.ts:33:27)

FAIL tests/unit/api.files.download-url.permissions.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.files.download-url.permissions.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.files.download-url.permissions.spec.ts:2:1)

FAIL tests/unit/security.csrf.double-submit.spec.ts
  ● CSRF double-submit enforcement (wrapper-level) › messages POST with matching token allowed through wrapper (may still 401/429 deeper)

    expect(received).toContain(expected) // indexOf

    Expected value: 400
    Received array: [201, 401, 403, 429, 500]

      31 |     const headers: HeadersMap = { 'x-test-auth': 'student', 'content-type': 'application/json', 'x-csrf-token': 'abc', cookie: 'csrf_token=abc' };
      32 |     const res = await (MessagesPOST as any)(req('http://localhost/api/messages', { method: 'POST', headers, body: JSON.stringify({ thread_id: 't1', body: 'hi' }) }));
    > 33 |     expect([201,401,403,429,500]).toContain(res.status);
         |                                   ^
      34 |   });
      35 |
      36 |   test('assignments PATCH without token rejected when enabled', async () => {

      at Object.<anonymous> (unit/security.csrf.double-submit.spec.ts:33:35)

{"level":30,"time":1755747704863,"pid":21,"hostname":"4829d5d9db2d","requestId":"70f14504-af61-43f4-ac60-54b5cf21a542","ms":1,"msg":"route_success"}
{"level":30,"time":1755747706502,"pid":21,"hostname":"4829d5d9db2d","requestId":"rq-a","ms":4,"msg":"route_success"}
{"level":30,"time":1755747706503,"pid":21,"hostname":"4829d5d9db2d","requestId":"a4dc5dd2-7175-401c-ba3a-3b4c1dc302bb","ms":1,"msg":"route_success"}
{"level":30,"time":1755747706503,"pid":21,"hostname":"4829d5d9db2d","requestId":"0ad79164-8d3f-40a4-b77c-0ff4ebbd18cd","ms":0,"msg":"route_success"}
{"level":30,"time":1755747706507,"pid":21,"hostname":"4829d5d9db2d","requestId":"92f686b9-a0a3-4427-9017-e05124be157b","ms":2,"msg":"route_success"}
{"level":30,"time":1755747706507,"pid":21,"hostname":"4829d5d9db2d","requestId":"45ad41cf-4b2f-473f-89a9-ca07b6b35d1c","ms":0,"msg":"route_success"}
{"level":30,"time":1755747706510,"pid":21,"hostname":"4829d5d9db2d","requestId":"d0568403-8794-4dbe-b9ac-a6a5f533e3d1","ms":1,"msg":"route_success"}
{"level":50,"time":1755747706513,"pid":21,"hostname":"4829d5d9db2d","requestId":"8e8bf639-ba05-43c5-9c5a-87b1abfa85d9","issues":[{"path":"id","message":"Required"},{"path":"course_id","message":"Required"},{"path":"title","message":"Required"},{"path":"created_at","message":"Required"}],"msg":"dto_response_validation_failed"}
{"level":30,"time":1755747706513,"pid":21,"hostname":"4829d5d9db2d","requestId":"4767dbfb-425f-4280-afc3-65ecd53f84df","ms":3,"msg":"route_success"}
FAIL tests/unit/api.assignments.crud.spec.ts
  ● Assignments CRUD API › DELETE role checks

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      43 |     expect(res.status).toBe(403);
      44 |     res = await (AssignDELETE as any)(makeDelete('http://localhost/api/assignments?id=aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', { 'x-test-auth': 'teacher' }));
    > 45 |     expect(res.status).toBe(200);
         |                        ^
      46 |   });
      47 | });
      48 |

      at Object.<anonymous> (unit/api.assignments.crud.spec.ts:45:24)

FAIL tests/unit/api.role.guard.matrix.extended.spec.ts (18.266 s)
  ● admin/registry/users role guard matrix › {
  name: 'admin/audit-logs',
  url: 'http://localhost/api/admin/audit-logs',
  handler: [AsyncFunction (anonymous)],
  role: 'student'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'admin/audit-logs',
  url: 'http://localhost/api/admin/audit-logs',
  handler: [AsyncFunction (anonymous)],
  role: 'teacher'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'admin/audit-logs',
  url: 'http://localhost/api/admin/audit-logs',
  handler: [AsyncFunction (anonymous)],
  role: 'parent'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'admin/audit-logs',
  url: 'http://localhost/api/admin/audit-logs',
  handler: [AsyncFunction (anonymous)],
  role: 'admin'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'admin/export',
  url: 'http://localhost/api/admin/export',
  handler: [AsyncFunction (anonymous)],
  role: 'student'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'admin/export',
  url: 'http://localhost/api/admin/export',
  handler: [AsyncFunction (anonymous)],
  role: 'teacher'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'admin/export',
  url: 'http://localhost/api/admin/export',
  handler: [AsyncFunction (anonymous)],
  role: 'parent'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'admin/export',
  url: 'http://localhost/api/admin/export',
  handler: [AsyncFunction (anonymous)],
  role: 'admin'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'admin/metrics',
  url: 'http://localhost/api/admin/metrics',
  handler: [AsyncFunction (anonymous)],
  role: 'student'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'admin/metrics',
  url: 'http://localhost/api/admin/metrics',
  handler: [AsyncFunction (anonymous)],
  role: 'teacher'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'admin/metrics',
  url: 'http://localhost/api/admin/metrics',
  handler: [AsyncFunction (anonymous)],
  role: 'parent'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'admin/metrics',
  url: 'http://localhost/api/admin/metrics',
  handler: [AsyncFunction (anonymous)],
  role: 'admin'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'admin/quotas',
  url: 'http://localhost/api/admin/quotas',
  handler: [AsyncFunction (anonymous)],
  role: 'student'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'admin/quotas',
  url: 'http://localhost/api/admin/quotas',
  handler: [AsyncFunction (anonymous)],
  role: 'teacher'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'admin/quotas',
  url: 'http://localhost/api/admin/quotas',
  handler: [AsyncFunction (anonymous)],
  role: 'parent'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'admin/quotas',
  url: 'http://localhost/api/admin/quotas',
  handler: [AsyncFunction (anonymous)],
  role: 'admin'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'users',
  url: 'http://localhost/api/users',
  handler: [AsyncFunction (anonymous)],
  role: 'student'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'users',
  url: 'http://localhost/api/users',
  handler: [AsyncFunction (anonymous)],
  role: 'teacher'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'users',
  url: 'http://localhost/api/users',
  handler: [AsyncFunction (anonymous)],
  role: 'parent'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'users',
  url: 'http://localhost/api/users',
  handler: [AsyncFunction (anonymous)],
  role: 'admin'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'providers/health',
  url: 'http://localhost/api/providers/health',
  handler: [AsyncFunction (anonymous)],
  role: 'student'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'providers/health',
  url: 'http://localhost/api/providers/health',
  handler: [AsyncFunction (anonymous)],
  role: 'teacher'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'providers/health',
  url: 'http://localhost/api/providers/health',
  handler: [AsyncFunction (anonymous)],
  role: 'parent'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'providers/health',
  url: 'http://localhost/api/providers/health',
  handler: [AsyncFunction (anonymous)],
  role: 'admin'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'registry/courses',
  url: 'http://localhost/api/registry/courses',
  handler: [AsyncFunction (anonymous)],
  role: 'student'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'registry/courses',
  url: 'http://localhost/api/registry/courses',
  handler: [AsyncFunction (anonymous)],
  role: 'teacher'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'registry/courses',
  url: 'http://localhost/api/registry/courses',
  handler: [AsyncFunction (anonymous)],
  role: 'parent'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'registry/courses',
  url: 'http://localhost/api/registry/courses',
  handler: [AsyncFunction (anonymous)],
  role: 'admin'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

FAIL tests/unit/api.providers.ratelimit.spec.ts
  ● providers create/update/delete rate-limit headers › POST returns 429 with standard headers when limited

    TypeError: supabase.from(...).insert is not a function

      69 |   }
      70 |   const supabase = getRouteHandlerSupabase();
    > 71 |   const { data, error } = await supabase.from('course_providers').insert({ name, jwks_url, domain }).select().single();
         |                                                                   ^
      72 |   if (error) return NextResponse.json({ error: { code: 'DB_ERROR', message: error.message }, requestId }, { status: 500, headers: { 'x-request-id': requestId } });
      73 |   try {
      74 |     await supabase.from('audit_logs').insert({ actor_id: user.id, action: 'provider.create', entity_type: 'provider', entity_id: (data as any).id, details: { name, domain } });

      at POST (../apps/web/src/app/api/providers/route.ts:71:67)
      at Object.POST (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.providers.ratelimit.spec.ts:17:17)

  ● providers create/update/delete rate-limit headers › PATCH returns 429 with standard headers when limited

    TypeError: supabase.from(...).update is not a function

      138 |   if (Object.keys(patch).length === 0) return NextResponse.json({ error: { code: 'BAD_REQUEST', message: 'no fields to update' }, requestId }, { status: 400, headers: { 'x-request-id': requestId } });
      139 |   const supabase = getRouteHandlerSupabase();
    > 140 |   const { data, error } = await supabase.from('course_providers').update(patch).eq('id', q.id).select().single();
          |                                                                   ^
      141 |   if (error) return NextResponse.json({ error: { code: 'DB_ERROR', message: error.message }, requestId }, { status: 500, headers: { 'x-request-id': requestId } });
      142 |   try {
      143 |     await supabase.from('audit_logs').insert({ actor_id: user.id, action: 'provider.update', entity_type: 'provider', entity_id: q.id, details: patch });

      at PATCH (../apps/web/src/app/api/providers/route.ts:140:67)
      at Object.PATCH (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.providers.ratelimit.spec.ts:27:17)

  ● providers create/update/delete rate-limit headers › DELETE returns 429 with standard headers when limited

    TypeError: supabase.from(...).delete is not a function

      174 |   try { q = parseQuery(req, idSchema); } catch (e: any) { return NextResponse.json({ error: { code: 'BAD_REQUEST', message: e.message }, requestId }, { status: 400, headers: { 'x-request-id': requestId } }); }
      175 |   const supabase = getRouteHandlerSupabase();
    > 176 |   const { error } = await supabase.from('course_providers').delete().eq('id', q.id);
          |                                                                   ^
      177 |   if (error) return NextResponse.json({ error: { code: 'DB_ERROR', message: error.message }, requestId }, { status: 500, headers: { 'x-request-id': requestId } });
      178 |   try {
      179 |     await supabase.from('audit_logs').insert({ actor_id: user.id, action: 'provider.delete', entity_type: 'provider', entity_id: q.id, details: {} });

      at DELETE (../apps/web/src/app/api/providers/route.ts:176:67)
      at Object.DELETE (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.providers.ratelimit.spec.ts:36:17)

{"level":50,"time":1755747725730,"pid":21,"hostname":"4829d5d9db2d","requestId":"65ad2d89-bd25-4893-a7fe-a61a5726eb84","ms":1,"err":"supabase.from(...).insert is not a function","msg":"route_error"}
{"level":50,"time":1755747725754,"pid":21,"hostname":"4829d5d9db2d","requestId":"0da84442-5902-464d-97fa-819f149ca1e0","ms":2,"err":"supabase.from(...).update is not a function","msg":"route_error"}
{"level":50,"time":1755747725756,"pid":21,"hostname":"4829d5d9db2d","requestId":"588ca51f-0084-47eb-b4a0-056bf5a75826","ms":1,"err":"supabase.from(...).delete is not a function","msg":"route_error"}
PASS tests/unit/apiHandler.csrf.spec.ts
PASS tests/unit/api.listing.headers.matrix.spec.ts
{"level":30,"time":1755747727014,"pid":21,"hostname":"4829d5d9db2d","requestId":"bcc24305-7148-4124-8a24-1c6b9f847bdf","ms":0,"msg":"route_success"}
{"level":30,"time":1755747727018,"pid":21,"hostname":"4829d5d9db2d","requestId":"1290b76c-09eb-445c-9f20-1894759ed80d","ms":0,"msg":"route_success"}
{"level":30,"time":1755747727019,"pid":21,"hostname":"4829d5d9db2d","requestId":"90ee1106-f824-475e-9c35-03e9ff3b2bb1","ms":0,"msg":"route_success"}
{"level":30,"time":1755747727020,"pid":21,"hostname":"4829d5d9db2d","requestId":"b7e042f8-8737-4618-a628-e281d5d31f79","ms":0,"msg":"route_success"}
{"level":30,"time":1755747727021,"pid":21,"hostname":"4829d5d9db2d","requestId":"19ceef80-016f-4652-b680-affef4f3e040","ms":0,"msg":"route_success"}
{"level":30,"time":1755747728915,"pid":21,"hostname":"4829d5d9db2d","requestId":"ca608f65-b9cd-4fff-92cb-b6eeba9deba6","ms":1,"msg":"route_success"}
{"level":30,"time":1755747728916,"pid":21,"hostname":"4829d5d9db2d","requestId":"79b27cfc-8ddf-4dcb-adb9-8c05c88e202d","ms":0,"msg":"route_success"}
{"level":30,"time":1755747728919,"pid":21,"hostname":"4829d5d9db2d","requestId":"4285381d-5d86-4ca9-aff8-1bea58cbc015","ms":1,"msg":"route_success"}
{"level":30,"time":1755747728919,"pid":21,"hostname":"4829d5d9db2d","lessonId":"00000000-0000-0000-0000-00000000ab02","userId":"22222222-2222-2222-2222-222222222222","ms":0,"msg":"progress_marked"}
{"level":30,"time":1755747728920,"pid":21,"hostname":"4829d5d9db2d","requestId":"17a79f7c-4640-45d5-ab95-e91ed6355a29","ms":1,"msg":"route_success"}
{"level":30,"time":1755747728921,"pid":21,"hostname":"4829d5d9db2d","requestId":"bccf0d91-d15f-4952-a653-66e0c5664d9e","ms":0,"msg":"route_success"}
{"level":30,"time":1755747728922,"pid":21,"hostname":"4829d5d9db2d","lessonId":"11111111-1111-1111-1111-111111111111","userId":"22222222-2222-2222-2222-222222222222","ms":0,"msg":"progress_marked"}
{"level":30,"time":1755747728922,"pid":21,"hostname":"4829d5d9db2d","requestId":"b9900518-4da8-4261-a094-2133026220e5","ms":0,"msg":"route_success"}
PASS tests/unit/api.lessons.complete.spec.ts
PASS tests/unit/gateways/SubmissionsGateway.contract.spec.ts
  ● Console

    console.debug
      [serverFetch] 200 /api/submissions 0ms

      at serverFetch (../apps/web/src/lib/serverFetch.ts:90:13)

    console.debug
      [serverFetch] 200 /api/submissions 1ms

      at serverFetch (../apps/web/src/lib/serverFetch.ts:90:13)

PASS tests/unit/services.quizAttempts.spec.ts
FAIL tests/unit/api.runtime.checkpoint.size-limit.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.runtime.checkpoint.size-limit.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.runtime.checkpoint.size-limit.spec.ts:1:1)

FAIL tests/unit/api.admin.export.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.admin.export.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.admin.export.spec.ts:3:1)

PASS tests/unit/api.headers.common.matrix.spec.ts
FAIL tests/unit/api.runtime.outcomes.runtime-token.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.runtime.outcomes.runtime-token.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.runtime.outcomes.runtime-token.spec.ts:2:1)

{"level":30,"time":1755747732696,"pid":21,"hostname":"4829d5d9db2d","requestId":"b1f4d891-eeb3-4d97-a670-bf7dc651485e","ms":0,"msg":"route_success"}
{"level":30,"time":1755747732698,"pid":21,"hostname":"4829d5d9db2d","requestId":"100afaac-b16f-4852-99cd-4ec312f12d4d","ms":0,"msg":"route_success"}
{"level":30,"time":1755747732698,"pid":21,"hostname":"4829d5d9db2d","requestId":"9fe2b82d-51d6-425a-a8a0-2d6794e4e17a","ms":0,"msg":"route_success"}
{"level":30,"time":1755747732699,"pid":21,"hostname":"4829d5d9db2d","requestId":"678616cf-4b73-4fdd-8836-107cb550cee2","ms":1,"msg":"route_success"}
{"level":30,"time":1755747732699,"pid":21,"hostname":"4829d5d9db2d","requestId":"7ed17d91-cdcf-4783-a7b0-6e8316dce6cc","ms":0,"msg":"route_success"}
{"level":30,"time":1755747732700,"pid":21,"hostname":"4829d5d9db2d","requestId":"7658a40d-d19e-40ff-bd49-0b83420d626e","ms":0,"msg":"route_success"}
{"level":30,"time":1755747732700,"pid":21,"hostname":"4829d5d9db2d","requestId":"e9ef5ab0-4794-4c87-97b6-658c7549a4f1","ms":0,"msg":"route_success"}
{"level":30,"time":1755747732702,"pid":21,"hostname":"4829d5d9db2d","requestId":"b72794f9-93ea-413c-86ff-cdb120873377","ms":0,"msg":"route_success"}
{"level":30,"time":1755747732707,"pid":21,"hostname":"4829d5d9db2d","requestId":"d2e482b8-cb47-441d-885f-b280b797e9eb","ms":1,"msg":"route_success"}
FAIL tests/unit/middleware.cors.disallowed-origin.spec.ts
  ● middleware CSP connect-src allowlist propagation › includes origins from RUNTIME_CORS_ALLOW in CSP via guard path

    expect(received).toMatch(expected)

    Expected pattern: /connect-src [^;]*https:\/\/api\.provider1/
    Received string:  ""

      33 |     const res: any = await (middleware as any)(makeReq('http://localhost/api/health'));
      34 |     const csp = res.headers.get('Content-Security-Policy') || '';
    > 35 |     expect(csp).toMatch(/connect-src [^;]*https:\/\/api\.provider1/);
         |                 ^
      36 |     expect(csp).toMatch(/connect-src [^;]*https:\/\/api\.provider2/);
      37 |   });
      38 | });

      at Object.<anonymous> (unit/middleware.cors.disallowed-origin.spec.ts:35:17)

PASS tests/unit/testStore.edgecases.spec.ts
FAIL tests/unit/server.scheduler.flags.spec.ts
  ● scheduler ensureJobsStarted flags › DUE_SOON_JOB=1 schedules due-soon job

    expect(received).toContain(expected) // indexOf

    Expected value: "assignment_due_soon"
    Received array: []

      26 |     mod.ensureJobsStarted();
      27 |     const calls = (scheduleJob as jest.Mock).mock.calls.map((c: any[]) => c[0]);
    > 28 |     expect(calls).toContain('assignment_due_soon');
         |                   ^
      29 |   });
      30 |
      31 |   test('PROVIDER_HEALTH_REFRESH_JOB=1 schedules provider health refresh', async () => {

      at Object.<anonymous> (unit/server.scheduler.flags.spec.ts:28:19)

  ● scheduler ensureJobsStarted flags › PROVIDER_HEALTH_REFRESH_JOB=1 schedules provider health refresh

    expect(received).toContain(expected) // indexOf

    Expected value: "provider_health_refresh"
    Received array: []

      34 |     mod.ensureJobsStarted();
      35 |     const calls = (scheduleJob as jest.Mock).mock.calls.map((c: any[]) => c[0]);
    > 36 |     expect(calls).toContain('provider_health_refresh');
         |                   ^
      37 |   });
      38 |
      39 |   test('REFRESH_PROGRESS_SUMMARY_JOB=1 schedules progress mv refresh', async () => {

      at Object.<anonymous> (unit/server.scheduler.flags.spec.ts:36:19)

  ● scheduler ensureJobsStarted flags › REFRESH_PROGRESS_SUMMARY_JOB=1 schedules progress mv refresh

    expect(received).toContain(expected) // indexOf

    Expected value: "refresh_progress_summary"
    Received array: []

      42 |     mod.ensureJobsStarted();
      43 |     const calls = (scheduleJob as jest.Mock).mock.calls.map((c: any[]) => c[0]);
    > 44 |     expect(calls).toContain('refresh_progress_summary');
         |                   ^
      45 |   });
      46 |
      47 |   test('QUOTA_RECONCILE_JOB=1 schedules quota reconcile', async () => {

      at Object.<anonymous> (unit/server.scheduler.flags.spec.ts:44:19)

  ● scheduler ensureJobsStarted flags › QUOTA_RECONCILE_JOB=1 schedules quota reconcile

    expect(received).toContain(expected) // indexOf

    Expected value: "quota_reconcile"
    Received array: []

      50 |     mod.ensureJobsStarted();
      51 |     const calls = (scheduleJob as jest.Mock).mock.calls.map((c: any[]) => c[0]);
    > 52 |     expect(calls).toContain('quota_reconcile');
         |                   ^
      53 |   });
      54 |
      55 |   test('BACKFILL_ATTACHMENT_SIZES_JOB=1 schedules backfill', async () => {

      at Object.<anonymous> (unit/server.scheduler.flags.spec.ts:52:19)

  ● scheduler ensureJobsStarted flags › BACKFILL_ATTACHMENT_SIZES_JOB=1 schedules backfill

    expect(received).toContain(expected) // indexOf

    Expected value: "attachment_size_backfill"
    Received array: []

      58 |     mod.ensureJobsStarted();
      59 |     const calls = (scheduleJob as jest.Mock).mock.calls.map((c: any[]) => c[0]);
    > 60 |     expect(calls).toContain('attachment_size_backfill');
         |                   ^
      61 |   });
      62 | });
      63 |

      at Object.<anonymous> (unit/server.scheduler.flags.spec.ts:60:19)

FAIL tests/unit/api.messages.read-all.spec.ts
  ● API /api/messages/threads/[id]/read-all › marks all messages as read for participant; non-participant remains unaffected (TEST_MODE)

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      25 |     globalThis.__TEST_HEADERS_STORE__?.cookies?.set?.('x-test-auth', 'student');
      26 |     const res = await (ReadAllPATCH as any)(makePatch(`http://localhost/api/messages/threads/${th.id}/read-all`), { params: { id: th.id } } as any);
    > 27 |     expect(res.status).toBe(200);
         |                        ^
      28 |     const json = await res.json();
      29 |     expect(json.ok).toBe(true);
      30 |   });

      at Object.<anonymous> (unit/api.messages.read-all.spec.ts:27:24)

  ● messages threads read-all PATCH idempotency (smoke) › idempotent in test-mode (200 both times)

    expect(received).toContain(expected) // indexOf

    Expected value: 500
    Received array: [200, 401, 403]

      45 |     const res1 = await (ThreadsReadAllPATCH as any)(makePatch(url, headers));
      46 |     const res2 = await (ThreadsReadAllPATCH as any)(makePatch(url, headers));
    > 47 |     expect([200,401,403]).toContain(res1.status);
         |                           ^
      48 |     expect([200,401,403]).toContain(res2.status);
      49 |   });
      50 | });

      at Object.<anonymous> (unit/api.messages.read-all.spec.ts:47:27)

{"level":30,"time":1755747736788,"pid":21,"hostname":"4829d5d9db2d","requestId":"d198997e-1e5b-442e-8ba2-a68c573e9d00","ms":0,"msg":"route_success"}
{"level":50,"time":1755747736789,"pid":21,"hostname":"4829d5d9db2d","requestId":"327ad9a9-a968-4104-adba-8f477136cff0","issues":[{"path":"updated","message":"Required"}],"msg":"dto_response_validation_failed"}
{"level":30,"time":1755747736790,"pid":21,"hostname":"4829d5d9db2d","requestId":"d2ed6bc6-9584-454c-adfc-ee1f15b1268b","ms":1,"msg":"route_success"}
{"level":30,"time":1755747736792,"pid":21,"hostname":"4829d5d9db2d","requestId":"311d4f90-7e87-42f2-823c-51bcde4dffaa","ms":0,"msg":"route_success"}
{"level":50,"time":1755747736793,"pid":21,"hostname":"4829d5d9db2d","requestId":"92f867a9-028f-45ae-b76e-c5c5bd6986de","issues":[{"path":"updated","message":"Required"}],"msg":"dto_response_validation_failed"}
{"level":30,"time":1755747736793,"pid":21,"hostname":"4829d5d9db2d","requestId":"44990597-3944-41e7-a2e1-18f2e999ccf7","ms":1,"msg":"route_success"}
{"level":50,"time":1755747736793,"pid":21,"hostname":"4829d5d9db2d","requestId":"16f70696-d08b-40d5-a2f7-750f8ee90c63","issues":[{"path":"updated","message":"Required"}],"msg":"dto_response_validation_failed"}
{"level":30,"time":1755747736793,"pid":21,"hostname":"4829d5d9db2d","requestId":"5cbe675a-0cb7-4eb5-845f-66fd1ddef20f","ms":0,"msg":"route_success"}
{"level":30,"time":1755747737702,"pid":21,"hostname":"4829d5d9db2d","requestId":"c32621eb-596f-4418-9448-143daa9acb45","ms":1,"msg":"route_success"}
{"level":30,"time":1755747737703,"pid":21,"hostname":"4829d5d9db2d","requestId":"434bc052-1833-4a45-ac3f-c7ba9fa1b8ea","ms":0,"msg":"route_success"}
{"level":30,"time":1755747737703,"pid":21,"hostname":"4829d5d9db2d","requestId":"8d7f3ba5-b6b4-4a42-81c4-86c1426c0b68","ms":0,"msg":"route_success"}
PASS tests/unit/api.files.upload-url.rate-quota-csrf.spec.ts
PASS tests/unit/api.courses.id.spec.ts
{"level":30,"time":1755747739337,"pid":21,"hostname":"4829d5d9db2d","requestId":"28fc0c27-f350-4ddf-9965-637915008511","ms":1,"msg":"route_success"}
{"level":30,"time":1755747739338,"pid":21,"hostname":"4829d5d9db2d","requestId":"df9557fe-8555-4bcb-8c35-5de647c18b20","ms":1,"msg":"route_success"}
{"level":30,"time":1755747739339,"pid":21,"hostname":"4829d5d9db2d","requestId":"rq-test","ms":1,"msg":"route_success"}
{"level":30,"time":1755747739341,"pid":21,"hostname":"4829d5d9db2d","requestId":"39d21bfa-fac7-4792-866a-572d1acbd35b","ms":1,"msg":"route_success"}
{"level":30,"time":1755747739341,"pid":21,"hostname":"4829d5d9db2d","requestId":"882fdb92-772d-4a98-9f68-d01e6fdbd677","ms":0,"msg":"route_success"}
PASS tests/unit/services.submissions.queue.spec.ts
PASS tests/unit/lib.logger.redaction.spec.ts
PASS tests/unit/ui/GradeRowClient.spec.tsx
PASS tests/unit/api.runtime.asset.sign-url.ratelimit.spec.ts
FAIL tests/unit/api.files.attachments.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.files.attachments.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.files.attachments.spec.ts:3:1)

{"level":30,"time":1755747746874,"pid":21,"hostname":"4829d5d9db2d","requestId":"f8b1784f-ef0d-43e4-984e-556fa92834ed","ms":43,"msg":"route_success"}
{"level":30,"time":1755747746896,"pid":21,"hostname":"4829d5d9db2d","requestId":"c11ae20c-1678-4779-bdbc-a4e67777ab64","ms":21,"msg":"route_success"}
{"level":30,"time":1755747748823,"pid":21,"hostname":"4829d5d9db2d","requestId":"338c216d-0d2d-48a9-9ee6-f3121f1c93de","ms":27,"msg":"route_success"}
PASS tests/unit/api.runtime.rate-limit.spec.ts
FAIL tests/unit/api.launch-token.license.enforcement.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.launch-token.license.enforcement.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.launch-token.license.enforcement.spec.ts:1:1)

FAIL tests/unit/lib.serverFetch.csrf-header.spec.ts
  ● Console

    console.debug
      [serverFetch] 200 /api/messages 0ms

      at serverFetch (../apps/web/src/lib/serverFetch.ts:90:13)

  ● serverFetch forwards x-csrf-token when cookie present › adds x-csrf-token header for unsafe method

    expect(received).toBe(expected) // Object.is equality

    Expected: "abc123"
    Received: "cookie-csrf"

      45 |     await serverFetch('/api/messages', { method: 'POST' });
      46 |     const h = calls[0].init.headers as Headers;
    > 47 |     expect(h.get('x-csrf-token')).toBe('abc123');
         |                                   ^
      48 |   });
      49 | });
      50 |

      at Object.<anonymous> (unit/lib.serverFetch.csrf-header.spec.ts:47:35)

FAIL tests/unit/api.runtime.grade.ratelimit.spec.ts
  ● runtime grade rate-limit headers › returns 201 first, then 429 with standard headers

    expect(received).toContain(expected) // indexOf

    Expected value: 403
    Received array: [200, 201]

      25 |     const h = { authorization: `Bearer ${token}` };
      26 |     let res = await (GradePOST as any)(post({ runtimeAttemptId: 'ra1', score: 1, max: 1, passed: true }, h));
    > 27 |     expect([200,201]).toContain(res.status);
         |                       ^
      28 |     res = await (GradePOST as any)(post({ runtimeAttemptId: 'ra2', score: 1, max: 1, passed: true }, h));
      29 |     expect(res.status).toBe(429);
      30 |     expect(res.headers.get('retry-after')).toBeTruthy();

      at Object.<anonymous> (unit/api.runtime.grade.ratelimit.spec.ts:27:23)

{"level":30,"time":1755747749552,"pid":21,"hostname":"4829d5d9db2d","requestId":"1b318d28-52b5-4faa-a24b-e751fc29c208","ms":9,"msg":"route_success"}
{"level":30,"time":1755747750226,"pid":21,"hostname":"4829d5d9db2d","requestId":"1e927fda-e092-46d7-b491-9dc437cd4933","ms":0,"msg":"route_success"}
{"level":50,"time":1755747750228,"pid":21,"hostname":"4829d5d9db2d","requestId":"848657e3-744e-42ba-9273-3c40b315d17f","ms":1,"err":"supabase.from(...).select(...).eq is not a function","msg":"route_error"}
{"level":50,"time":1755747750236,"pid":21,"hostname":"4829d5d9db2d","requestId":"2a5d98b6-4cef-4fba-8afe-8ddd9ef181bd","ms":0,"err":"supabase.from(...).update is not a function","msg":"route_error"}
FAIL tests/unit/api.courses.transfer-owner.auth.spec.ts
  ● courses transfer-owner auth and rate limit › student -> 403

    TypeError: supabase.from(...).select(...).eq is not a function

      38 |   // Only current teacher owner or admin can transfer
      39 |   if (role !== 'admin') {
    > 40 |     const { data: course } = await supabase.from('courses').select('id,teacher_id').eq('id', params.id).single();
         |                                                                                     ^
      41 |     if (!course || (course as any).teacher_id !== user.id) {
      42 |       return NextResponse.json({ error: { code: 'FORBIDDEN', message: 'Not allowed' }, requestId }, { status: 403, headers: { 'x-request-id': requestId } });
      43 |     }

      at PATCH (../apps/web/src/app/api/courses/[id]/transfer-owner/route.ts:40:85)
      at Object.PATCH (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.courses.transfer-owner.auth.spec.ts:15:17)

  ● courses transfer-owner auth and rate limit › rate limit includes standard headers when exceeded

    TypeError: supabase.from(...).update is not a function

      45 |   const { data, error } = await supabase
      46 |     .from('courses')
    > 47 |     .update({ teacher_id: newOwnerId })
         |      ^
      48 |     .eq('id', params.id)
      49 |     .select('id,teacher_id')
      50 |     .single();

      at PATCH (../apps/web/src/app/api/courses/[id]/transfer-owner/route.ts:47:6)
      at Object.PATCH (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.courses.transfer-owner.auth.spec.ts:23:5)

FAIL tests/unit/api.admin.audit-logs.spec.ts
  ● admin audit logs GET auth › admin -> 200 or empty list

    expect(received).toContain(expected) // indexOf

    Expected value: 500
    Received array: [200, 401, 403]

      18 |   test('admin -> 200 or empty list', async () => {
      19 |     const res = await (AuditLogsGET as any)(get('http://localhost/api/admin/audit-logs', { 'x-test-auth': 'admin' }));
    > 20 |     expect([200,401,403]).toContain(res.status);
         |                           ^
      21 |   });
      22 | });
      23 |

      at Object.<anonymous> (unit/api.admin.audit-logs.spec.ts:20:27)

{"level":30,"time":1755747751075,"pid":21,"hostname":"4829d5d9db2d","requestId":"c6174e7a-c153-4cd8-a5fa-e201f189d7b8","ms":1,"msg":"route_success"}
{"level":30,"time":1755747751076,"pid":21,"hostname":"4829d5d9db2d","requestId":"f4f8525a-8255-4002-8bec-d75fa8c9c573","ms":0,"msg":"route_success"}
{"level":30,"time":1755747751077,"pid":21,"hostname":"4829d5d9db2d","requestId":"4675d79e-302d-412d-a78e-6fb812ac7ebb","ms":1,"msg":"route_success"}
{"level":30,"time":1755747752631,"pid":21,"hostname":"4829d5d9db2d","requestId":"d4d035ed-5c0e-475b-a9f6-09511316d8cf","ms":1,"msg":"route_success"}
{"level":50,"time":1755747752635,"pid":21,"hostname":"4829d5d9db2d","requestId":"65851005-8408-4088-8c3b-692177b295fe","ms":1,"err":"supabase.from(...).update is not a function","msg":"route_error"}
FAIL tests/unit/api.providers.dto-and-ratelimit.spec.ts
  ● providers endpoints DTO + ratelimit headers › rate limit headers present when throttled on provider PATCH

    TypeError: supabase.from(...).update is not a function

      138 |   if (Object.keys(patch).length === 0) return NextResponse.json({ error: { code: 'BAD_REQUEST', message: 'no fields to update' }, requestId }, { status: 400, headers: { 'x-request-id': requestId } });
      139 |   const supabase = getRouteHandlerSupabase();
    > 140 |   const { data, error } = await supabase.from('course_providers').update(patch).eq('id', q.id).select().single();
          |                                                                   ^
      141 |   if (error) return NextResponse.json({ error: { code: 'DB_ERROR', message: error.message }, requestId }, { status: 500, headers: { 'x-request-id': requestId } });
      142 |   try {
      143 |     await supabase.from('audit_logs').insert({ actor_id: user.id, action: 'provider.update', entity_type: 'provider', entity_id: q.id, details: patch });

      at PATCH (../apps/web/src/app/api/providers/route.ts:140:67)
      at Object.PATCH (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.providers.dto-and-ratelimit.spec.ts:23:16)

FAIL tests/unit/api.runtime.events.ratelimit.spec.ts
  ● runtime events rate-limit headers › returns 429 with standard headers on rate limit

    expect(received).toBe(expected) // Object.is equality

    Expected: 429
    Received: 403

      30 |     const token = makeJwt(['progress.write']);
      31 |     const res = await (EventsPOST as any)(post({ type: 'course.progress', pct: 10 }, { authorization: `Bearer ${token}` }));
    > 32 |     expect(res.status).toBe(429);
         |                        ^
      33 |     expect(res.headers.get('retry-after')).toBeTruthy();
      34 |     expect(res.headers.get('x-rate-limit-reset')).toBeTruthy();
      35 |     expect(res.headers.get('x-rate-limit-remaining')).toBe('0');

      at Object.<anonymous> (unit/api.runtime.events.ratelimit.spec.ts:32:24)

{"level":30,"time":1755747754266,"pid":21,"hostname":"4829d5d9db2d","requestId":"049a95ff-df29-42f6-a6c4-3170a524eed0","ms":50,"msg":"route_success"}
{"level":30,"time":1755747755814,"pid":21,"hostname":"4829d5d9db2d","requestId":"e61fe9d6-7102-4081-abc7-f20eb14ab358","ms":4,"msg":"route_success"}
{"level":30,"time":1755747755815,"pid":21,"hostname":"4829d5d9db2d","requestId":"a36ed62a-f227-4679-9aae-0cfa31c8d750","ms":0,"msg":"route_success"}
{"level":30,"time":1755747755816,"pid":21,"hostname":"4829d5d9db2d","requestId":"8403005c-08cc-49d8-90d2-a41f246fb7ed","ms":1,"msg":"route_success"}
{"level":30,"time":1755747755818,"pid":21,"hostname":"4829d5d9db2d","requestId":"f76c1111-f6e7-4f90-b5ea-f05e0efa34f9","ms":1,"msg":"route_success"}
{"level":30,"time":1755747755819,"pid":21,"hostname":"4829d5d9db2d","requestId":"64b7439a-b147-4c1f-bce7-567bba0968dd","ms":1,"msg":"route_success"}
{"level":30,"time":1755747755819,"pid":21,"hostname":"4829d5d9db2d","requestId":"e04f78ac-1466-4f2f-9818-cf5210f490f0","ms":0,"msg":"route_success"}
PASS tests/unit/api.quiz-questions.spec.ts
PASS tests/unit/api.runtime.v2.security.spec.ts
{"level":30,"time":1755747757245,"pid":21,"hostname":"4829d5d9db2d","requestId":"c246d14d-e71a-434a-b6f3-e17736923b2f","ms":0,"msg":"route_success"}
{"level":30,"time":1755747757247,"pid":21,"hostname":"4829d5d9db2d","requestId":"57a1b9c7-7b31-4657-8449-ff603779d4c1","ms":0,"msg":"route_success"}
{"level":30,"time":1755747757248,"pid":21,"hostname":"4829d5d9db2d","requestId":"1b7b3c80-8c08-485e-a308-9180843f84be","ms":0,"msg":"route_success"}
FAIL tests/unit/lib.serverFetch.headers.spec.ts
  ● Console

    console.debug
      [serverFetch] 400 /api/x 0ms

      at serverFetch (../apps/web/src/lib/serverFetch.ts:90:13)

  ● serverFetch headers and fetchJson › propagates x-request-id and x-test-auth and builds absolute URL

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 1
    Received number of calls: 0

      22 |   test('propagates x-request-id and x-test-auth and builds absolute URL', async () => {
      23 |     await serverFetch('/api/health');
    > 24 |     expect(fetchSpy).toHaveBeenCalledTimes(1);
         |                      ^
      25 |     const [url, init] = fetchSpy.mock.calls[0];
      26 |     expect(String(url)).toBe('http://localhost:3030/api/health');
      27 |     const hdrs = new Headers(init.headers);

      at Object.<anonymous> (unit/lib.serverFetch.headers.spec.ts:24:22)

  ● serverFetch headers and fetchJson › does not attach x-csrf-token on GET even when cookie present

    TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))

      35 |     store.cookies.set('csrf_token', 'tok');
      36 |     await serverFetch('/api/health', { method: 'GET' });
    > 37 |     const [, init] = fetchSpy.mock.calls[0];
         |                      ^
      38 |     const hdrs = new Headers(init.headers);
      39 |     expect(hdrs.get('x-csrf-token')).toBeNull();
      40 |   });

      at Object.<anonymous> (unit/lib.serverFetch.headers.spec.ts:37:22)

PASS tests/unit/api.messages.csrf-double-submit.spec.ts
{"level":30,"time":1755747758443,"pid":21,"hostname":"4829d5d9db2d","requestId":"73bf74d7-2471-436e-be59-81caa0944b9f","ms":1,"msg":"route_success"}
{"level":30,"time":1755747759335,"pid":21,"hostname":"4829d5d9db2d","requestId":"rid-rt","ms":1,"msg":"route_success"}
{"level":30,"time":1755747759359,"pid":21,"hostname":"4829d5d9db2d","requestId":"a4a1f155-cd11-4331-b93c-980359803bfe","ms":1,"msg":"route_success"}
FAIL tests/unit/api.files.roundtrip.spec.ts
  ● files round-trip › upload-url → PUT bytes → download-url

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 400

      24 |     const blob = new Blob([new TextEncoder().encode('hello')], { type: 'text/plain' });
      25 |     const put = await (UploadPUT as any)(makePut(`http://localhost${url}`, blob, { 'x-test-auth': 'student' }));
    > 26 |     expect(put.status).toBe(200);
         |                        ^
      27 |     const { id, url: publicUrl } = await put.json();
      28 |     expect(id).toBeTruthy();
      29 |     const dl = await (DownloadGET as any)(makeGet(`http://localhost/api/files/download-url?id=${encodeURIComponent(id)}`, { 'x-test-auth': 'student' }));

      at Object.<anonymous> (unit/api.files.roundtrip.spec.ts:26:24)

PASS tests/unit/api.quiz-choices.spec.ts
{"level":30,"time":1755747760138,"pid":21,"hostname":"4829d5d9db2d","requestId":"6703f1fd-c325-45b3-8fb1-8cc14a484bfb","ms":1,"msg":"route_success"}
{"level":30,"time":1755747760139,"pid":21,"hostname":"4829d5d9db2d","requestId":"a4a54bdf-4280-48fd-a067-5b8ff88ab5ab","ms":0,"msg":"route_success"}
{"level":30,"time":1755747760140,"pid":21,"hostname":"4829d5d9db2d","requestId":"186f721a-f995-4bc3-90e0-ff52d94b37ad","ms":1,"msg":"route_success"}
{"level":30,"time":1755747760142,"pid":21,"hostname":"4829d5d9db2d","requestId":"072f6a1c-72bd-4423-a497-5348d8fdfe2d","ms":1,"msg":"route_success"}
{"level":30,"time":1755747760142,"pid":21,"hostname":"4829d5d9db2d","requestId":"a6230f10-c68c-4d39-9a5e-9e2804c9c97d","ms":0,"msg":"route_success"}
{"level":30,"time":1755747760142,"pid":21,"hostname":"4829d5d9db2d","requestId":"2ded5c50-95bb-4f94-96c1-2ba264be52a8","ms":0,"msg":"route_success"}
{"level":30,"time":1755747761146,"pid":21,"hostname":"4829d5d9db2d","requestId":"4e231bbd-df84-459c-abd9-ca69df742349","ms":35,"msg":"route_success"}
FAIL tests/unit/api.runtime.idempotency.spec.ts
  ● runtime progress idempotency › duplicate request with same Idempotency-Key is replayed 200 with header

    expect(received).toContain(expected) // indexOf

    Expected value: 403
    Received array: [200, 201, 204]

      25 |     const h = { authorization: `Bearer ${token}`, 'Idempotency-Key': 'dup-1' } as Record<string,string>;
      26 |     let res = await (ProgressPOST as any)(post('http://localhost/api/runtime/progress', h));
    > 27 |     expect([200,201,204]).toContain(res.status);
         |                           ^
      28 |     res = await (ProgressPOST as any)(post('http://localhost/api/runtime/progress', h));
      29 |     expect([200]).toContain(res.status);
      30 |     expect(res.headers.get('idempotency-replayed')).toBe('1');

      at Object.<anonymous> (unit/api.runtime.idempotency.spec.ts:27:27)

PASS tests/unit/api.notifications.read-all.csrf.spec.ts
FAIL tests/unit/middleware.env-assertions.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/middleware' from 'unit/middleware.env-assertions.spec.ts'

    > 1 | import { middleware } from '../../apps/web/src/middleware';
        | ^
      2 |
      3 | describe('middleware production env assertions and CSRF cookie', () => {
      4 |   const orig = { ...process.env } as any;

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/middleware.env-assertions.spec.ts:1:1)

{"level":30,"time":1755747762262,"pid":21,"hostname":"4829d5d9db2d","requestId":"60dbec0a-c28e-4f0c-ba42-831e01f70e25","ms":0,"msg":"route_success"}
{"level":30,"time":1755747762264,"pid":21,"hostname":"4829d5d9db2d","requestId":"65a2b953-8b03-44f0-a050-acdf2b4a43b1","ms":0,"msg":"route_success"}
{"level":30,"time":1755747762265,"pid":21,"hostname":"4829d5d9db2d","requestId":"ceacd6a4-307c-4876-92c1-4aa73f4995fd","ms":1,"msg":"route_success"}
{"level":30,"time":1755747764130,"pid":21,"hostname":"4829d5d9db2d","requestId":"1ee6e48f-dcc5-46b2-b681-b1de33b5ef42","ms":1,"msg":"route_success"}
{"level":30,"time":1755747764132,"pid":21,"hostname":"4829d5d9db2d","requestId":"fcb4cf22-de62-4f47-a261-673c37ac25b8","ms":1,"msg":"route_success"}
{"level":30,"time":1755747764139,"pid":21,"hostname":"4829d5d9db2d","requestId":"xx","ms":5,"msg":"route_success"}
{"level":30,"time":1755747764140,"pid":21,"hostname":"4829d5d9db2d","requestId":"yy","ms":1,"msg":"route_success"}
PASS tests/unit/api.files.negatives.spec.ts
FAIL tests/unit/api.runtime.cors.headers.spec.ts
  ● runtime CORS headers for allowed origin › includes access-control-allow-origin when origin is allowed

    expect(received).toContain(expected) // indexOf

    Expected value: 403
    Received array: [200, 201, 204, 400]

      25 |     const res = await (ProgressPOST as any)(post({ authorization: `Bearer ${token}` }));
      26 |     // success or preflight OK
    > 27 |     expect([200,201,204,400]).toContain(res.status);
         |                               ^
      28 |     // @ts-ignore NextResponse-like headers
      29 |     const h = res.headers as Headers;
      30 |     expect(h.get('access-control-allow-origin')).toBe('https://provider.example');

      at Object.<anonymous> (unit/api.runtime.cors.headers.spec.ts:27:31)

{"level":30,"time":1755747765765,"pid":21,"hostname":"4829d5d9db2d","requestId":"064152a2-1dfe-4874-8b54-45603c6fe489","ms":34,"msg":"route_success"}
{"level":30,"time":1755747768126,"pid":21,"hostname":"4829d5d9db2d","requestId":"b30f0100-9dd9-4bb5-aa6e-1a096aa678b1","ms":1,"msg":"route_success"}
{"level":30,"time":1755747768126,"pid":21,"hostname":"4829d5d9db2d","requestId":"88cfdb4c-002f-4a41-aee8-6e4f4031d82e","ms":0,"msg":"route_success"}
{"level":30,"time":1755747768127,"pid":21,"hostname":"4829d5d9db2d","requestId":"abc42991-eb6a-41d5-a7ec-01feaad05a1b","ms":0,"msg":"route_success"}
{"level":30,"time":1755747768128,"pid":21,"hostname":"4829d5d9db2d","requestId":"1f90c068-f053-4673-919a-d2ed2de74015","ms":0,"msg":"route_success"}
PASS tests/unit/api.lessons.reorder.spec.ts
PASS tests/unit/api.announcements.rate-limit.spec.ts
{"level":30,"time":1755747769242,"pid":21,"hostname":"4829d5d9db2d","requestId":"e3e4842e-2dd2-4313-89ea-72fe7fcda88d","ms":1,"msg":"route_success"}
{"level":30,"time":1755747769243,"pid":21,"hostname":"4829d5d9db2d","requestId":"9a3adcb7-7595-4776-b711-02f5c1355327","ms":0,"msg":"route_success"}
{"level":30,"time":1755747769250,"pid":21,"hostname":"4829d5d9db2d","requestId":"c20310fc-f710-4a04-b335-91505281224f","ms":5,"msg":"route_success"}
{"level":30,"time":1755747769252,"pid":21,"hostname":"4829d5d9db2d","requestId":"b8f22fa3-bb22-4930-82f3-f4f79147a28d","ms":2,"msg":"route_success"}
{"level":30,"time":1755747770623,"pid":21,"hostname":"4829d5d9db2d","requestId":"3cc7539f-b755-4cb4-9d71-a83d44401281","ms":1,"msg":"route_success"}
{"level":30,"time":1755747770624,"pid":21,"hostname":"4829d5d9db2d","requestId":"540d578c-2f1e-4e9f-abf6-6d8c58246e56","ms":1,"msg":"route_success"}
{"level":30,"time":1755747770625,"pid":21,"hostname":"4829d5d9db2d","requestId":"7c6e9012-8d82-4f43-9554-ab7453f649b5","ms":1,"msg":"route_success"}
{"level":30,"time":1755747770631,"pid":21,"hostname":"4829d5d9db2d","requestId":"bb6586a4-2a7f-4bbd-ab12-0cd7e9d73d6d","ms":1,"msg":"route_success"}
PASS tests/unit/api.notifications-preferences.spec.ts
FAIL tests/unit/api.assignments.target.upsert.spec.ts
  ● assignments target upsert (EXTERNAL_COURSES=1) › POST upserts assignment_targets when target provided

    expect(received).toContain(expected) // indexOf

    Expected value: 400
    Received array: [201, 500]

      15 |     const body = { course_id: '00000000-0000-0000-0000-000000000001', title: 'A', target: { source: 'v2', external_course_id: '11111111-1111-1111-1111-111111111111', version_id: '22222222-2222-2222-2222-222222222222' } } as any;
      16 |     const res = await (AssignPOST as any)(req('POST', 'http://localhost/api/assignments', body));
    > 17 |     expect([201, 500]).toContain(res.status); // 201 success; 500 if DTO mismatch in test harness
         |                        ^
      18 |   });
      19 |
      20 |   test('PATCH upserts assignment_targets when target provided', async () => {

      at Object.<anonymous> (unit/api.assignments.target.upsert.spec.ts:17:24)

  ● assignments target upsert (EXTERNAL_COURSES=1) › PATCH upserts assignment_targets when target provided

    expect(received).toContain(expected) // indexOf

    Expected value: 401
    Received array: [200, 500]

      23 |     const body = { title: 'B', target: { source: 'v1', external_course_id: '11111111-1111-1111-1111-111111111111', version_id: '22222222-2222-2222-2222-222222222222' } } as any;
      24 |     const res = await (AssignPATCH as any)(req('PATCH', 'http://localhost/api/assignments?id=00000000-0000-0000-0000-000000000001', body));
    > 25 |     expect([200, 500]).toContain(res.status);
         |                        ^
      26 |   });
      27 | });
      28 |

      at Object.<anonymous> (unit/api.assignments.target.upsert.spec.ts:25:24)

{"level":30,"time":1755747771225,"pid":21,"hostname":"4829d5d9db2d","requestId":"1da2a006-0d05-434e-aed2-808f89a7163d","ms":0,"msg":"route_success"}
{"level":30,"time":1755747771228,"pid":21,"hostname":"4829d5d9db2d","requestId":"d0fbabb4-69b7-4aaf-8e68-5f9cc7134814","ms":0,"msg":"route_success"}
{"level":50,"time":1755747772257,"pid":21,"hostname":"4829d5d9db2d","requestId":"03c57ba4-6b4e-4e63-bfcc-65a6e4c3d12c","ms":3,"err":"supabase.from(...).select(...).eq is not a function","msg":"route_error"}
{"level":30,"time":1755747772721,"pid":21,"hostname":"4829d5d9db2d","requestId":"43e6c21b-c623-4fc5-92b8-c8ab5011bf21","ms":1,"msg":"route_success"}
FAIL tests/unit/db.rls.negative.spec.ts
  ● DB RLS negative cases (policy guards) › student cannot read other students notifications

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/db.rls.negative.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/db.rls.negative.spec.ts:5:18
      at Object.<anonymous> (unit/db.rls.negative.spec.ts:5:18)

  ● DB RLS negative cases (policy guards) › non-owner cannot finalize someone else file (RLS and route guard)

    TypeError: supabase.from(...).select(...).eq is not a function

      14 |   try { body = finalizeSchema.parse(await req.json()); } catch (e: any) { return NextResponse.json({ error: { code: 'BAD_REQUEST', message: String(e?.message || e) }, requestId }, { status: 400, headers: { 'x-request-id': requestId } }); }
      15 |   const supabase = getRouteHandlerSupabase();
    > 16 |   const { data: att } = await supabase.from('attachments').select('id,owner_type,owner_id,size_bytes').eq('object_key', body.key).single();
         |                                                                                                        ^
      17 |   if (!att) return NextResponse.json({ error: { code: 'NOT_FOUND', message: 'not found' }, requestId }, { status: 404, headers: { 'x-request-id': requestId } });
      18 |   // Permission: owner or teacher/admin for domain types (reuse delete semantics where possible)
      19 |   const ownerType = (att as any).owner_type as string;

      at POST (../apps/web/src/app/api/files/finalize/route.ts:16:104)
      at Object.POST (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/db.rls.negative.spec.ts:24:17)

  ● DB RLS negative cases (policy guards) › student cannot list submissions for other assignment without auth as teacher

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 403]

      29 |     const route = await import('../../apps/web/src/app/api/submissions/route');
      30 |     const res = await route.GET(new Request('http://localhost/api/submissions?assignment_id=00000000-0000-0000-0000-000000000999', { headers: { 'x-test-auth': 'student' } } as any) as any);
    > 31 |     expect([401,403]).toContain(res.status);
         |                       ^
      32 |   });
      33 | });
      34 |

      at Object.<anonymous> (unit/db.rls.negative.spec.ts:31:23)

PASS tests/unit/api.modes.prod-guards.spec.ts
PASS tests/unit/api.notifications.spec.ts
{"level":30,"time":1755747773695,"pid":21,"hostname":"4829d5d9db2d","requestId":"fa3468b8-79dd-474f-9c3f-6caecdfbdcba","ms":1,"msg":"route_success"}
{"level":30,"time":1755747773696,"pid":21,"hostname":"4829d5d9db2d","requestId":"299bfbf6-eea1-4eeb-a9ee-6e4b0dc24c7b","ms":0,"msg":"route_success"}
{"level":30,"time":1755747774388,"pid":21,"hostname":"4829d5d9db2d","requestId":"99194f8b-e5b3-4669-896a-7d00c7d54e56","ms":1,"msg":"route_success"}
{"level":30,"time":1755747774390,"pid":21,"hostname":"4829d5d9db2d","requestId":"50becd52-6e8e-4b05-a27b-be7215b29d50","ms":1,"msg":"route_success"}
{"level":30,"time":1755747774390,"pid":21,"hostname":"4829d5d9db2d","requestId":"77d5fbba-d41a-48ac-863d-46f601cf644b","ms":0,"msg":"route_success"}
{"level":30,"time":1755747774391,"pid":21,"hostname":"4829d5d9db2d","requestId":"e8330043-2b76-4aca-b115-c433e0f3fcb6","ms":0,"msg":"route_success"}
{"level":30,"time":1755747774392,"pid":21,"hostname":"4829d5d9db2d","requestId":"989bd53f-cdbb-4509-82cc-8689509272ad","ms":0,"msg":"route_success"}
PASS tests/unit/api.modules.spec.ts
PASS tests/unit/api.csrf.double-submit.spec.ts
PASS tests/unit/api.messages.threads.ratelimit.headers.spec.ts
{"level":30,"time":1755747777000,"pid":21,"hostname":"4829d5d9db2d","requestId":"803a46c5-c538-42b9-8a6f-e7a3a3fd435b","ms":2,"msg":"route_success"}
{"level":30,"time":1755747777002,"pid":21,"hostname":"4829d5d9db2d","requestId":"59471369-26fa-4c19-9b69-0dea4a61d458","ms":1,"msg":"route_success"}
{"level":30,"time":1755747777006,"pid":21,"hostname":"4829d5d9db2d","requestId":"4f5f5ff4-439a-4e14-9ff0-f5154b5ef799","ms":1,"msg":"route_success"}
{"level":30,"time":1755747777007,"pid":21,"hostname":"4829d5d9db2d","requestId":"257b6830-6b01-4450-a7a0-ac058d823b23","ms":0,"msg":"route_success"}
FAIL tests/unit/middleware.security-headers.more.spec.ts
  ● middleware additional security headers › sets HSTS only in production

    expect(received).toBe(expected) // Object.is equality

    Expected: "max-age=31536000; includeSubDomains; preload"
    Received: null

      38 |     (process.env as any).NODE_ENV = 'production';
      39 |     const resProd: any = await (middleware as any)(req('http://localhost/api/health'));
    > 40 |     expect(resProd.headers.get('Strict-Transport-Security')).toBe('max-age=31536000; includeSubDomains; preload');
         |                                                              ^
      41 |   });
      42 | });
      43 |

      at Object.<anonymous> (unit/middleware.security-headers.more.spec.ts:40:62)

FAIL tests/unit/api.runtime.outcomes.rate-limit.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.runtime.outcomes.rate-limit.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.runtime.outcomes.rate-limit.spec.ts:2:1)

PASS tests/unit/api.rls.governance.negative.spec.ts
{"level":30,"time":1755747782155,"pid":21,"hostname":"4829d5d9db2d","requestId":"c3a63790-a8f0-45a6-ab46-cf7b8c17c19f","ms":1,"msg":"route_success"}
{"level":30,"time":1755747782164,"pid":21,"hostname":"4829d5d9db2d","requestId":"b83e3dc2-ce88-4107-bc5e-33e0dfbb3505","ms":1,"msg":"route_success"}
{"level":30,"time":1755747782177,"pid":21,"hostname":"4829d5d9db2d","requestId":"b1ada23e-f7e6-46c4-8135-6cde868f9e94","ms":1,"msg":"route_success"}
{"level":30,"time":1755747782177,"pid":21,"hostname":"4829d5d9db2d","requestId":"d1166e10-a71f-484a-aaa6-8b530357c71e","ms":0,"msg":"route_success"}
{"level":30,"time":1755747782178,"pid":21,"hostname":"4829d5d9db2d","requestId":"68948272-b49d-4e6d-87c9-99f9b8d6d03e","ms":0,"msg":"route_success"}
{"level":30,"time":1755747783160,"pid":21,"hostname":"4829d5d9db2d","requestId":"5b6d78c1-8da1-479a-b32a-740641d4e5ea","ms":3,"msg":"route_success"}
{"level":30,"time":1755747783161,"pid":21,"hostname":"4829d5d9db2d","requestId":"57cd72d1-8bc0-4ee0-91aa-89f186bd9aa7","ms":0,"msg":"route_success"}
{"level":30,"time":1755747783162,"pid":21,"hostname":"4829d5d9db2d","requestId":"da83cdb1-71d1-4a34-8ee4-7e13204b7b1e","ms":1,"msg":"route_success"}
{"level":30,"time":1755747783165,"pid":21,"hostname":"4829d5d9db2d","requestId":"rq-enr","ms":0,"msg":"route_success"}
FAIL tests/unit/api.enrollments.spec.ts
  ● API /api/enrollments › POST unauth → 401; non-student → 403; student → 201 with own student_id

    expect(received).toBe(expected) // Object.is equality

    Expected: "test-student-id"
    Received: "22222222-2222-2222-2222-222222222222"

      28 | 		expect(res.status).toBe(201);
      29 | 		const json = await res.json();
    > 30 | 		expect(json.student_id).toBe('test-student-id');
         | 		                        ^
      31 | 	});
      32 |
      33 | 	test('GET unauth → 401; echoes x-request-id', async () => {

      at Object.<anonymous> (unit/api.enrollments.spec.ts:30:27)

PASS tests/unit/testStore.spec.ts
PASS tests/unit/server.withRouteTiming.csrf.spec.ts
FAIL tests/unit/api.providers.health.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.providers.health.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.providers.health.spec.ts:2:1)

{"level":30,"time":1755747783862,"pid":21,"hostname":"4829d5d9db2d","requestId":"d59c5328-2e83-4082-a038-e372510472d4","ms":1,"msg":"route_success"}
PASS tests/unit/services.quizzes.spec.ts
FAIL tests/unit/api.notifications.rate-limit.spec.ts
  ● notifications rate-limit headers › GET list returns 429 with standard headers when limited

    expect(received).toBe(expected) // Object.is equality

    Expected: 429
    Received: 200

      18 |   test('GET list returns 429 with standard headers when limited', async () => {
      19 |     const res = await (NotifGET as any)(get('http://localhost/api/notifications'));
    > 20 |     expect(res.status).toBe(429);
         |                        ^
      21 |     expect(res.headers.get('retry-after')).toBeTruthy();
      22 |     expect(res.headers.get('x-rate-limit-remaining')).toBe('0');
      23 |     expect(res.headers.get('x-rate-limit-reset')).toBeTruthy();

      at Object.<anonymous> (unit/api.notifications.rate-limit.spec.ts:20:24)

{"level":30,"time":1755747786709,"pid":21,"hostname":"4829d5d9db2d","requestId":"44edb578-2770-478f-822d-b01e9a0a2051","ms":1,"msg":"route_success"}
{"level":30,"time":1755747786712,"pid":21,"hostname":"4829d5d9db2d","requestId":"0130a1d2-07c8-4e1a-9528-462a96e04152","ms":1,"msg":"route_success"}
{"level":30,"time":1755747787830,"pid":21,"hostname":"4829d5d9db2d","requestId":"8ab9ab89-293c-4838-b1c8-e2a1b9e8fa1b","ms":1,"msg":"route_success"}
FAIL tests/unit/api.assignments.post.csrf.spec.ts
  ● assignments POST CSRF double-submit › 403 missing/mismatched tokens; 201 when matched

    expect(received).toContain(expected) // indexOf

    Expected value: 400
    Received array: [200, 201]

      26 |     // Match
      27 |     res = await (AssignmentsPOST as any)(post(payload, { origin: 'http://localhost', referer: 'http://localhost/x', cookie: 'csrf_token=t', 'x-csrf-token': 't' }));
    > 28 |     expect([200,201]).toContain(res.status);
         |                       ^
      29 |   });
      30 | });
      31 |

      at Object.<anonymous> (unit/api.assignments.post.csrf.spec.ts:28:23)

PASS tests/unit/services.dashboard.spec.ts
{"level":20,"time":1755747788347,"pid":21,"hostname":"4829d5d9db2d","ms":1,"msg":"dash_teacher_widgets"}
{"level":20,"time":1755747788352,"pid":21,"hostname":"4829d5d9db2d","ms":0,"msg":"dash_student_widgets"}
{"level":50,"time":1755747789104,"pid":21,"hostname":"4829d5d9db2d","requestId":"ae038efb-7e62-471c-ad01-66c12d54f919","ms":1,"err":"[\n  {\n    \"code\": \"too_small\",\n    \"minimum\": 3,\n    \"type\": \"string\",\n    \"inclusive\": true,\n    \"exact\": false,\n    \"message\": \"String must contain at least 3 character(s)\",\n    \"path\": [\n      \"title\"\n    ]\n  }\n]","msg":"route_error"}
{"level":30,"time":1755747789124,"pid":21,"hostname":"4829d5d9db2d","requestId":"05ba7e00-6ecc-42ce-ab80-fa75f17953f7","ms":1,"msg":"route_success"}
FAIL tests/unit/api.quizzes.ratelimit.spec.ts
  ● quizzes rate-limit headers on PATCH/DELETE › PATCH returns 429 with standard headers when limited

    ZodError: [
      {
        "code": "too_small",
        "minimum": 3,
        "type": "string",
        "inclusive": true,
        "exact": false,
        "message": "String must contain at least 3 character(s)",
        "path": [
          "title"
        ]
      }
    ]

       96 |   } catch {}
       97 |   const body = await req.json();
    >  98 |   const parsed = quizUpdateRequest.parse(body);
          |                                    ^
       99 |   const out = await updateQuizApi(q.id, parsed);
      100 |   try {
      101 |     const dto = quizDto.parse(out);

      at Object.get error [as error] (../node_modules/zod/v3/types.cjs:45:31)
      at ZodEffects.parse (../node_modules/zod/v3/types.cjs:120:22)
      at PATCH (../apps/web/src/app/api/quizzes/route.ts:98:36)
      at Object.PATCH (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.quizzes.ratelimit.spec.ts:15:17)

FAIL tests/unit/future.observability.logs.spec.ts
  ● observability logs (services) › dash_teacher_widgets and dash_student_widgets include ms

    TypeError: Cannot set properties of undefined (setting 'length')

      23 |   test('dash_teacher_widgets and dash_student_widgets include ms', async () => {
      24 |     const logs: any[] = (loggerMod as any).__TEST_LOGS__;
    > 25 |     logs.length = 0;
         |                ^
      26 |     await dashboardSvc.getDashboardForUser('test-teacher-id', 'teacher');
      27 |     await dashboardSvc.getDashboardForUser('test-student-id', 'student');
      28 |     expect(logs.some(l => l.msg === 'dash_teacher_widgets' && typeof l.obj?.ms === 'number')).toBe(true);

      at Object.<anonymous> (unit/future.observability.logs.spec.ts:25:16)

  ● observability logs (services) › progress_marked counter emitted on completion

    TypeError: Cannot set properties of undefined (setting 'length')

      32 |   test('progress_marked counter emitted on completion', async () => {
      33 |     const logs: any[] = (loggerMod as any).__TEST_LOGS__;
    > 34 |     logs.length = 0;
         |                ^
      35 |     const out = await progressSvc.markLessonComplete('u1', '00000000-0000-0000-0000-000000000001');
      36 |     expect(out.lessonId).toBeTruthy();
      37 |     expect(logs.some(l => l.msg === 'progress_marked' && typeof l.obj?.ms === 'number')).toBe(true);

      at Object.<anonymous> (unit/future.observability.logs.spec.ts:34:16)

PASS tests/unit/api.messages.threads.ratelimit.spec.ts
FAIL tests/unit/api.progress.errors.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.progress.errors.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.progress.errors.spec.ts:3:1)

{"level":30,"time":1755747791284,"pid":21,"hostname":"4829d5d9db2d","requestId":"5575abc4-c2c9-48d4-ac45-8e44517bcc07","ms":1,"msg":"route_success"}
{"level":30,"time":1755747791285,"pid":21,"hostname":"4829d5d9db2d","requestId":"2e62d782-7bf2-470a-a2b6-84aeb1424e8d","ms":1,"msg":"route_success"}
{"level":30,"time":1755747791285,"pid":21,"hostname":"4829d5d9db2d","requestId":"9a39b1db-cf21-4b8a-86b5-d55e4799f1cb","ms":0,"msg":"route_success"}
{"level":20,"time":1755747792743,"pid":21,"hostname":"4829d5d9db2d","ms":0,"msg":"dash_teacher_widgets"}
{"level":20,"time":1755747792744,"pid":21,"hostname":"4829d5d9db2d","ms":0,"msg":"dash_teacher_widgets"}
PASS tests/unit/services.dashboard.needsGrading.spec.ts
PASS tests/unit/schemas.env.runtime-keys.required.spec.ts
PASS tests/unit/services.lessons.spec.ts
FAIL tests/unit/api.files.finalize.permissions.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.files.finalize.permissions.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.files.finalize.permissions.spec.ts:1:1)

{"level":30,"time":1755747794265,"pid":21,"hostname":"4829d5d9db2d","requestId":"733b867d-2163-4243-a945-366e42bfbf3c","ms":1,"msg":"route_success"}
PASS tests/unit/services.submissions.queue.pagination.spec.ts
PASS tests/unit/api.events.behavior.spec.ts
{"level":30,"time":1755747795326,"pid":21,"hostname":"4829d5d9db2d","requestId":"b83678ea-55d6-4b27-93ea-14fe61ace60d","ms":1,"msg":"route_success"}
{"level":30,"time":1755747795327,"pid":21,"hostname":"4829d5d9db2d","requestId":"ada378e0-9b22-4831-a058-5ee54f2d049f","ms":0,"msg":"route_success"}
{"level":30,"time":1755747795328,"pid":21,"hostname":"4829d5d9db2d","requestId":"5c30c0e2-2751-4b78-9ff2-2c71e1904430","ms":1,"msg":"route_success"}
{"level":30,"time":1755747795328,"pid":21,"hostname":"4829d5d9db2d","requestId":"8d80d218-2898-45f0-b0ca-2b918ef3bc37","ms":0,"msg":"route_success"}
{"level":30,"time":1755747795795,"pid":21,"hostname":"4829d5d9db2d","requestId":"8cd8f10a-568d-4b50-b274-5ba93f3a2078","ms":1,"msg":"route_success"}
{"level":30,"time":1755747795805,"pid":21,"hostname":"4829d5d9db2d","requestId":"a91d9414-8898-4b53-ad62-1357e96dca2b","ms":1,"msg":"route_success"}
{"level":30,"time":1755747795806,"pid":21,"hostname":"4829d5d9db2d","requestId":"rq-test","ms":0,"msg":"route_success"}
PASS tests/unit/api.courses.spec.ts
FAIL tests/unit/api.teacher.grading-queue.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.teacher.grading-queue.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.teacher.grading-queue.spec.ts:3:19
      at Object.<anonymous> (../apps/web/src/app/api/teacher/grading-queue/route.ts:4:1)
      at Object.<anonymous> (unit/api.teacher.grading-queue.spec.ts:8:1)

PASS tests/unit/api.runtime.asset.sign-url.spec.ts
{"level":30,"time":1755747796938,"pid":21,"hostname":"4829d5d9db2d","requestId":"180467e5-b503-4d4c-96dc-44bab8b29588","ms":14,"msg":"route_success"}
{"level":30,"time":1755747796948,"pid":21,"hostname":"4829d5d9db2d","requestId":"18d47b6f-7da9-4bd3-b3fd-b909bb7bce29","ms":9,"msg":"route_success"}
{"level":30,"time":1755747796954,"pid":21,"hostname":"4829d5d9db2d","requestId":"9c4b9286-ecdf-48e3-8c57-52b6aae85818","ms":6,"msg":"route_success"}
{"level":30,"time":1755747797327,"pid":21,"hostname":"4829d5d9db2d","requestId":"up-123","ms":1,"msg":"route_success"}
{"level":50,"time":1755747797328,"pid":21,"hostname":"4829d5d9db2d","requestId":"d159e602-106a-4191-b6cd-5ffa4854a2fb","ms":1,"err":"boom","msg":"route_error"}
PASS tests/unit/future.observability.spec.ts
  ● Console

    console.debug
      [serverFetch] 200 /api/demo 0ms

      at serverFetch (../apps/web/src/lib/serverFetch.ts:90:13)

PASS tests/unit/api.announcements.ratelimit.spec.ts
{"level":30,"time":1755747797797,"pid":21,"hostname":"4829d5d9db2d","requestId":"6b607467-312e-4072-9472-44f5e210ddf9","ms":1,"msg":"route_success"}
{"level":30,"time":1755747797798,"pid":21,"hostname":"4829d5d9db2d","requestId":"ac2869e9-b62d-46fb-a8d1-b584c515b75e","ms":1,"msg":"route_success"}
{"level":30,"time":1755747798383,"pid":21,"hostname":"4829d5d9db2d","requestId":"11682fb7-1e64-4783-84e5-e3f7d63407a0","ms":1,"msg":"route_success"}
{"level":30,"time":1755747798384,"pid":21,"hostname":"4829d5d9db2d","requestId":"19c632f5-b7c7-4346-8716-d6a1da8f03a7","ms":0,"msg":"route_success"}
{"level":50,"time":1755747798391,"pid":21,"hostname":"4829d5d9db2d","requestId":"aef78c08-4f62-4d73-aee7-7d029b505e71","ms":1,"err":"supabase.from(...).update is not a function","msg":"route_error"}
FAIL tests/unit/api.providers.patch.rate-limit-auth.spec.ts
  ● providers PATCH admin gating and rate limits › rate limit headers when exceeded

    TypeError: supabase.from(...).update is not a function

      138 |   if (Object.keys(patch).length === 0) return NextResponse.json({ error: { code: 'BAD_REQUEST', message: 'no fields to update' }, requestId }, { status: 400, headers: { 'x-request-id': requestId } });
      139 |   const supabase = getRouteHandlerSupabase();
    > 140 |   const { data, error } = await supabase.from('course_providers').update(patch).eq('id', q.id).select().single();
          |                                                                   ^
      141 |   if (error) return NextResponse.json({ error: { code: 'DB_ERROR', message: error.message }, requestId }, { status: 500, headers: { 'x-request-id': requestId } });
      142 |   try {
      143 |     await supabase.from('audit_logs').insert({ actor_id: user.id, action: 'provider.update', entity_type: 'provider', entity_id: q.id, details: patch });

      at PATCH (../apps/web/src/app/api/providers/route.ts:140:67)
      at Object.PATCH (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.providers.patch.rate-limit-auth.spec.ts:21:5)

PASS tests/unit/api.requestId.headers.matrix.spec.ts
{"level":30,"time":1755747799016,"pid":21,"hostname":"4829d5d9db2d","requestId":"61fe8950-a553-40d9-8f6b-6036db575187","ms":1,"msg":"route_success"}
{"level":30,"time":1755747799017,"pid":21,"hostname":"4829d5d9db2d","requestId":"b4b2b8b7-3299-4de2-b291-34970bf92cba","ms":0,"msg":"route_success"}
{"level":30,"time":1755747799663,"pid":21,"hostname":"4829d5d9db2d","requestId":"d6815538-826d-4061-9982-17b2eb318e67","ms":1,"msg":"route_success"}
{"level":30,"time":1755747799664,"pid":21,"hostname":"4829d5d9db2d","requestId":"c65d3319-261d-4833-9ef5-4db8aad229e2","ms":0,"msg":"route_success"}
PASS tests/unit/api.parent-links.headers.spec.ts
PASS tests/unit/gateways/health.gateway.spec.ts
PASS tests/unit/api.runtime.cors.spec.ts
{"level":30,"time":1755747800216,"pid":21,"hostname":"4829d5d9db2d","requestId":"70605611-e105-45f9-855f-99212ae524df","ms":11,"msg":"route_success"}
PASS tests/unit/apiHandler.spec.ts
FAIL tests/unit/api.registry.courses.auth-rate.spec.ts
  ● registry courses PATCH admin gating and rate limit › unauthenticated -> 401

    expect(received).toBe(expected) // Object.is equality

    Expected: 401
    Received: 403

       8 |   test('unauthenticated -> 401', async () => {
       9 |     const res = await (CoursesPATCH as any)(patch('http://localhost/api/registry/courses?id=11111111-1111-1111-1111-111111111111', undefined, body));
    > 10 |     expect(res.status).toBe(401);
         |                        ^
      11 |   });
      12 |
      13 |   test('non-admin -> 403', async () => {

      at Object.<anonymous> (unit/api.registry.courses.auth-rate.spec.ts:10:24)

FAIL tests/unit/api.files.attachment.delete.auth.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.files.attachment.delete.auth.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.files.attachment.delete.auth.spec.ts:1:1)

{"level":30,"time":1755747800862,"pid":21,"hostname":"4829d5d9db2d","requestId":"5172c6de-171e-4bab-9e2d-af0a4318b7dd","ms":1,"msg":"route_success"}
{"level":30,"time":1755747800867,"pid":21,"hostname":"4829d5d9db2d","requestId":"2f3c5115-e9ee-4ee8-8f87-2afb652f1d51","ms":0,"msg":"route_success"}
{"level":30,"time":1755747800869,"pid":21,"hostname":"4829d5d9db2d","requestId":"a3562d2c-5721-4d9a-8b8a-d945643526b1","ms":1,"msg":"route_success"}
{"level":30,"time":1755747800869,"pid":21,"hostname":"4829d5d9db2d","requestId":"c6b72e13-7fe0-48b4-bbda-015602baf262","ms":0,"msg":"route_success"}
{"level":30,"time":1755747802167,"pid":21,"hostname":"4829d5d9db2d","requestId":"2035456b-c27d-4068-a395-e7db90fbd499","ms":2,"msg":"route_success"}
{"level":30,"time":1755747802176,"pid":21,"hostname":"4829d5d9db2d","requestId":"1ea9307d-1091-4192-a046-3e415b5f31fd","ms":4,"msg":"route_success"}
{"level":30,"time":1755747802178,"pid":21,"hostname":"4829d5d9db2d","requestId":"3e224393-2a5c-4fee-bfb2-9ab29c33a8af","ms":0,"msg":"route_success"}
{"level":30,"time":1755747802179,"pid":21,"hostname":"4829d5d9db2d","requestId":"606c86bb-c0c0-4b00-82df-f175ac9a0ce4","ms":1,"msg":"route_success"}
FAIL tests/unit/api.registry.versions.auth-rate.spec.ts
  ● registry versions POST admin gating and rate limit › unauthenticated -> 401

    expect(received).toBe(expected) // Object.is equality

    Expected: 401
    Received: 403

       8 |   test('unauthenticated -> 401', async () => {
       9 |     const res = await (VersionsPOST as any)(post('http://localhost/api/registry/versions', undefined, body));
    > 10 |     expect(res.status).toBe(401);
         |                        ^
      11 |   });
      12 |
      13 |   test('non-admin -> 403', async () => {

      at Object.<anonymous> (unit/api.registry.versions.auth-rate.spec.ts:10:24)

FAIL tests/unit/server.withRouteTiming.runtime-csrf-skip.spec.ts
  ● withRouteTiming skips CSRF on /api/runtime/* › cross-origin POST to runtime path passes without same-origin or double-submit

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 403

      23 |     const handler = withRouteTiming(async () => new Response(JSON.stringify({ ok: true }), { status: 200 }));
      24 |     const res = await (handler as any)(mkReq('http://localhost/api/runtime/progress', 'POST', { origin: 'http://evil.example', referer: 'http://evil.example/p' }) as any);
    > 25 |     expect(res.status).toBe(200);
         |                        ^
      26 |     expect(res.headers.get('x-request-id')).toBeTruthy();
      27 |   });
      28 | });

      at Object.<anonymous> (unit/server.withRouteTiming.runtime-csrf-skip.spec.ts:25:24)

{"level":30,"time":1755747803144,"pid":21,"hostname":"4829d5d9db2d","requestId":"b336c86d-1f6e-498e-99aa-4f566393b95c","ms":0,"msg":"route_success"}
PASS tests/unit/services.announcements.spec.ts
PASS tests/unit/ui/SystemThroughputProfiler.spec.tsx
FAIL tests/unit/api.files.download-ownership.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.files.download-ownership.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.files.download-ownership.spec.ts:1:1)

FAIL tests/unit/middleware.csrf-cookie.spec.ts
  ● middleware CSRF cookie issuance › sets csrf_token cookie when missing

    expect(received).toBeTruthy()

    Received: false

      39 |     // Our mock NextResponse.next returns an object with cookies Map interface
      40 |     const hasCookie = !!res?.cookies?.get?.('csrf_token');
    > 41 |     expect(hasCookie).toBeTruthy();
         |                       ^
      42 |   });
      43 | });
      44 |

      at Object.<anonymous> (unit/middleware.csrf-cookie.spec.ts:41:23)

FAIL tests/unit/api.files.content-type-default.spec.ts
  ● files default content_type › defaults to application/octet-stream when omitted

    expect(received).toBe(expected) // Object.is equality

    Expected: "application/octet-stream"
    Received: "application/json"

      22 |     const { id } = await put.json();
      23 |     const dl = await (DownloadGET as any)(getUrl(`http://localhost/api/files/download-url?id=${id}`, { 'x-test-auth': 'student' }));
    > 24 |     expect(dl.headers.get('content-type')).toBe('application/octet-stream');
         |                                            ^
      25 |   });
      26 | });
      27 |

      at Object.<anonymous> (unit/api.files.content-type-default.spec.ts:24:44)

{"level":30,"time":1755747807600,"pid":21,"hostname":"4829d5d9db2d","requestId":"68bdeddc-31a0-4f46-b9b8-48e2815b2103","ms":1,"msg":"route_success"}
{"level":30,"time":1755747807600,"pid":21,"hostname":"4829d5d9db2d","requestId":"57102530-ea80-453c-b27b-f9a5dd783582","ms":0,"msg":"route_success"}
{"level":30,"time":1755747807601,"pid":21,"hostname":"4829d5d9db2d","requestId":"dbfa8f93-c211-42c7-8eba-e46807130f0f","ms":0,"msg":"route_success"}
{"level":20,"time":1755747808406,"pid":21,"hostname":"4829d5d9db2d","ms":0,"msg":"dash_student_widgets"}
{"level":30,"time":1755747808407,"pid":21,"hostname":"4829d5d9db2d","requestId":"22eb9ab6-0fe8-4915-8363-7910aa9af640","ms":1,"msg":"route_success"}
{"level":30,"time":1755747808409,"pid":21,"hostname":"4829d5d9db2d","lessonId":"00000000-0000-0000-0000-000000000001","userId":"22222222-2222-2222-2222-222222222222","ms":0,"msg":"progress_marked"}
{"level":30,"time":1755747808409,"pid":21,"hostname":"4829d5d9db2d","requestId":"3fead0d9-99e9-48a0-b9e2-c8f3f8650710","ms":1,"msg":"route_success"}
PASS tests/unit/api.dto.enforced.on.success.spec.ts
FAIL tests/unit/api.progress.access.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.progress.access.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.progress.access.spec.ts:3:1)

PASS tests/unit/schemas.quiz.spec.ts
FAIL tests/unit/security.headers-and-origin.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/middleware' from 'unit/security.headers-and-origin.spec.ts'

    > 1 | import { middleware } from '../../apps/web/src/middleware';
        | ^
      2 | import { POST as MessagesPOST } from '../../apps/web/src/app/api/messages/route';
      3 |
      4 | function req(url: string, method = 'POST', headers?: Record<string,string>, body?: any) {

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/security.headers-and-origin.spec.ts:1:1)

PASS tests/unit/api.registry.rate-limit-and-auth.spec.ts
{"level":30,"time":1755747811597,"pid":21,"hostname":"4829d5d9db2d","requestId":"297443fa-0619-408b-a94d-b6b08cd81a75","ms":1,"msg":"route_success"}
{"level":30,"time":1755747811598,"pid":21,"hostname":"4829d5d9db2d","requestId":"49bd6c82-233a-4348-b487-5b4af0b20cb6","ms":1,"msg":"route_success"}
{"level":30,"time":1755747811600,"pid":21,"hostname":"4829d5d9db2d","requestId":"49d64af0-89bb-4dc5-a9e6-d7d3edde3db7","ms":0,"msg":"route_success"}
PASS tests/unit/security.csrf.double-submit.more-routes.spec.ts
PASS tests/unit/schemas.dashboard.spec.ts
FAIL tests/unit/api.runtime.teacher.outcomes.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.runtime.teacher.outcomes.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.runtime.teacher.outcomes.spec.ts:2:1)

FAIL tests/unit/api.files.resolve.spec.ts
  ● API /api/files/resolve › test-mode: returns mapping for keys with signed download-url

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      22 |   test('test-mode: returns mapping for keys with signed download-url', async () => {
      23 |     const res = await (ResolvePOST as any)(makePost({ keys: ['abc', 'x y', 'z/1'] }, { 'x-test-auth': 'student' }));
    > 24 |     expect(res.status).toBe(200);
         |                        ^
      25 |     const json = await res.json();
      26 |     expect(json['abc'].url).toBe('/api/files/download-url?id=abc');
      27 |     expect(json['x y'].url).toBe('/api/files/download-url?id=x%20y');

      at Object.<anonymous> (unit/api.files.resolve.spec.ts:24:24)

{"level":30,"time":1755747815207,"pid":21,"hostname":"4829d5d9db2d","requestId":"eb423324-ebbd-4f73-8844-8568e949f3f0","ms":1,"msg":"route_success"}
{"level":30,"time":1755747815208,"pid":21,"hostname":"4829d5d9db2d","requestId":"600f0e97-5ef5-4581-b7cd-c15894af4fcc","ms":0,"msg":"route_success"}
{"level":50,"time":1755747815209,"pid":21,"hostname":"4829d5d9db2d","requestId":"356ccc9d-1f53-42a0-ac7e-52c6a40d8b0a","issues":[{"path":"abc.url","message":"Invalid url"},{"path":"x y.url","message":"Invalid url"},{"path":"z/1.url","message":"Invalid url"}],"msg":"dto_response_validation_failed"}
{"level":30,"time":1755747815209,"pid":21,"hostname":"4829d5d9db2d","requestId":"f939a658-7e88-461f-9c76-1b2ce77dc762","ms":0,"msg":"route_success"}
{"level":30,"time":1755747816226,"pid":21,"hostname":"4829d5d9db2d","requestId":"6d45edf7-5eb4-4ec7-ae71-8fceb1d7c71c","ms":1,"msg":"route_success"}
{"level":30,"time":1755747816227,"pid":21,"hostname":"4829d5d9db2d","requestId":"6de1147e-c382-409a-b1b2-ea2ac3a52114","ms":0,"msg":"route_success"}
{"level":30,"time":1755747816228,"pid":21,"hostname":"4829d5d9db2d","lessonId":"00000000-0000-0000-0000-000000000001","userId":"22222222-2222-2222-2222-222222222222","ms":0,"msg":"progress_marked"}
{"level":30,"time":1755747816228,"pid":21,"hostname":"4829d5d9db2d","requestId":"fa8d1803-5ef4-40de-b5a5-f5f88b9338bb","ms":1,"msg":"route_success"}
PASS tests/unit/api.lessons-complete.spec.ts
PASS tests/unit/lib.jwksCache.ttl.spec.ts
FAIL tests/unit/client.serverFetch.csrf.spec.ts
  ● Console

    console.debug
      [serverFetch] 200 /api/messages 0ms

      at serverFetch (../apps/web/src/lib/serverFetch.ts:90:13)

  ● serverFetch CSRF header attachment › attaches x-csrf-token for unsafe methods when cookie present

    expect(received).toBe(expected) // Object.is equality

    Expected: "abc"
    Received: null

      20 |       Object.defineProperty(global, 'document', { value: { cookie: 'csrf_token=abc' }, configurable: true });
      21 |       await serverFetch('/api/messages', { method: 'POST', headers: { 'content-type': 'application/json' }, body: JSON.stringify({}) });
    > 22 |       expect(captured && typeof captured.get === 'function' ? captured.get('x-csrf-token') : captured['x-csrf-token']).toBe('abc');
         |                                                                                                                        ^
      23 |     } finally {
      24 |       (global as any).fetch = origFetch;
      25 |     }

      at Object.<anonymous> (unit/client.serverFetch.csrf.spec.ts:22:120)

PASS tests/unit/middleware.security-headers.spec.ts
FAIL tests/unit/api.runtime.outcomes.jwks.rotation.spec.ts
  ● runtime outcomes JWKS rotation › refreshes JWKS on verify failure

    expect(received).toContain(expected) // indexOf

    Expected value: 403
    Received array: [200, 201]

      21 |     const req = new Request('http://localhost/api/runtime/outcomes', { method: 'POST', headers: { 'content-type': 'application/json', authorization: 'Bearer PROVIDERJWT' } as any, body: JSON.stringify({ courseId: 'c1', userId: 'u1', event: { type: 'attempt.completed', runtimeAttemptId: 'ra1', score: 1, max: 1, passed: true } }) } as any);
      22 |     const res = await route.POST(req as any);
    > 23 |     expect([200,201]).toContain(res.status);
         |                       ^
      24 |   });
      25 | });
      26 |

      at Object.<anonymous> (unit/api.runtime.outcomes.jwks.rotation.spec.ts:23:23)

{"level":30,"time":1755747818251,"pid":21,"hostname":"4829d5d9db2d","requestId":"7e2bfec0-6e67-4085-842f-0eb67f382a28","ms":2,"msg":"route_success"}
{"level":50,"time":1755747819602,"pid":21,"hostname":"4829d5d9db2d","requestId":"b8fdeab1-dbb6-4182-ab90-798a381f5881","ms":2,"err":"supabase.from(...).insert is not a function","msg":"route_error"}
FAIL tests/unit/api.admin.quotas.ratelimit.headers.spec.ts
  ● admin quotas rate-limit headers › 429 includes retry-after and rate-limit headers

    TypeError: supabase.from(...).insert is not a function

      53 |   if (typeof body.used_bytes === 'number') row.used_bytes = body.used_bytes;
      54 |   // Use insert with onConflict for broader mock compatibility
    > 55 |   const resp = await (supabase.from('user_storage_quotas') as any).insert(row, { onConflict: 'user_id' } as any).select?.()?.single?.();
         |                                                                    ^
      56 |   const error = (resp as any)?.error ?? null;
      57 |   if (error) return NextResponse.json({ error: { code: 'DB_ERROR', message: error.message }, requestId }, { status: 500, headers: { 'x-request-id': requestId } });
      58 |   return jsonDto({ ok: true } as any, z.object({ ok: z.boolean() }) as any, { requestId, status: 200 });

      at PATCH (../apps/web/src/app/api/admin/quotas/route.ts:55:68)
      at Object.PATCH (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.admin.quotas.ratelimit.headers.spec.ts:18:17)

FAIL tests/unit/api.courses.transfer-owner.audit.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.courses.transfer-owner.audit.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.courses.transfer-owner.audit.spec.ts:3:1)

PASS tests/unit/api.admin.quotas.auth.spec.ts
FAIL tests/unit/api.launch-token.license.allow.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.launch-token.license.allow.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.launch-token.license.allow.spec.ts:1:1)

{"level":30,"time":1755747822019,"pid":21,"hostname":"4829d5d9db2d","requestId":"796c2a51-8075-4484-9588-2cc6d0eb24e9","ms":1,"msg":"route_success"}
{"level":30,"time":1755747822021,"pid":21,"hostname":"4829d5d9db2d","requestId":"747db0ed-7c0f-4235-89e5-59dd425abf4a","ms":1,"msg":"route_success"}
{"level":30,"time":1755747822022,"pid":21,"hostname":"4829d5d9db2d","requestId":"9db6b363-40fe-4020-9d2a-807789426119","ms":0,"msg":"route_success"}
{"level":30,"time":1755747822023,"pid":21,"hostname":"4829d5d9db2d","requestId":"87685f5d-2f5b-4168-b40c-39bda5a7bcea","ms":0,"msg":"route_success"}
{"level":30,"time":1755747823110,"pid":21,"hostname":"4829d5d9db2d","requestId":"8efa4a78-9f92-4514-aa57-ca8f252c4f42","ms":2,"msg":"route_success"}
{"level":30,"time":1755747823115,"pid":21,"hostname":"4829d5d9db2d","requestId":"7f07dcab-a5fb-40fa-bcc5-9acb6d8e77cf","ms":0,"msg":"route_success"}
{"level":30,"time":1755747823116,"pid":21,"hostname":"4829d5d9db2d","requestId":"1a4709bd-a298-41d3-94f3-a6818321490f","ms":0,"msg":"route_success"}
FAIL tests/unit/db.rls.assignments.negative.spec.ts
  ● Assignments RLS/authorization negatives › student cannot create assignment

    expect(received).toContain(expected) // indexOf

    Expected value: 400
    Received array: [401, 403]

      4 |     const req = new Request('http://localhost/api/assignments', { method: 'POST', headers: { 'content-type': 'application/json', 'x-test-auth': 'student' } as any, body: JSON.stringify({ course_id: 'c1', title: 'X', points: 10, due_at: null }) } as any);
      5 |     const res = await route.POST(req as any);
    > 6 |     expect([401,403]).toContain(res.status);
        |                       ^
      7 |   });
      8 |
      9 |   test('student cannot update assignment', async () => {

      at Object.<anonymous> (unit/db.rls.assignments.negative.spec.ts:6:23)

PASS tests/unit/api.admin.export.usage-deadletters.csv.spec.ts
FAIL tests/unit/api.providers.get.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.providers.get.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.providers.get.spec.ts:3:1)

{"level":30,"time":1755747823915,"pid":21,"hostname":"4829d5d9db2d","requestId":"282b0ea8-18ca-444e-ae28-0aa85c5d9d29","ms":3,"msg":"route_success"}
{"level":30,"time":1755747823919,"pid":21,"hostname":"4829d5d9db2d","requestId":"5182446a-45d0-462e-9185-2b23d8364670","ms":1,"msg":"route_success"}
{"level":30,"time":1755747823921,"pid":21,"hostname":"4829d5d9db2d","requestId":"94e44ef9-64b5-4338-812d-139453e3440e","ms":1,"msg":"route_success"}
PASS tests/unit/runtimeAuth.verify.spec.ts
PASS tests/unit/api.quiz-choices.dto.spec.ts
{"level":30,"time":1755747825925,"pid":21,"hostname":"4829d5d9db2d","requestId":"7bf04e6e-b647-4e35-8bc6-36167f48b52c","ms":1,"msg":"route_success"}
{"level":30,"time":1755747825928,"pid":21,"hostname":"4829d5d9db2d","requestId":"b79fa883-2111-44df-8f2e-74bbf9fc718c","ms":1,"msg":"route_success"}
{"level":30,"time":1755747826611,"pid":21,"hostname":"4829d5d9db2d","requestId":"8f6fc930-4172-466e-a565-e79fa9b1bdf2","ms":1,"msg":"route_success"}
{"level":30,"time":1755747826612,"pid":21,"hostname":"4829d5d9db2d","requestId":"hdr-1","ms":0,"msg":"route_success"}
PASS tests/unit/api.files.guards-and-headers.spec.ts
PASS tests/unit/api.headers.security.spec.ts
PASS tests/unit/api.quiz-questions.dto.spec.ts
{"level":30,"time":1755747827686,"pid":21,"hostname":"4829d5d9db2d","requestId":"6dd3093f-08c3-4b35-a032-0cc714b8a437","ms":1,"msg":"route_success"}
{"level":30,"time":1755747827688,"pid":21,"hostname":"4829d5d9db2d","requestId":"2da515d6-e859-420c-bcb7-c9a061cbb60b","ms":1,"msg":"route_success"}
{"level":30,"time":1755747828133,"pid":21,"hostname":"4829d5d9db2d","requestId":"c51755ce-baba-4276-980f-adf86b510308","ms":1,"msg":"route_success"}
{"level":30,"time":1755747828135,"pid":21,"hostname":"4829d5d9db2d","requestId":"9d0fd35a-6611-4f5f-b902-62a76e628f39","ms":1,"msg":"route_success"}
PASS tests/unit/api.notifications.prefs.dto.spec.ts
FAIL tests/unit/api.files.upload-put.avscan.spec.ts
  ● files upload PUT test-mode AV scan › rejects EICAR test string

    expect(received).toContain(expected) // indexOf

    Expected value: 500
    Received array: [400, 401, 403]

      13 |     const eicar = 'X5O!P%25@AP[4\\PZX54(P^)7CC)7}$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*';
      14 |     const res = await (UploadPut as any)(put(url, headers, eicar));
    > 15 |     expect([400,401,403]).toContain(res.status);
         |                           ^
      16 |   });
      17 |
      18 |   test('accepts small benign text', async () => {

      at Object.<anonymous> (unit/api.files.upload-put.avscan.spec.ts:15:27)

  ● files upload PUT test-mode AV scan › accepts small benign text

    expect(received).toContain(expected) // indexOf

    Expected value: 500
    Received array: [200, 401, 403]

      21 |     const url = 'http://localhost/api/files/upload-url?owner_type=user&owner_id=22222222-2222-2222-2222-222222222222&content_type=text/plain';
      22 |     const res = await (UploadPut as any)(put(url, headers, 'hello'));
    > 23 |     expect([200,401,403]).toContain(res.status);
         |                           ^
      24 |   });
      25 | });
      26 |

      at Object.<anonymous> (unit/api.files.upload-put.avscan.spec.ts:23:27)

{"level":50,"time":1755747828855,"pid":21,"hostname":"4829d5d9db2d","requestId":"f6497669-d01f-4b29-851f-9f0a6950db15","issues":[{"path":"url","message":"Invalid url"}],"msg":"dto_response_validation_failed"}
{"level":30,"time":1755747828855,"pid":21,"hostname":"4829d5d9db2d","requestId":"053009ae-4177-46c7-886f-7038658c3659","ms":2,"msg":"route_success"}
{"level":50,"time":1755747828861,"pid":21,"hostname":"4829d5d9db2d","requestId":"caf4de7a-59da-428f-be1d-1fdf199a37b8","issues":[{"path":"url","message":"Invalid url"}],"msg":"dto_response_validation_failed"}
{"level":30,"time":1755747828861,"pid":21,"hostname":"4829d5d9db2d","requestId":"f4e3ce93-26ca-457d-ab97-1dae76851860","ms":1,"msg":"route_success"}
PASS tests/unit/api.health.spec.ts
FAIL tests/unit/api.events.producers.spec.ts
  ● Event producers (TEST_MODE) › lesson complete records event

    expect(received).toBeTruthy()

    Received: undefined

       9 |     await markLessonComplete('22222222-2222-2222-2222-222222222222', 'aaaaaaaa-aaaa-aaaa-aaaa-000000000111');
      10 |     const ev = getInMemoryEvents().find(e => e.event_type === 'lesson.complete');
    > 11 |     expect(ev).toBeTruthy();
         |                ^
      12 |   });
      13 |
      14 |   test('submission create and grade records events', async () => {

      at Object.<anonymous> (unit/api.events.producers.spec.ts:11:16)

  ● Event producers (TEST_MODE) › submission create and grade records events

    expect(received).toBeTruthy()

    Received: undefined

      17 |     const sub = await createSubmissionApi({ assignment_id: 'aaaaaaaa-aaaa-aaaa-aaaa-000000000222', text: '' } as any, '22222222-2222-2222-2222-222222222222');
      18 |     const createEv = getInMemoryEvents().find(e => e.event_type === 'assignment.submit');
    > 19 |     expect(createEv).toBeTruthy();
         |                      ^
      20 |     await gradeSubmissionApi(sub.id, { score: 95 }, '11111111-1111-1111-1111-111111111111');
      21 |     const gradeEv = getInMemoryEvents().find(e => e.event_type === 'assignment.graded');
      22 |     expect(gradeEv).toBeTruthy();

      at Object.<anonymous> (unit/api.events.producers.spec.ts:19:22)

{"level":30,"time":1755747830462,"pid":21,"hostname":"4829d5d9db2d","lessonId":"aaaaaaaa-aaaa-aaaa-aaaa-000000000111","userId":"22222222-2222-2222-2222-222222222222","ms":1,"msg":"progress_marked"}
{"level":30,"time":1755747830947,"pid":21,"hostname":"4829d5d9db2d","requestId":"454a706b-b1eb-42ce-ad42-2f6031e7efa5","ms":4,"msg":"route_success"}
PASS tests/unit/lib.cors.preflight.spec.ts
PASS tests/unit/api.csrf.double-submit.negatives.spec.ts
FAIL tests/unit/api.files.upload-url.quota.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.files.upload-url.quota.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.files.upload-url.quota.spec.ts:2:1)

PASS tests/unit/apiHandler.ratelimit.spec.ts
FAIL tests/unit/api.reports.dto.spec.ts
  ● reports endpoints headers and DTO-like responses › GET /api/reports/grade-distribution CSV includes header and x-request-id

    expect(received).toBeTruthy()

    Received: false

      20 |     expect(res.headers.get('x-request-id')).toBeTruthy();
      21 |     const ct = res.headers.get('content-type') || '';
    > 22 |     expect(ct.includes('text/csv')).toBeTruthy();
         |                                     ^
      23 |   });
      24 | });
      25 |

      at Object.<anonymous> (unit/api.reports.dto.spec.ts:22:37)

{"level":30,"time":1755747832891,"pid":21,"hostname":"4829d5d9db2d","requestId":"10bc994d-201e-4d9b-a77c-7bb48c16d4ee","ms":1,"msg":"route_success"}
{"level":30,"time":1755747832893,"pid":21,"hostname":"4829d5d9db2d","requestId":"caed613f-787a-42ce-b356-bd729a91a457","ms":1,"msg":"route_success"}
{"level":30,"time":1755747833835,"pid":21,"hostname":"4829d5d9db2d","requestId":"23804d22-b35a-4f44-b674-5559b6bd9a13","ms":1,"msg":"route_success"}
FAIL tests/unit/api.notifications.patch.csrf.spec.ts
  ● notifications preferences PATCH respects CSRF double-submit › 403 when tokens missing or mismatched; 200 when matched

    expect(received).toContain(expected) // indexOf

    Expected value: 401
    Received array: [200]

      17 |     // Match -> 200
      18 |     res = await (NotifPrefsPATCH as any)(patch({ origin: 'http://localhost', referer: 'http://localhost/p', cookie: 'csrf_token=t', 'x-csrf-token': 't', 'content-type': 'application/json' }));
    > 19 |     expect([200]).toContain(res.status);
         |                   ^
      20 |   });
      21 | });
      22 |

      at Object.<anonymous> (unit/api.notifications.patch.csrf.spec.ts:19:19)

PASS tests/unit/api.submissions.csrf.negatives.spec.ts
FAIL tests/unit/ui/TeacherAnnouncements.spec.tsx
  ● Teacher Announcements (labs) › renders course count and announcement list with jitter

    TypeError: c.getAll is not a function

      11 |   const h = headers();
      12 |   const c = cookies();
    > 13 |   const cookieHeader = h.get("cookie") ?? c.getAll().map(x => `${x.name}=${x.value}`).join("; ");
         |                                             ^
      14 |   const testAuth = h.get("x-test-auth") ?? c.get("x-test-auth")?.value;
      15 |
      16 |   const baseHeaders = { ...(cookieHeader ? { cookie: cookieHeader } : {}), ...(testAuth ? { "x-test-auth": testAuth } : {}) } as HeadersInit;

      at TeacherAnnouncementsPage (../apps/web/src/app/labs/teacher/announcements/page.tsx:13:45)
      at Object.<anonymous> (unit/ui/TeacherAnnouncements.spec.tsx:25:46)

FAIL tests/unit/api.parent.progress.csv-json.auth.spec.ts
  ● parent progress GET (CSV/JSON, auth roles) › admin CSV -> text/csv

    expect(received).toMatch(expected)

    Expected pattern: /text\/csv/
    Received string:  "application/json"

      28 |     expect([200,403,401]).toContain(res.status);
      29 |     if (res.status === 200) {
    > 30 |       expect(res.headers.get('content-type') || '').toMatch(/text\/csv/);
         |                                                     ^
      31 |     }
      32 |   });
      33 | });

      at Object.<anonymous> (unit/api.parent.progress.csv-json.auth.spec.ts:30:53)

FAIL tests/unit/api.user-profile.put.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.user-profile.put.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.user-profile.put.spec.ts:3:1)

{"level":30,"time":1755747839558,"pid":21,"hostname":"4829d5d9db2d","requestId":"fd66967b-7946-4af5-917a-8f797c8c8779","ms":1,"msg":"route_success"}
{"level":30,"time":1755747839560,"pid":21,"hostname":"4829d5d9db2d","requestId":"e1218576-5d03-4963-8234-70ea9c40128b","ms":1,"msg":"route_success"}
{"level":30,"time":1755747839576,"pid":21,"hostname":"4829d5d9db2d","requestId":"89f688e1-e153-438d-ac69-aa9e7917888d","ms":7,"msg":"route_success"}
{"level":30,"time":1755747839623,"pid":21,"hostname":"4829d5d9db2d","requestId":"4361f36a-b28f-461d-9d66-a8b37502d21d","ms":1,"msg":"route_success"}
PASS tests/unit/ui/TeacherCourseInsightsAdvanced.spec.tsx
  ● Console

    console.debug
      [serverFetch] 404 /api/courses 7ms

      at serverFetch (../apps/web/src/lib/serverFetch.ts:90:13)

    console.debug
      [serverFetch] 404 /api/courses 7ms

      at serverFetch (../apps/web/src/lib/serverFetch.ts:90:13)

    console.debug
      [serverFetch] 404 /api/lessons?course_id=00000000-0000-0000-0000-0000000000c1 8ms

      at serverFetch (../apps/web/src/lib/serverFetch.ts:90:13)

    console.debug
      [serverFetch] 404 /api/lessons?course_id=00000000-0000-0000-0000-0000000000c1 9ms

      at serverFetch (../apps/web/src/lib/serverFetch.ts:90:13)

FAIL tests/unit/api.admin.quotas.patch.spec.ts
  ● admin quotas PATCH auth and rate limit › rate limit headers when exceeded

    TypeError: supabase.from(...).insert is not a function

      53 |   if (typeof body.used_bytes === 'number') row.used_bytes = body.used_bytes;
      54 |   // Use insert with onConflict for broader mock compatibility
    > 55 |   const resp = await (supabase.from('user_storage_quotas') as any).insert(row, { onConflict: 'user_id' } as any).select?.()?.single?.();
         |                                                                    ^
      56 |   const error = (resp as any)?.error ?? null;
      57 |   if (error) return NextResponse.json({ error: { code: 'DB_ERROR', message: error.message }, requestId }, { status: 500, headers: { 'x-request-id': requestId } });
      58 |   return jsonDto({ ok: true } as any, z.object({ ok: z.boolean() }) as any, { requestId, status: 200 });

      at PATCH (../apps/web/src/app/api/admin/quotas/route.ts:55:68)
      at Object.PATCH (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.admin.quotas.patch.spec.ts:20:5)

{"level":30,"time":1755747842528,"pid":21,"hostname":"4829d5d9db2d","requestId":"21ff8776-afd6-4d6d-9521-c936d462db8f","ms":0,"msg":"route_success"}
{"level":30,"time":1755747842530,"pid":21,"hostname":"4829d5d9db2d","requestId":"bb22c048-6c28-4767-857a-ab6558cad6a7","ms":0,"msg":"route_success"}
{"level":50,"time":1755747842532,"pid":21,"hostname":"4829d5d9db2d","requestId":"632ffe31-2032-482b-9182-6dd3e8063b20","ms":1,"err":"supabase.from(...).insert is not a function","msg":"route_error"}
{"level":30,"time":1755747843478,"pid":21,"hostname":"4829d5d9db2d","requestId":"1c65a623-06e4-495f-a3a5-27644a490500","ms":1,"msg":"route_success"}
PASS tests/unit/api.notifications-preferences.rate-limit.spec.ts
FAIL tests/unit/client.serverFetch.request-id.spec.ts
  ● serverFetch request-id propagation › propagates x-request-id from server headers

    TypeError: Cannot read properties of null (reading 'x-request-id')

      19 |       // Since we can't easily stub next/headers in this environment, we directly pass an init with x-request-id (treated as upstream)
      20 |       await serverFetch('/api/health', { headers: { 'x-request-id': upstreamId } as any });
    > 21 |       const val = (captured && typeof (captured as any).get === 'function') ? (captured as any).get('x-request-id') : (captured as any)['x-request-id'];
         |                                                                                                                                        ^
      22 |       expect(val).toBe(upstreamId);
      23 |     } finally {
      24 |       (global as any).fetch = origFetch;

      at Object.<anonymous> (unit/client.serverFetch.request-id.spec.ts:21:136)

FAIL tests/unit/api.files.download-url.dev-namespace.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.files.download-url.dev-namespace.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.files.download-url.dev-namespace.spec.ts:3:1)

FAIL tests/unit/api.providers.create.negatives.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.providers.create.negatives.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.providers.create.negatives.spec.ts:3:1)

PASS tests/unit/schemas.announcement.spec.ts
FAIL tests/unit/rate-limit.headers.spec.ts
  ● rate limit headers on 429 › messages POST returns standard headers when throttled

    expect(received).toContain(expected) // indexOf

    Expected value: 400
    Received array: [201, 401, 403, 429, 500]

      23 |       expect(last.headers.get('x-rate-limit-reset')).toBeTruthy();
      24 |     } else {
    > 25 |       expect([201,401,403,429,500]).toContain(last.status);
         |                                     ^
      26 |     }
      27 |   });
      28 | });

      at Object.<anonymous> (unit/rate-limit.headers.spec.ts:25:37)

{"level":30,"time":1755747848870,"pid":21,"hostname":"4829d5d9db2d","requestId":"e3941970-1a5f-4eae-af9b-250dc5b14b09","ms":1,"msg":"route_success"}
{"level":30,"time":1755747848871,"pid":21,"hostname":"4829d5d9db2d","requestId":"42610dd1-b44b-45b7-9397-5d9528856a46","ms":1,"msg":"route_success"}
{"level":30,"time":1755747848871,"pid":21,"hostname":"4829d5d9db2d","requestId":"3ef75123-be55-48b7-a71d-546bd0680a2a","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848871,"pid":21,"hostname":"4829d5d9db2d","requestId":"4cb46e1b-e766-4a85-af45-f5a6a8551d17","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848872,"pid":21,"hostname":"4829d5d9db2d","requestId":"9d64f234-e5d4-4eab-9df5-505e027e11b6","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848872,"pid":21,"hostname":"4829d5d9db2d","requestId":"137e46ba-416c-4ef7-a75b-f341d4b74ee3","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848872,"pid":21,"hostname":"4829d5d9db2d","requestId":"ce5ef3aa-db4d-4562-8e08-897a96fbb2fa","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848873,"pid":21,"hostname":"4829d5d9db2d","requestId":"f95911ed-9e7b-413f-bfd0-801ba6f113a1","ms":1,"msg":"route_success"}
{"level":30,"time":1755747848873,"pid":21,"hostname":"4829d5d9db2d","requestId":"2c5403be-ecf4-4462-aff6-0a229e68cf9f","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848873,"pid":21,"hostname":"4829d5d9db2d","requestId":"a2f77b5b-dc9d-48f1-be3c-e02643580fe9","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848874,"pid":21,"hostname":"4829d5d9db2d","requestId":"ee322c77-621b-473e-b884-effb2cb90ec1","ms":1,"msg":"route_success"}
{"level":30,"time":1755747848874,"pid":21,"hostname":"4829d5d9db2d","requestId":"ad579979-f805-4854-8c0f-c93c3f55a6b9","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848874,"pid":21,"hostname":"4829d5d9db2d","requestId":"0b3eb99a-02c1-4136-b7bf-f0deee259862","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848875,"pid":21,"hostname":"4829d5d9db2d","requestId":"c751d1bc-fc70-4929-907e-358f952becb9","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848875,"pid":21,"hostname":"4829d5d9db2d","requestId":"991b5caf-7115-4901-8c47-5b2e11cdf2df","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848875,"pid":21,"hostname":"4829d5d9db2d","requestId":"bb3cc603-763a-4836-9779-86d7e2c9d239","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848876,"pid":21,"hostname":"4829d5d9db2d","requestId":"aec13575-140c-4cbb-bd94-5c044a90bdfe","ms":1,"msg":"route_success"}
{"level":30,"time":1755747848876,"pid":21,"hostname":"4829d5d9db2d","requestId":"8ecaaad5-14c8-47a5-9072-25cf8f5269bc","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848876,"pid":21,"hostname":"4829d5d9db2d","requestId":"2899fe90-83e3-41e3-a428-c4e6afd6f800","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848877,"pid":21,"hostname":"4829d5d9db2d","requestId":"d7b8f3b8-322b-4f44-98e6-94829513e826","ms":1,"msg":"route_success"}
{"level":30,"time":1755747848877,"pid":21,"hostname":"4829d5d9db2d","requestId":"dd42323f-3260-462e-9c9a-f49db97b2e7d","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848878,"pid":21,"hostname":"4829d5d9db2d","requestId":"49c33054-812e-4431-ba61-7d276412420f","ms":1,"msg":"route_success"}
{"level":30,"time":1755747848879,"pid":21,"hostname":"4829d5d9db2d","requestId":"ea432625-0646-4e35-abc4-762947749265","ms":1,"msg":"route_success"}
{"level":30,"time":1755747848880,"pid":21,"hostname":"4829d5d9db2d","requestId":"3c6fff24-321f-4577-8d3b-a7face6c005c","ms":1,"msg":"route_success"}
{"level":30,"time":1755747848881,"pid":21,"hostname":"4829d5d9db2d","requestId":"48a32530-aac1-4b5a-ab70-9448a868ed57","ms":1,"msg":"route_success"}
{"level":30,"time":1755747848882,"pid":21,"hostname":"4829d5d9db2d","requestId":"251baf68-e9e6-4920-ae12-29437a2f5e9d","ms":1,"msg":"route_success"}
{"level":30,"time":1755747848882,"pid":21,"hostname":"4829d5d9db2d","requestId":"628645e6-0b76-41c8-8319-88dead220499","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848883,"pid":21,"hostname":"4829d5d9db2d","requestId":"775388bf-85d3-4d4d-8247-b72d59c540c8","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848885,"pid":21,"hostname":"4829d5d9db2d","requestId":"b8e5ab6b-f95a-4694-a59d-d590637a093e","ms":1,"msg":"route_success"}
{"level":30,"time":1755747848886,"pid":21,"hostname":"4829d5d9db2d","requestId":"94c0c908-76fe-4932-adc9-2d6fb49f6318","ms":1,"msg":"route_success"}
{"level":30,"time":1755747848886,"pid":21,"hostname":"4829d5d9db2d","requestId":"2832df26-f04a-489c-a214-9fa2c6ca51f6","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848886,"pid":21,"hostname":"4829d5d9db2d","requestId":"784bda39-65dc-489d-9186-dfd97a4d8ab4","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848887,"pid":21,"hostname":"4829d5d9db2d","requestId":"9720bb6e-b9d0-4908-ba8a-6391102152b9","ms":1,"msg":"route_success"}
{"level":30,"time":1755747848887,"pid":21,"hostname":"4829d5d9db2d","requestId":"7c111ac5-c0eb-47cb-a857-8b18a8d572d7","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848887,"pid":21,"hostname":"4829d5d9db2d","requestId":"0a88a2d9-950b-4697-b2af-a1f7383996b6","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848888,"pid":21,"hostname":"4829d5d9db2d","requestId":"3d5e1dc9-a2f7-4d1d-abb8-ef840e76b525","ms":1,"msg":"route_success"}
{"level":30,"time":1755747848888,"pid":21,"hostname":"4829d5d9db2d","requestId":"aeb0a87c-29f9-4e34-b2c3-992a699ff908","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848888,"pid":21,"hostname":"4829d5d9db2d","requestId":"29894ba8-1000-4e96-826c-2107ab7d15bf","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848888,"pid":21,"hostname":"4829d5d9db2d","requestId":"23f4a4f2-b049-4c0e-a79b-40c43191b671","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848888,"pid":21,"hostname":"4829d5d9db2d","requestId":"462cbf63-a3ad-42c3-b74a-a6c0d35d9fe2","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848889,"pid":21,"hostname":"4829d5d9db2d","requestId":"af8e2823-3702-437b-88ec-d51da4b1d5d8","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848889,"pid":21,"hostname":"4829d5d9db2d","requestId":"32e681ca-3789-4225-9c38-0f129a207a1b","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848889,"pid":21,"hostname":"4829d5d9db2d","requestId":"7491bc65-7ebe-4131-8312-4195c719c831","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848890,"pid":21,"hostname":"4829d5d9db2d","requestId":"2e236209-ddfa-4d42-974e-ed46772430d3","ms":1,"msg":"route_success"}
{"level":30,"time":1755747848890,"pid":21,"hostname":"4829d5d9db2d","requestId":"c2143737-9a81-426e-a31f-f0c77a8ae559","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848891,"pid":21,"hostname":"4829d5d9db2d","requestId":"5867395b-142d-48f1-9a5d-ac6d01d12dd7","ms":1,"msg":"route_success"}
{"level":30,"time":1755747848892,"pid":21,"hostname":"4829d5d9db2d","requestId":"9d998a2f-e345-4c2e-8559-034ec9298e95","ms":1,"msg":"route_success"}
{"level":30,"time":1755747848892,"pid":21,"hostname":"4829d5d9db2d","requestId":"79efd2ea-664d-4722-994f-63371225440f","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848892,"pid":21,"hostname":"4829d5d9db2d","requestId":"5894f12a-dc59-49e8-9f34-f8d43d4d2e0e","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848893,"pid":21,"hostname":"4829d5d9db2d","requestId":"7833537d-6144-4092-a42e-c8505d2c4b44","ms":1,"msg":"route_success"}
{"level":30,"time":1755747848893,"pid":21,"hostname":"4829d5d9db2d","requestId":"d69223aa-256a-4059-8a72-bd2718e54214","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848893,"pid":21,"hostname":"4829d5d9db2d","requestId":"5d6cddf4-4631-44d5-a628-12a1dc3b7aa3","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848893,"pid":21,"hostname":"4829d5d9db2d","requestId":"e2ab58b4-6e99-4a54-9539-17965f58dbfb","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848894,"pid":21,"hostname":"4829d5d9db2d","requestId":"1cd0c932-fda6-4144-a4af-3cdf4d5c97c5","ms":1,"msg":"route_success"}
{"level":30,"time":1755747848894,"pid":21,"hostname":"4829d5d9db2d","requestId":"a3e85de3-18e9-4153-889c-e9eb7cdda867","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848894,"pid":21,"hostname":"4829d5d9db2d","requestId":"c0929499-1e79-427d-bda3-cb2f5cb27262","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848894,"pid":21,"hostname":"4829d5d9db2d","requestId":"12effee3-852b-4bad-a428-bef6fd52d125","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848895,"pid":21,"hostname":"4829d5d9db2d","requestId":"f39416ad-016f-4c14-866e-d64c6396f820","ms":1,"msg":"route_success"}
{"level":30,"time":1755747848895,"pid":21,"hostname":"4829d5d9db2d","requestId":"445bb385-bec3-4e9a-9d48-081b5d10e6f4","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848895,"pid":21,"hostname":"4829d5d9db2d","requestId":"4e79def8-01d4-4700-b015-02c225bdc569","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848895,"pid":21,"hostname":"4829d5d9db2d","requestId":"57a94dbb-96ae-41cf-b398-f0bd57b380d6","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848896,"pid":21,"hostname":"4829d5d9db2d","requestId":"9405f7a2-aa5e-4855-8e26-2acc12076ea7","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848896,"pid":21,"hostname":"4829d5d9db2d","requestId":"9254ad00-c0ba-4797-a77d-0cb8c9d50a52","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848897,"pid":21,"hostname":"4829d5d9db2d","requestId":"4cb61043-f96e-471d-86f2-68baac4c5443","ms":1,"msg":"route_success"}
{"level":30,"time":1755747848897,"pid":21,"hostname":"4829d5d9db2d","requestId":"4535ae87-6298-4cd6-8464-abc63b8d71d9","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848898,"pid":21,"hostname":"4829d5d9db2d","requestId":"3892e3b7-8a2b-4b7d-a1cf-b424c9b5182a","ms":1,"msg":"route_success"}
{"level":30,"time":1755747848898,"pid":21,"hostname":"4829d5d9db2d","requestId":"0fdb73b0-0f99-4b55-a2c0-02fed28dcc9e","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848898,"pid":21,"hostname":"4829d5d9db2d","requestId":"682b7f20-5eb2-4544-8b94-174a41464cab","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848900,"pid":21,"hostname":"4829d5d9db2d","requestId":"5739f096-92b9-490c-906a-5f732a50ff94","ms":1,"msg":"route_success"}
{"level":30,"time":1755747848901,"pid":21,"hostname":"4829d5d9db2d","requestId":"8f35114e-240f-4793-93b8-bac224e92481","ms":1,"msg":"route_success"}
{"level":30,"time":1755747848901,"pid":21,"hostname":"4829d5d9db2d","requestId":"7efcbbe1-41a6-4e6c-88e4-b0d5831cb616","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848902,"pid":21,"hostname":"4829d5d9db2d","requestId":"ee377857-32f0-4f14-86b9-ee17d60b045a","ms":1,"msg":"route_success"}
{"level":30,"time":1755747848902,"pid":21,"hostname":"4829d5d9db2d","requestId":"9ccc6c50-36a1-4c85-b0b6-5901e7a972da","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848903,"pid":21,"hostname":"4829d5d9db2d","requestId":"af502d9e-1f9b-4e84-b475-949afa74dccd","ms":1,"msg":"route_success"}
{"level":30,"time":1755747848904,"pid":21,"hostname":"4829d5d9db2d","requestId":"8bc65ccf-ec4b-4cf7-a095-e7d06775d84e","ms":1,"msg":"route_success"}
{"level":30,"time":1755747848904,"pid":21,"hostname":"4829d5d9db2d","requestId":"1276cfac-65ab-4a2b-9d1e-7c6e81f79d05","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848905,"pid":21,"hostname":"4829d5d9db2d","requestId":"0c6e5384-d048-4e9d-8887-7200389fd473","ms":1,"msg":"route_success"}
{"level":30,"time":1755747848906,"pid":21,"hostname":"4829d5d9db2d","requestId":"df532ce9-1e29-4122-bc8b-c6359c7acc2d","ms":1,"msg":"route_success"}
{"level":30,"time":1755747848906,"pid":21,"hostname":"4829d5d9db2d","requestId":"47cb05e4-9f32-4fbc-be4a-d6bae30eac27","ms":0,"msg":"route_success"}
{"level":30,"time":1755747848907,"pid":21,"hostname":"4829d5d9db2d","requestId":"0703f290-4a5c-4e61-91ab-b3f01905703b","ms":0,"msg":"route_success"}
{"level":30,"time":1755747849321,"pid":21,"hostname":"4829d5d9db2d","requestId":"43b32351-5be4-4c20-89bf-267351852d5e","ms":0,"msg":"route_success"}
PASS tests/unit/withRouteTiming.global-rate-limit.spec.ts
FAIL tests/unit/api.providers.create.happy-path.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.providers.create.happy-path.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.providers.create.happy-path.spec.ts:3:1)

PASS tests/unit/ui/SystemDiagnosticsSuite.spec.tsx
PASS tests/unit/ui/StudentStudyDigest.spec.tsx
  ● Console

    console.debug
      [serverFetch] 404 /api/enrollments 3ms

      at serverFetch (../apps/web/src/lib/serverFetch.ts:90:13)

    console.debug
      [serverFetch] 404 /api/enrollments 2ms

      at serverFetch (../apps/web/src/lib/serverFetch.ts:90:13)

PASS tests/unit/api.progress.student-map.spec.ts
{"level":30,"time":1755747852428,"pid":21,"hostname":"4829d5d9db2d","requestId":"caf612a2-efa4-4ff5-b81c-f6ec8709f300","ms":1,"msg":"route_success"}
{"level":30,"time":1755747852430,"pid":21,"hostname":"4829d5d9db2d","requestId":"rid-1","ms":1,"msg":"route_success"}
{"level":30,"time":1755747852431,"pid":21,"hostname":"4829d5d9db2d","requestId":"5be54f4c-602a-475d-b103-c4b19fdba432","ms":1,"msg":"route_success"}
{"level":30,"time":1755747854582,"pid":21,"hostname":"4829d5d9db2d","requestId":"927d7f7b-68a6-4e0b-83a4-3386bfef2451","ms":2,"msg":"route_success"}
FAIL tests/unit/api.messages.post.ratelimit.spec.ts
  ● messages POST rate limit headers › returns 429 with standard headers when rate-limited

    expect(received).toBe(expected) // Object.is equality

    Expected: 429
    Received: 201

      19 |   test('returns 429 with standard headers when rate-limited', async () => {
      20 |     const res = await (MessagesPOST as any)(post({ thread_id: '00000000-0000-0000-0000-000000000001', body: 'hello' }));
    > 21 |     expect(res.status).toBe(429);
         |                        ^
      22 |     expect(res.headers.get('retry-after')).toBeTruthy();
      23 |     expect(res.headers.get('x-rate-limit-reset')).toBeTruthy();
      24 |     expect(res.headers.get('x-rate-limit-remaining')).toBe('0');

      at Object.<anonymous> (unit/api.messages.post.ratelimit.spec.ts:21:24)

PASS tests/unit/server.withRouteTiming.ratelimit.spec.ts
{"level":30,"time":1755747855854,"pid":21,"hostname":"4829d5d9db2d","requestId":"d51189b9-06df-4057-a170-d77ef98b29f1","ms":2,"msg":"route_success"}
{"level":30,"time":1755747856884,"pid":21,"hostname":"4829d5d9db2d","requestId":"b8d1538c-e7a2-4a49-b1d6-dfc096437391","ms":1,"msg":"route_success"}
{"level":30,"time":1755747856885,"pid":21,"hostname":"4829d5d9db2d","requestId":"6337776f-e4b2-45b6-b2d7-a0e2dd9cc85f","ms":0,"msg":"route_success"}
PASS tests/unit/api.files.access.spec.ts
FAIL tests/unit/api.providers.health.ratelimit.spec.ts
  ● providers health rate-limit headers › 429 includes retry-after and x-rate-limit-* headers

    TypeError: supabase.from(...).select(...).eq is not a function

      33 |
      34 |   const supabase = getRouteHandlerSupabase();
    > 35 |   const { data: row, error } = await supabase.from('course_providers').select('id,name,jwks_url,domain').eq('id', q.id).single();
         |                                                                                                          ^
      36 |   if (error) return NextResponse.json({ error: { code: 'DB_ERROR', message: error.message }, requestId }, { status: 500, headers: { 'x-request-id': requestId } });
      37 |   if (!row) return NextResponse.json({ error: { code: 'NOT_FOUND', message: 'Provider not found' }, requestId }, { status: 404, headers: { 'x-request-id': requestId } });
      38 |

      at GET (../apps/web/src/app/api/providers/health/route.ts:35:106)
      at Object.GET (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.providers.health.ratelimit.spec.ts:17:15)

FAIL tests/unit/api.files.quota.enforcement.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.files.quota.enforcement.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.files.quota.enforcement.spec.ts:2:1)

FAIL tests/unit/api.enrollments.launch-token.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.enrollments.launch-token.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.enrollments.launch-token.spec.ts:3:1)

{"level":50,"time":1755747858188,"pid":21,"hostname":"4829d5d9db2d","requestId":"bb2612de-518e-4127-8a0d-5299c5c0857b","ms":3,"err":"supabase.from(...).select(...).eq is not a function","msg":"route_error"}
{"level":30,"time":1755747861756,"pid":21,"hostname":"4829d5d9db2d","requestId":"6d061709-ce69-47ba-b3fa-b520d10170c3","ms":1,"msg":"route_success"}
{"level":50,"time":1755747861758,"pid":21,"hostname":"4829d5d9db2d","requestId":"e60de803-c70d-4836-a010-5b0230633507","ms":1,"err":"boom","msg":"route_error"}
PASS tests/unit/server.withRouteTiming.metrics.spec.ts
PASS tests/unit/apiHandler.requestId.spec.ts
PASS tests/unit/services.assignments.spec.ts
FAIL tests/unit/gateways/reports.gateway.spec.ts
  ● ReportsGateway › engagement returns counters (course scoped)

    expect(received).toBe(expected) // Object.is equality

    Expected: 3
    Received: 12

      15 |     }));
      16 |     const out = await createReportsGateway().engagement('c-1');
    > 17 |     expect(out.lessons).toBe(3);
         |                         ^
      18 |     expect(out.assignments).toBe(2);
      19 |   });
      20 |

      at Object.<anonymous> (unit/gateways/reports.gateway.spec.ts:17:25)

  ● ReportsGateway › gradeDistribution returns shape (admin/global)

    expect(received).toBe(expected) // Object.is equality

    Expected: 10
    Received: 42

      28 |     }));
      29 |     const out = await createReportsGateway().gradeDistribution();
    > 30 |     expect(out.total).toBe(10);
         |                       ^
      31 |     expect(out.dist[0].bucket).toBe('80-89');
      32 |   });
      33 | });

      at Object.<anonymous> (unit/gateways/reports.gateway.spec.ts:30:23)

PASS tests/unit/services.messaging.spec.ts
PASS tests/unit/ui/StudentLearningOverviewDetailed.spec.tsx
  ● Console

    console.debug
      [serverFetch] 404 /api/enrollments 5ms

      at serverFetch (../apps/web/src/lib/serverFetch.ts:90:13)

    console.debug
      [serverFetch] 404 /api/enrollments 3ms

      at serverFetch (../apps/web/src/lib/serverFetch.ts:90:13)

PASS tests/unit/ui/StudentLearningOverviewAdvanced.spec.tsx
  ● Console

    console.debug
      [serverFetch] 404 /api/enrollments 3ms

      at serverFetch (../apps/web/src/lib/serverFetch.ts:90:13)

    console.debug
      [serverFetch] 404 /api/enrollments 7ms

      at serverFetch (../apps/web/src/lib/serverFetch.ts:90:13)

PASS tests/unit/api.registry.versions.rate-limit.spec.ts
{"level":30,"time":1755747866623,"pid":21,"hostname":"4829d5d9db2d","requestId":"7cbe9d46-f5dc-44cb-b664-99468ba9f93d","ms":0,"msg":"route_success"}
{"level":30,"time":1755747866624,"pid":21,"hostname":"4829d5d9db2d","requestId":"726c2b13-7faa-419b-8175-da3859be53ce","ms":0,"msg":"route_success"}
{"level":30,"time":1755747867064,"pid":21,"hostname":"4829d5d9db2d","requestId":"f29472ea-64d0-4323-ac97-e324450c09fc","ms":0,"msg":"route_success"}
PASS tests/unit/api.problem-envelope.matrix.spec.ts
FAIL tests/unit/api.files.av-and-quota.negatives.spec.ts
  ● files AV stub and quota exceed › EICAR-like content rejected

    expect(received).toContain(expected) // indexOf

    Expected value: 500
    Received array: [400, 200]

      14 |     const id = encodeURIComponent(j.key || 'k');
      15 |     const res = await (UploadPUT as any)(put(`?owner_type=user&owner_id=u1&content_type=text/plain`, `X5O!P%@AP[4\PZX54(P^)7CC)7}$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*`));
    > 16 |     expect([400,200]).toContain(res.status);
         |                       ^
      17 |   });
      18 | });
      19 |

      at Object.<anonymous> (unit/api.files.av-and-quota.negatives.spec.ts:16:23)

{"level":30,"time":1755747867528,"pid":21,"hostname":"4829d5d9db2d","requestId":"fa0b45aa-5c95-4948-a482-b45fee7a689e","ms":0,"msg":"route_success"}
{"level":50,"time":1755747867529,"pid":21,"hostname":"4829d5d9db2d","requestId":"ae9015b7-cf2f-4687-8049-7395a60814c3","issues":[{"path":"url","message":"Invalid url"}],"msg":"dto_response_validation_failed"}
{"level":30,"time":1755747867529,"pid":21,"hostname":"4829d5d9db2d","requestId":"34783158-d143-4772-bd39-1381d7931353","ms":0,"msg":"route_success"}
{"level":30,"time":1755747868055,"pid":21,"hostname":"4829d5d9db2d","requestId":"38c49fdb-5b13-48f8-8f7f-fee866e11637","ms":1,"msg":"route_success"}
{"level":30,"time":1755747868056,"pid":21,"hostname":"4829d5d9db2d","requestId":"5c5bd231-5f2e-49bc-af1b-a3e3d898eb29","ms":1,"msg":"route_success"}
PASS tests/unit/api.messages.scoping.spec.ts
PASS tests/unit/api.runtime.checkpoint.preflight.spec.ts
PASS tests/unit/api.messages.threads.spec.ts
{"level":30,"time":1755747870253,"pid":21,"hostname":"4829d5d9db2d","requestId":"1137332e-17fb-472a-bf0f-98fac5808b90","ms":1,"msg":"route_success"}
{"level":30,"time":1755747870255,"pid":21,"hostname":"4829d5d9db2d","requestId":"1eb7ab6f-ab1c-4126-b5cd-dd62c8763ae9","ms":1,"msg":"route_success"}
{"level":30,"time":1755747870256,"pid":21,"hostname":"4829d5d9db2d","requestId":"4f14b556-574b-46ed-8436-23a668d7e552","ms":1,"msg":"route_success"}
{"level":30,"time":1755747870934,"pid":21,"hostname":"4829d5d9db2d","requestId":"d685a13c-4705-45b1-9001-a1d03a76e7b4","ms":6,"msg":"route_success"}
{"level":30,"time":1755747870936,"pid":21,"hostname":"4829d5d9db2d","requestId":"67fa53be-3bf7-40a4-b448-df8d0e68dcd4","ms":1,"msg":"route_success"}
PASS tests/unit/api.messages.ratelimit.headers.spec.ts
PASS tests/unit/middleware.coep.flag.spec.ts
PASS tests/unit/api.modules.delete.auth.spec.ts
{"level":30,"time":1755747871705,"pid":21,"hostname":"4829d5d9db2d","requestId":"9dce26b1-75be-4ad3-91e8-0e6d1767383f","ms":0,"msg":"route_success"}
{"level":30,"time":1755747871707,"pid":21,"hostname":"4829d5d9db2d","requestId":"7d22d0b8-5c27-4a82-af61-c2b3c58c1276","ms":1,"msg":"route_success"}
{"level":30,"time":1755747871709,"pid":21,"hostname":"4829d5d9db2d","requestId":"19b11935-9b77-4590-b571-437dab97205a","ms":2,"msg":"route_success"}
{"level":30,"time":1755747871710,"pid":21,"hostname":"4829d5d9db2d","requestId":"3657c805-2349-43ef-a879-a9da1e6c4bd3","ms":1,"msg":"route_success"}
{"level":30,"time":1755747872319,"pid":21,"hostname":"4829d5d9db2d","requestId":"d28c6e4c-803b-4563-ac87-1a37406221a2","ms":1,"msg":"route_success"}
{"level":30,"time":1755747872320,"pid":21,"hostname":"4829d5d9db2d","requestId":"2874fa28-1168-4a85-ac25-433f334566b8","ms":0,"msg":"route_success"}
{"level":30,"time":1755747872321,"pid":21,"hostname":"4829d5d9db2d","requestId":"60eab320-efa1-4dd4-a58f-de78ebe88c84","ms":1,"msg":"route_success"}
PASS tests/unit/api.admin.metrics.spec.ts
PASS tests/unit/services.submissions.queue.edges.spec.ts
PASS tests/unit/api.runtime.auth.exchange.edgecases.spec.ts
{"level":30,"time":1755747874443,"pid":21,"hostname":"4829d5d9db2d","requestId":"04a935da-4afd-402b-86f4-115920953a08","ms":3,"msg":"route_success"}
{"level":30,"time":1755747874494,"pid":21,"hostname":"4829d5d9db2d","requestId":"1930fc4c-b381-4e7b-a9c5-3750aa75fe48","ms":50,"msg":"route_success"}
{"level":30,"time":1755747875108,"pid":21,"hostname":"4829d5d9db2d","requestId":"85026a6d-7a4b-4213-b6a5-f4fc43a4b6de","ms":0,"msg":"route_success"}
{"level":30,"time":1755747875109,"pid":21,"hostname":"4829d5d9db2d","requestId":"7f8f6047-2d7b-43af-b3bc-5840fec442ad","ms":0,"msg":"route_success"}
{"level":30,"time":1755747875110,"pid":21,"hostname":"4829d5d9db2d","requestId":"f38617d6-cecc-400a-aefb-4a036d219ece","ms":0,"msg":"route_success"}
{"level":50,"time":1755747875111,"pid":21,"hostname":"4829d5d9db2d","requestId":"508d4976-cb71-4dda-a270-ddd27c6e6f54","issues":[{"path":"key","message":"Expected boolean, received string"}],"msg":"dto_response_validation_failed"}
{"level":30,"time":1755747875111,"pid":21,"hostname":"4829d5d9db2d","requestId":"84a85019-1aa9-499c-a0fa-926638f8e7e3","ms":1,"msg":"route_success"}
FAIL tests/unit/api.flags.spec.ts
  ● Feature flags API (test-mode) › GET requires auth, returns list; PATCH validates key

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      16 |     // PATCH toggle a flag
      17 |     const ok = await route.PATCH(new Request('http://localhost/api/flags', { method: 'PATCH', headers: { 'content-type': 'application/json', 'x-test-auth': 'admin' }, body: JSON.stringify({ key: 'reports.enabled', value: true }) }) as any);
    > 18 |     expect(ok.status).toBe(200);
         |                       ^
      19 |   });
      20 | });
      21 |

      at Object.<anonymous> (unit/api.flags.spec.ts:18:23)

FAIL tests/unit/api.runtime.jwks.rotation.spec.ts
  ● runtime JWKS rotation (kid refresh) › on verify failure, JWKS cache clears and a subsequent verify can succeed

    expect(received).toContain(expected) // indexOf

    Expected value: 400
    Received array: [401, 403]

      10 |     const body = { courseId: 'c1', userId: 'u1', event: { type: 'progress', pct: 10 } };
      11 |     const bad = await (OutcomesPOST as any)(post(body, { authorization: 'Bearer bad.token.value' }));
    > 12 |     expect([401,403]).toContain(bad.status);
         |                       ^
      13 |     // Clear cache hook (simulated by env toggle) and retry
      14 |     (process as any).env.JWKS_TTL_MS = '1';
      15 |     const again = await (OutcomesPOST as any)(post(body, { authorization: 'Bearer bad.token.value' }));

      at Object.<anonymous> (unit/api.runtime.jwks.rotation.spec.ts:12:23)

{"level":30,"time":1755747876012,"pid":21,"hostname":"4829d5d9db2d","requestId":"29814c88-a4bd-4c99-aba5-9ecbe33dc892","ms":1,"msg":"route_success"}
{"level":30,"time":1755747877801,"pid":21,"hostname":"4829d5d9db2d","requestId":"32e14660-f78e-4bbe-a398-c38abf352355","ms":1,"msg":"route_success"}
{"level":30,"time":1755747877803,"pid":21,"hostname":"4829d5d9db2d","requestId":"34b7b541-4f6b-4146-85a8-cc4e4b419017","ms":0,"msg":"route_success"}
{"level":50,"time":1755747877814,"pid":21,"hostname":"4829d5d9db2d","requestId":"a79c243f-9500-49a5-8f19-fcb5c039da5a","ms":0,"err":"supabase.from(...).select(...).order is not a function","msg":"route_error"}
FAIL tests/unit/api.reports.activity-retention.spec.ts
  ● API /api/reports/activity & /api/reports/retention (TEST_MODE) › retention returns array of { day, dau } when authed

    TypeError: supabase.from(...).select(...).order is not a function

      15 |   try { q = parseQuery(req, qSchema); } catch (e: any) { return NextResponse.json({ error: { code: 'BAD_REQUEST', message: e.message }, requestId }, { status: 400, headers: { 'x-request-id': requestId } }); }
      16 |   const supabase = getRouteHandlerSupabase();
    > 17 |   let builder: any = supabase.from('daily_active_users').select('day,dau').order('day', { ascending: true });
         |                                                                            ^
      18 |   if (q.from) builder = builder.gte('day', q.from);
      19 |   if (q.to) builder = builder.lte('day', q.to);
      20 |   const { data, error } = await builder;

      at GET (../apps/web/src/app/api/reports/retention/route.ts:17:76)
      at Object.GET (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.reports.activity-retention.spec.ts:22:17)

FAIL tests/unit/api.files.upload-url.spec.ts
  ● api.files.upload-url › returns signed fields in test-mode

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 403

      18 |     globalThis.__TEST_HEADERS_STORE__.cookies.set('x-test-auth', 'student');
      19 |     const res = await (UploadPOST as any)(makeReq({ owner_type: 'user', owner_id: 'test-student-id', content_type: 'text/plain' }, { 'x-test-auth': 'student' }));
    > 20 |     expect(res.status).toBe(200);
         |                        ^
      21 |     const json = await res.json();
      22 |     expect(json.url).toContain('/api/files/upload-url');
      23 |     expect(json.fields).toBeDefined();

      at Object.<anonymous> (unit/api.files.upload-url.spec.ts:20:24)

{"level":30,"time":1755747879139,"pid":21,"hostname":"4829d5d9db2d","requestId":"35eb9d0b-8b60-4995-8389-eba6e350effb","ms":1,"msg":"route_success"}
{"level":30,"time":1755747879142,"pid":21,"hostname":"4829d5d9db2d","requestId":"5ce3c717-4590-4055-9903-2319dc1824af","ms":1,"msg":"route_success"}
{"level":30,"time":1755747880561,"pid":21,"hostname":"4829d5d9db2d","requestId":"94e4eee9-41f2-4912-b174-5ea8468b9474","ms":1,"msg":"route_success"}
{"level":30,"time":1755747880563,"pid":21,"hostname":"4829d5d9db2d","requestId":"44b1b12b-5072-4f54-91a5-fc9243a7b307","ms":0,"msg":"route_success"}
PASS tests/unit/api.runtime.auth.aud-and-scopes.spec.ts
FAIL tests/unit/api.courses.transfer-owner.ratelimit.spec.ts
  ● courses transfer-owner rate-limit headers › returns 429 with standard headers when limited

    TypeError: supabase.from(...).select(...).eq is not a function

      38 |   // Only current teacher owner or admin can transfer
      39 |   if (role !== 'admin') {
    > 40 |     const { data: course } = await supabase.from('courses').select('id,teacher_id').eq('id', params.id).single();
         |                                                                                     ^
      41 |     if (!course || (course as any).teacher_id !== user.id) {
      42 |       return NextResponse.json({ error: { code: 'FORBIDDEN', message: 'Not allowed' }, requestId }, { status: 403, headers: { 'x-request-id': requestId } });
      43 |     }

      at PATCH (../apps/web/src/app/api/courses/[id]/transfer-owner/route.ts:40:85)
      at Object.PATCH (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.courses.transfer-owner.ratelimit.spec.ts:12:17)

{"level":50,"time":1755747882120,"pid":21,"hostname":"4829d5d9db2d","requestId":"8f77bf56-e528-4cc3-b52d-920753c39f69","ms":3,"err":"supabase.from(...).select(...).eq is not a function","msg":"route_error"}
{"level":30,"time":1755747883999,"pid":21,"hostname":"4829d5d9db2d","requestId":"ba720a75-270b-48c0-b9e9-ca6e52e27561","ms":3,"msg":"route_success"}
PASS tests/unit/api.assignments.delete.ratelimit.spec.ts
FAIL tests/unit/api.user.role.auth.spec.ts
  ● user role update auth › admin -> 200 or 500 (service error tolerated)

    expect(received).toContain(expected) // indexOf

    Expected value: 401
    Received array: [200, 500]

      16 |   test('admin -> 200 or 500 (service error tolerated)', async () => {
      17 |     const res = await (RolePATCH as any)(patch('http://localhost/api/user/role', { 'x-test-auth': 'admin' }, { userId: '11111111-1111-1111-1111-111111111111', role: 'teacher' }));
    > 18 |     expect([200,500]).toContain(res.status);
         |                       ^
      19 |   });
      20 | });
      21 |

      at Object.<anonymous> (unit/api.user.role.auth.spec.ts:18:23)

{"level":30,"time":1755747885130,"pid":21,"hostname":"4829d5d9db2d","requestId":"bce3502e-e2cf-4d16-b78e-552e0ac231e4","ms":2,"msg":"route_success"}
{"level":30,"time":1755747885132,"pid":21,"hostname":"4829d5d9db2d","requestId":"5e218925-6f63-4baa-8a4b-8572f2f0486e","ms":1,"msg":"route_success"}
{"level":30,"time":1755747885133,"pid":21,"hostname":"4829d5d9db2d","requestId":"5fd8b49b-fe66-4c2c-a7b9-384bb43aef22","ms":1,"msg":"route_success"}
{"level":30,"time":1755747886142,"pid":21,"hostname":"4829d5d9db2d","requestId":"8dba93cd-e256-47ab-bdd2-85b4b7771f73","ms":1,"msg":"route_success"}
{"level":30,"time":1755747886142,"pid":21,"hostname":"4829d5d9db2d","requestId":"864bb639-f7e2-4a6b-a0e9-9219e6a22fd6","ms":0,"msg":"route_success"}
PASS tests/unit/api.providers.health.rate-limit.spec.ts
PASS tests/unit/api.progress.rls.negatives.spec.ts
{"level":30,"time":1755747886698,"pid":21,"hostname":"4829d5d9db2d","requestId":"3a3a5206-995e-4149-9055-60a7be3b7138","ms":1,"msg":"route_success"}
{"level":30,"time":1755747886700,"pid":21,"hostname":"4829d5d9db2d","requestId":"7269e4a6-ada8-4b3e-97f7-8cc8a8e0b68b","ms":0,"msg":"route_success"}
PASS tests/unit/shared.env.loadServerEnv.spec.ts
FAIL tests/unit/api.files.download-url.dev-namespace.guard.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.files.download-url.dev-namespace.guard.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.files.download-url.dev-namespace.guard.spec.ts:2:1)

PASS tests/unit/api.parent-links.ratelimit.spec.ts
{"level":30,"time":1755747888462,"pid":21,"hostname":"4829d5d9db2d","requestId":"8acf02bd-8638-4631-8709-ee192055194b","ms":1,"msg":"route_success"}
{"level":30,"time":1755747888463,"pid":21,"hostname":"4829d5d9db2d","requestId":"b60e70a0-642e-41d7-8257-e51c38e801ff","ms":1,"msg":"route_success"}
{"level":30,"time":1755747888806,"pid":21,"hostname":"4829d5d9db2d","requestId":"fb71321c-9910-4fc1-b5a2-53eaad83a6dc","ms":0,"msg":"route_success"}
FAIL tests/unit/api.files.upload-url.ratelimit.spec.ts
  ● files upload-url rate limit headers › 429 includes rate limit headers

    expect(received).toContain(expected) // indexOf

    Expected value: 403
    Received array: [200, 401]

      15 |     const payload = { owner_type: 'user', owner_id: 'test-student-id', content_type: 'text/plain' };
      16 |     const res1 = await (UploadPOST as any)(req(payload));
    > 17 |     expect([200,401]).toContain(res1.status);
         |                       ^
      18 |     const res2 = await (UploadPOST as any)(req(payload));
      19 |     if (res2.status === 429) {
      20 |       expect(res2.headers.get('retry-after')).toBeTruthy();

      at Object.<anonymous> (unit/api.files.upload-url.ratelimit.spec.ts:17:23)

PASS tests/unit/ui/ParentAnnouncementsLab.spec.tsx
FAIL tests/unit/api.attachments.delete.permissions.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.attachments.delete.permissions.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.attachments.delete.permissions.spec.ts:3:1)

FAIL tests/unit/lib.serverFetch.extend.spec.ts
  ● Console

    console.debug
      [serverFetch] 200 http://web:3022http://example.com/api/x 0ms

      at serverFetch (../apps/web/src/lib/serverFetch.ts:90:13)

    console.debug
      [serverFetch] 200 /api/demo 1ms

      at serverFetch (../apps/web/src/lib/serverFetch.ts:90:13)

  ● serverFetch extended › absolute URL passes through unchanged

    expect(received).toBe(expected) // Object.is equality

    Expected: "http://example.com/api/x"
    Received: "http://web:3022http://example.com/api/x"

       9 |     try {
      10 |       await serverFetch('http://example.com/api/x');
    > 11 |       expect(calls[0].url).toBe('http://example.com/api/x');
         |                            ^
      12 |     } finally {
      13 |       global.fetch = old;
      14 |     }

      at Object.<anonymous> (unit/lib.serverFetch.extend.spec.ts:11:28)

PASS tests/unit/ui/StudentLearningOverview.spec.tsx
PASS tests/unit/api.runtime.grade.idempotency.spec.ts
FAIL tests/unit/api.user.role.audit.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.user.role.audit.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.user.role.audit.spec.ts:2:1)

{"level":30,"time":1755747890301,"pid":21,"hostname":"4829d5d9db2d","requestId":"000ce313-86ca-4431-897a-91a3824c1624","ms":10,"msg":"route_success"}
{"level":30,"time":1755747890306,"pid":21,"hostname":"4829d5d9db2d","requestId":"f0c7602a-ad58-4391-b981-6fb42daaf68e","ms":5,"msg":"route_success"}
PASS tests/unit/schemas.message.spec.ts
PASS tests/unit/api.registry.courses.rate-limit.spec.ts
{"level":30,"time":1755747891815,"pid":21,"hostname":"4829d5d9db2d","requestId":"2e3fddc9-d3dd-4157-98ae-916f10578db2","ms":1,"msg":"route_success"}
{"level":30,"time":1755747891816,"pid":21,"hostname":"4829d5d9db2d","requestId":"ebc610c7-06f7-46fd-8661-f177e0506688","ms":0,"msg":"route_success"}
{"level":30,"time":1755747893157,"pid":21,"hostname":"4829d5d9db2d","requestId":"04da977f-09a3-44f4-9c86-f43c28968b4f","ms":1,"msg":"route_success"}
{"level":30,"time":1755747893164,"pid":21,"hostname":"4829d5d9db2d","requestId":"8042eaf7-d7ae-415c-9bba-a9f898b5db1c","ms":5,"msg":"route_success"}
PASS tests/unit/api.progress.per-student.spec.ts
PASS tests/unit/server.withRouteTiming.csrf-double-submit.spec.ts
PASS tests/unit/api.runtime.context.roles.spec.ts
{"level":30,"time":1755747895966,"pid":21,"hostname":"4829d5d9db2d","requestId":"384821a4-603c-4ce6-a6a7-5e2c052d8586","ms":1,"msg":"route_success"}
{"level":30,"time":1755747896006,"pid":21,"hostname":"4829d5d9db2d","requestId":"0070a74d-850f-4bc4-9cf4-a542c0ff6019","ms":38,"msg":"route_success"}
PASS tests/unit/schemas.submission.spec.ts
FAIL tests/unit/api.files.download-dev-namespace.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.files.download-dev-namespace.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.files.download-dev-namespace.spec.ts:1:1)

PASS tests/unit/api.runtime.progress.idempotency.spec.ts
{"level":30,"time":1755747898454,"pid":21,"hostname":"4829d5d9db2d","requestId":"c921edc8-0ed4-4cc8-9d31-1ddc9b0398c0","ms":39,"msg":"route_success"}
{"level":30,"time":1755747898828,"pid":21,"hostname":"4829d5d9db2d","requestId":"87411fb5-59c7-445b-b4ce-226abbbed28b","ms":374,"msg":"route_success"}
{"level":30,"time":1755747900446,"pid":21,"hostname":"4829d5d9db2d","requestId":"be1e3dbd-5496-45ba-a6b7-d0f46590e4d7","ms":1,"msg":"route_success"}
FAIL tests/unit/lib.metrics.inflight.spec.ts
  ● metrics in-flight tracking › increments and decrements per route

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 0

      21 |     incrInFlight(route);
      22 |     let s1 = snapshot();
    > 23 |     expect((s1[route]?.in_flight || 0)).toBe(before + 2);
         |                                         ^
      24 |     decrInFlight(route);
      25 |     decrInFlight(route);
      26 |     s1 = snapshot();

      at Object.<anonymous> (unit/lib.metrics.inflight.spec.ts:23:41)

PASS tests/unit/api.lessons.spec.ts
{"level":30,"time":1755747901867,"pid":21,"hostname":"4829d5d9db2d","requestId":"ccf4b997-01a2-4338-b27a-93329e07ef7b","ms":2,"msg":"route_success"}
{"level":30,"time":1755747903208,"pid":21,"hostname":"4829d5d9db2d","requestId":"8ed8563b-bf5a-43f7-8df9-3ea991589188","ms":1,"msg":"route_success"}
{"level":30,"time":1755747903208,"pid":21,"hostname":"4829d5d9db2d","requestId":"5575bee0-1560-4b3c-ba63-9647f91abd10","ms":0,"msg":"route_success"}
PASS tests/unit/api.messages.list.rate-limit.spec.ts
PASS tests/unit/api.role.access.matrix.spec.ts
{"level":20,"time":1755747904419,"pid":21,"hostname":"4829d5d9db2d","ms":0,"msg":"dash_student_widgets"}
{"level":30,"time":1755747904420,"pid":21,"hostname":"4829d5d9db2d","requestId":"87784140-90ec-4691-886e-7adde8dd88f6","ms":1,"msg":"route_success"}
{"level":20,"time":1755747904425,"pid":21,"hostname":"4829d5d9db2d","ms":0,"msg":"dash_teacher_widgets"}
{"level":30,"time":1755747904426,"pid":21,"hostname":"4829d5d9db2d","requestId":"a1e15675-33c7-4421-9d56-60163b8af4a4","ms":1,"msg":"route_success"}
{"level":30,"time":1755747904428,"pid":21,"hostname":"4829d5d9db2d","requestId":"c0a8f4e3-2f05-4f0a-b9b8-623ac2e7abc3","ms":1,"msg":"route_success"}
{"level":30,"time":1755747904430,"pid":21,"hostname":"4829d5d9db2d","requestId":"b8d3dbb8-36fc-4b2a-8a12-6686497fe982","ms":1,"msg":"route_success"}
{"level":30,"time":1755747904448,"pid":21,"hostname":"4829d5d9db2d","requestId":"4fcd6cd4-d763-4eb5-b110-e7e70a45cba2","ms":2,"msg":"route_success"}
{"level":30,"time":1755747904449,"pid":21,"hostname":"4829d5d9db2d","requestId":"e2a2b79e-b449-4feb-b26e-19a826b33c2e","ms":0,"msg":"route_success"}
{"level":30,"time":1755747904450,"pid":21,"hostname":"4829d5d9db2d","requestId":"11335bbd-ddc2-476c-9475-1f52252d650e","ms":0,"msg":"route_success"}
{"level":30,"time":1755747904452,"pid":21,"hostname":"4829d5d9db2d","requestId":"73a1413a-f90c-47ea-b0a6-def529cb4063","ms":1,"msg":"route_success"}
{"level":30,"time":1755747905323,"pid":21,"hostname":"4829d5d9db2d","requestId":"50a55191-e810-441f-b4ab-d1f57bf412bd","ms":1,"msg":"route_success"}
{"level":30,"time":1755747905324,"pid":21,"hostname":"4829d5d9db2d","requestId":"216602ce-588c-49e9-a18f-a26057fbf276","ms":0,"msg":"route_success"}
{"level":30,"time":1755747905324,"pid":21,"hostname":"4829d5d9db2d","requestId":"c2d8a050-61e8-47c7-a517-db96669d8253","ms":0,"msg":"route_success"}
PASS tests/unit/api.admin.dlq.auth.spec.ts
PASS tests/unit/api.assignments.delete.ratelimit.headers.spec.ts
{"level":50,"time":1755747906774,"pid":21,"hostname":"4829d5d9db2d","requestId":"052a3e6b-6885-4260-8fb3-7138f0d68bb2","issues":[{"path":"id","message":"Required"},{"path":"course_id","message":"Required"},{"path":"title","message":"Required"},{"path":"created_at","message":"Required"}],"msg":"dto_response_validation_failed"}
{"level":30,"time":1755747906775,"pid":21,"hostname":"4829d5d9db2d","requestId":"888beff3-dbfd-42c0-a612-79e60baf685f","ms":3,"msg":"route_success"}
{"level":50,"time":1755747906775,"pid":21,"hostname":"4829d5d9db2d","requestId":"28214b90-ed34-48b7-911a-6e68c29381da","issues":[{"path":"id","message":"Required"},{"path":"course_id","message":"Required"},{"path":"title","message":"Required"},{"path":"created_at","message":"Required"}],"msg":"dto_response_validation_failed"}
{"level":30,"time":1755747906775,"pid":21,"hostname":"4829d5d9db2d","requestId":"30411b75-fcae-495b-9d43-4502ae003a25","ms":0,"msg":"route_success"}
{"level":50,"time":1755747908441,"pid":21,"hostname":"4829d5d9db2d","requestId":"41cdd475-fd58-41e3-b352-9dc628b3f9fb","ms":1,"err":"supabase.from(...).select(...).order is not a function","msg":"route_error"}
{"level":50,"time":1755747908461,"pid":21,"hostname":"4829d5d9db2d","requestId":"b770e718-5c24-4c3b-bb01-132dd6575fb2","ms":1,"err":"supabase.from(...).select(...).order is not a function","msg":"route_error"}
FAIL tests/unit/api.reports.activity.retention.spec.ts
  ● reports activity and retention JSON › activity returns 200 or auth errors

    TypeError: supabase.from(...).select(...).order is not a function

      15 |   try { q = parseQuery(req, qSchema); } catch (e: any) { return NextResponse.json({ error: { code: 'BAD_REQUEST', message: e.message }, requestId }, { status: 400, headers: { 'x-request-id': requestId } }); }
      16 |   const supabase = getRouteHandlerSupabase();
    > 17 |   let builder: any = supabase.from('events').select('id,user_id,event_type,entity_type,entity_id,ts').order('ts', { ascending: false });
         |                                                                                                       ^
      18 |   if (q.from) builder = builder.gte('ts', q.from);
      19 |   if (q.to) builder = builder.lte('ts', q.to);
      20 |   if (q.course_id) builder = builder.eq('entity_type', 'course').eq('entity_id', q.course_id);

      at GET (../apps/web/src/app/api/reports/activity/route.ts:17:103)
      at Object.GET (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.reports.activity.retention.spec.ts:8:17)

  ● reports activity and retention JSON › retention returns 200 or auth errors

    TypeError: supabase.from(...).select(...).order is not a function

      15 |   try { q = parseQuery(req, qSchema); } catch (e: any) { return NextResponse.json({ error: { code: 'BAD_REQUEST', message: e.message }, requestId }, { status: 400, headers: { 'x-request-id': requestId } }); }
      16 |   const supabase = getRouteHandlerSupabase();
    > 17 |   let builder: any = supabase.from('daily_active_users').select('day,dau').order('day', { ascending: true });
         |                                                                            ^
      18 |   if (q.from) builder = builder.gte('day', q.from);
      19 |   if (q.to) builder = builder.lte('day', q.to);
      20 |   const { data, error } = await builder;

      at GET (../apps/web/src/app/api/reports/retention/route.ts:17:76)
      at Object.GET (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.reports.activity.retention.spec.ts:16:17)

PASS tests/unit/api.messages.list.ratelimit.spec.ts
{"level":30,"time":1755747909509,"pid":21,"hostname":"4829d5d9db2d","requestId":"1db1ba00-dedc-414d-969c-8311eb5b6cc1","ms":1,"msg":"route_success"}
{"level":30,"time":1755747909509,"pid":21,"hostname":"4829d5d9db2d","requestId":"078fdb14-c4a2-42b8-ac4a-50e4d1369fbc","ms":0,"msg":"route_success"}
{"level":30,"time":1755747910098,"pid":21,"hostname":"4829d5d9db2d","requestId":"b4d3b5d4-3ffb-454d-a0d9-893474f91dba","ms":1,"msg":"route_success"}
{"level":30,"time":1755747910104,"pid":21,"hostname":"4829d5d9db2d","requestId":"0aeb1f51-1e03-4ce0-baea-fcf589cac4bd","ms":3,"msg":"route_success"}
FAIL tests/unit/api.reports.engagement.csv-json.spec.ts
  ● reports engagement CSV/JSON › CSV returns text/csv when requested

    expect(received).toMatch(expected)

    Expected pattern: /text\/csv/
    Received string:  "application/json"

      16 |     expect([200,401,403]).toContain(res.status);
      17 |     if (res.status === 200) {
    > 18 |       expect(res.headers.get('content-type') || '').toMatch(/text\/csv/);
         |                                                     ^
      19 |     }
      20 |   });
      21 | });

      at Object.<anonymous> (unit/api.reports.engagement.csv-json.spec.ts:18:53)

PASS tests/unit/api.lessons.complete.idempotent.spec.ts
{"level":30,"time":1755747911588,"pid":21,"hostname":"4829d5d9db2d","lessonId":"00000000-0000-0000-0000-00000000aa11","userId":"22222222-2222-2222-2222-222222222222","ms":0,"msg":"progress_marked"}
{"level":30,"time":1755747911588,"pid":21,"hostname":"4829d5d9db2d","requestId":"08279391-e336-404c-b997-e4e7fbd9d98f","ms":1,"msg":"route_success"}
{"level":30,"time":1755747911589,"pid":21,"hostname":"4829d5d9db2d","lessonId":"00000000-0000-0000-0000-00000000aa11","userId":"22222222-2222-2222-2222-222222222222","ms":0,"msg":"progress_marked"}
{"level":30,"time":1755747911590,"pid":21,"hostname":"4829d5d9db2d","requestId":"f654b6d2-1267-4612-b4c4-8b48856cc46a","ms":1,"msg":"route_success"}
{"level":30,"time":1755747913107,"pid":21,"hostname":"4829d5d9db2d","requestId":"b4c8d303-d198-475e-88aa-9e6aaa505d75","ms":1,"msg":"route_success"}
PASS tests/unit/api.files.download-url.disposition.spec.ts
PASS tests/unit/services.modules.spec.ts
PASS tests/unit/ui/SystemPercentileTrends.spec.tsx
PASS tests/unit/schemas.lesson.spec.ts
PASS tests/unit/api.messages.patch.ratelimit.spec.ts
{"level":30,"time":1755747919396,"pid":21,"hostname":"4829d5d9db2d","requestId":"e7f7fa80-8ad2-47b4-8ec5-46f0cd1c7205","ms":2,"msg":"route_success"}
{"level":30,"time":1755747920883,"pid":21,"hostname":"4829d5d9db2d","requestId":"a46ed974-df3f-4ea3-8e18-b96628e947d6","ms":6,"msg":"route_success"}
{"level":30,"time":1755747920889,"pid":21,"hostname":"4829d5d9db2d","requestId":"3b572d45-e4df-4b0c-9308-b9764966d445","ms":1,"msg":"route_success"}
PASS tests/unit/api.analytics.events.emit.spec.ts
FAIL tests/unit/ui/AdminReports.spec.tsx
  ● Admin Reports (dashboard) › renders reports tiles

    TypeError: cc.getAll is not a function

       6 | 	const hh = headers();
       7 | 	const cc = cookies();
    >  8 | 	const cookie = hh.get("cookie") ?? cc.getAll().map(x => `${x.name}=${x.value}`).join("; ");
         | 	                                      ^
       9 | 	const ta = hh.get("x-test-auth") ?? cc.get("x-test-auth")?.value;
      10 | 	const gw = createReportsGateway();
      11 | 	const [engagement, grades, dau, activity] = await Promise.all([

      at AdminReportsPage (../apps/web/src/app/dashboard/admin/reports/page.tsx:8:40)
      at Object.<anonymous> (unit/ui/AdminReports.spec.tsx:18:38)

PASS tests/unit/api.user-profile.spec.ts
{"level":30,"time":1755747925304,"pid":21,"hostname":"4829d5d9db2d","requestId":"5378b327-5a95-4fd7-aa44-37311723bf9c","ms":1,"msg":"route_success"}
{"level":30,"time":1755747925305,"pid":21,"hostname":"4829d5d9db2d","requestId":"ea67b066-c774-4c88-984f-b5e1252d857a","ms":1,"msg":"route_success"}
{"level":30,"time":1755747925307,"pid":21,"hostname":"4829d5d9db2d","requestId":"87aaf563-57c2-425e-9cda-73542b4b46eb","ms":1,"msg":"route_success"}
{"level":30,"time":1755747926385,"pid":21,"hostname":"4829d5d9db2d","requestId":"52828568-4627-4ce1-b984-16a524038b7c","ms":1,"msg":"route_success"}
PASS tests/unit/api.runtime.gating.spec.ts
PASS tests/unit/db.rls.announcements.negative.spec.ts
{"level":30,"time":1755747928318,"pid":21,"hostname":"4829d5d9db2d","requestId":"9710a52c-7a62-433d-9d4e-ec4f1f0c91e3","ms":2,"msg":"route_success"}
{"level":30,"time":1755747928322,"pid":21,"hostname":"4829d5d9db2d","requestId":"939188c6-6350-4e1b-b7ee-c63666898108","ms":1,"msg":"route_success"}
{"level":30,"time":1755747930816,"pid":21,"hostname":"4829d5d9db2d","requestId":"dfaa441c-8113-43a0-84c4-4c6e31fc7288","ms":2,"msg":"route_success"}
{"level":30,"time":1755747930818,"pid":21,"hostname":"4829d5d9db2d","requestId":"cc521bfe-77fd-4619-8b5e-94bd00c6056e","ms":1,"msg":"route_success"}
PASS tests/unit/api.internal.metrics.token.spec.ts
PASS tests/unit/db.rls.parent-links.negative.spec.ts
{"level":30,"time":1755747932286,"pid":21,"hostname":"4829d5d9db2d","requestId":"1124d005-59a9-4d3c-8ee5-b019002145fa","ms":1,"msg":"route_success"}
{"level":30,"time":1755747932290,"pid":21,"hostname":"4829d5d9db2d","requestId":"a40aec06-b8b6-41f3-82d4-970051286fd8","ms":2,"msg":"route_success"}
{"level":30,"time":1755747933095,"pid":21,"hostname":"4829d5d9db2d","requestId":"2368aea5-070b-486b-a10e-06cabdbfe832","ms":3,"msg":"route_success"}
PASS tests/unit/api.modules.delete.ratelimit.spec.ts
{"level":50,"time":1755747934523,"pid":21,"hostname":"4829d5d9db2d","requestId":"bb895f10-ad14-408c-bd52-119442522976","ms":1,"err":"supabase.from(...).insert is not a function","msg":"route_error"}
FAIL tests/unit/api.admin.quotas.ratelimit.spec.ts
  ● admin quotas PATCH rate-limit headers › returns 429 and retry-after header when limited

    TypeError: supabase.from(...).insert is not a function

      53 |   if (typeof body.used_bytes === 'number') row.used_bytes = body.used_bytes;
      54 |   // Use insert with onConflict for broader mock compatibility
    > 55 |   const resp = await (supabase.from('user_storage_quotas') as any).insert(row, { onConflict: 'user_id' } as any).select?.()?.single?.();
         |                                                                    ^
      56 |   const error = (resp as any)?.error ?? null;
      57 |   if (error) return NextResponse.json({ error: { code: 'DB_ERROR', message: error.message }, requestId }, { status: 500, headers: { 'x-request-id': requestId } });
      58 |   return jsonDto({ ok: true } as any, z.object({ ok: z.boolean() }) as any, { requestId, status: 200 });

      at PATCH (../apps/web/src/app/api/admin/quotas/route.ts:55:68)
      at Object.PATCH (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.admin.quotas.ratelimit.spec.ts:14:17)

PASS tests/unit/gateways/enrollments.gateway.spec.ts
  ● Console

    console.debug
      [serverFetch] 200 /api/enrollments 0ms

      at serverFetch (../apps/web/src/lib/serverFetch.ts:90:13)

    console.debug
      [serverFetch] 200 /api/enrollments 0ms

      at serverFetch (../apps/web/src/lib/serverFetch.ts:90:13)

FAIL tests/unit/db.rls.courses.negative.spec.ts
  ● Courses RLS/authorization negatives › student cannot create course

    expect(received).toContain(expected) // indexOf

    Expected value: 400
    Received array: [401, 403]

      4 |     const req = new Request('http://localhost/api/courses', { method: 'POST', headers: { 'content-type': 'application/json', 'x-test-auth': 'student' } as any, body: JSON.stringify({ title: 'X', description: '' }) } as any);
      5 |     const res = await (route as any).POST(req as any);
    > 6 |     expect([401,403]).toContain(res.status);
        |                       ^
      7 |   });
      8 |
      9 |   test('student cannot delete course', async () => {

      at Object.<anonymous> (unit/db.rls.courses.negative.spec.ts:6:23)

{"level":30,"time":1755747936858,"pid":21,"hostname":"4829d5d9db2d","requestId":"08921553-2d35-44bf-a612-7642fd2b82b3","ms":2,"msg":"route_success"}
{"level":30,"time":1755747936915,"pid":21,"hostname":"4829d5d9db2d","requestId":"308d6a26-e28a-4df2-9d02-3972fa9f6b75","ms":1,"msg":"route_success"}
{"level":30,"time":1755747937939,"pid":21,"hostname":"4829d5d9db2d","requestId":"596bb782-86ae-4f61-88e7-1616a1245920","ms":1,"msg":"route_success"}
{"level":30,"time":1755747937941,"pid":21,"hostname":"4829d5d9db2d","requestId":"bff183d6-b71e-405b-8fff-f64718aa7ab4","ms":0,"msg":"route_success"}
PASS tests/unit/api.reports.grade-distribution.csv-json.spec.ts
PASS tests/unit/api.providers.health.ratelimit.headers.spec.ts
{"level":30,"time":1755747939014,"pid":21,"hostname":"4829d5d9db2d","requestId":"8e999509-6b96-479e-9456-7d67043fbae4","ms":1,"msg":"route_success"}
PASS tests/unit/schemas.assignment.spec.ts
PASS tests/unit/api.submissions.list.pagination.spec.ts
{"level":30,"time":1755747940338,"pid":21,"hostname":"4829d5d9db2d","requestId":"6315a77c-4727-410e-9a7e-89d1aa47dd73","ms":1,"msg":"route_success"}
{"level":30,"time":1755747941529,"pid":21,"hostname":"4829d5d9db2d","requestId":"2636d30e-09dc-475f-832f-b11e7c4d06c7","ms":1,"msg":"route_success"}
PASS tests/unit/api.runtime.checkpoint.roundtrip.spec.ts
PASS tests/unit/logger.redaction.spec.ts
PASS tests/unit/api.submissions.grade.spec.ts
{"level":30,"time":1755747943058,"pid":21,"hostname":"4829d5d9db2d","requestId":"5a4d15e0-bfeb-45a9-8fb4-97ed7c43d304","ms":1,"msg":"route_success"}
{"level":30,"time":1755747943068,"pid":21,"hostname":"4829d5d9db2d","requestId":"31962717-59f2-4678-b796-a8817b0edad4","ms":9,"msg":"route_success"}
{"level":30,"time":1755747943070,"pid":21,"hostname":"4829d5d9db2d","requestId":"ce83903a-34a1-451c-b59d-8184e6fbf09e","ms":2,"msg":"route_success"}
PASS tests/unit/ui/StudentUpcomingLessons.spec.tsx
PASS tests/unit/api.notifications.auth.spec.ts
{"level":30,"time":1755747944276,"pid":21,"hostname":"4829d5d9db2d","requestId":"d75bef22-87dc-4127-85f9-bdb989e2048b","ms":1,"msg":"route_success"}
{"level":30,"time":1755747944283,"pid":21,"hostname":"4829d5d9db2d","requestId":"c0c36fb8-67f1-4124-88ca-bf493f4aad9e","ms":1,"msg":"route_success"}
PASS tests/unit/ui/SystemObserver.spec.tsx
FAIL tests/unit/lib.runtimeAuth.scopes-aud.spec.ts
  ● runtimeAuth audience and scopes › rejects when aud mismatches allowed origin

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /workspace/tests/node_modules/jose/dist/webapi/index.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){export { compactDecrypt } from './jwe/compact/decrypt.js';
                                                                                      ^^^^^^

    SyntaxError: Unexpected token 'export'

      10 |     // Mock getRequestOrigin to return allowed origin and jose verify to return payload with different aud
      11 |     jest.spyOn(require('../../apps/web/src/lib/cors'), 'getRequestOrigin').mockReturnValue('https://good.example' as any);
    > 12 |     jest.spyOn(require('jose') as any, 'jwtVerify').mockResolvedValue({ payload: { aud: 'https://bad.example', scopes: [] } });
         |                ^
      13 |     const out = verifyRuntimeAuthorization(req as any, [] as any) as any;
      14 |     expect(out).toBeTruthy();
      15 |   });

      at Runtime.createScriptFromCode (../node_modules/jest-runtime/build/index.js:1505:14)
      at Object.<anonymous> (unit/lib.runtimeAuth.scopes-aud.spec.ts:12:16)

PASS tests/unit/ui/SystemHealthHistory.spec.tsx
FAIL tests/unit/lib.runtimeAuth.clockskew.spec.ts
  ● runtimeAuth clock skew tolerance › accepts tokens within tolerance window (dev HS256 path mocked)

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      12 |     const req = new Request('http://localhost/api/runtime/progress', { headers: { authorization: 'Bearer X', origin: 'https://wcgyhwvugdnzhegwiiam.lovable.app' } as any } as any);
      13 |     const out: any = await (verifyRuntimeAuthorization as any)(req as any, ['progress.write']);
    > 14 |     expect(out.ok).toBe(true);
         |                    ^
      15 |   });
      16 | });
      17 |

      at Object.<anonymous> (unit/lib.runtimeAuth.clockskew.spec.ts:14:20)

PASS tests/unit/ui/TeacherCourseInsights.spec.tsx
PASS tests/unit/db.rls.submissions.negative.spec.ts
{"level":30,"time":1755747951139,"pid":21,"hostname":"4829d5d9db2d","requestId":"647a25c5-151e-4afa-bae0-2d6c93864809","ms":1,"msg":"route_success"}
{"level":30,"time":1755747951142,"pid":21,"hostname":"4829d5d9db2d","requestId":"76da40e2-b371-4419-92ba-a34ee77ccfeb","ms":1,"msg":"route_success"}
{"level":30,"time":1755747952430,"pid":21,"hostname":"4829d5d9db2d","requestId":"a8a20d45-d09d-42cb-9a97-df1bf8ce7db0","ms":1,"msg":"route_success"}
{"level":30,"time":1755747952431,"pid":21,"hostname":"4829d5d9db2d","requestId":"bb4eb81d-9db5-4b00-82d8-3f710c7f22a2","ms":0,"msg":"route_success"}
{"level":30,"time":1755747952432,"pid":21,"hostname":"4829d5d9db2d","requestId":"58f2f6d4-b7a9-498d-87d3-ca4389826ace","ms":1,"msg":"route_success"}
PASS tests/unit/api.notifications.prefs.auth.spec.ts
PASS tests/unit/lib.rateLimit.redis-fallback.spec.ts
PASS tests/unit/api.runtime.idempotency.progress.spec.ts
{"level":30,"time":1755747953393,"pid":21,"hostname":"4829d5d9db2d","requestId":"6ca9eeee-efdb-4d85-ab7d-1964de4cf7cf","ms":48,"msg":"route_success"}
{"level":30,"time":1755747953413,"pid":21,"hostname":"4829d5d9db2d","requestId":"2e1d6661-e176-4e37-a8e4-d24396147a44","ms":19,"msg":"route_success"}
{"level":30,"time":1755747954870,"pid":21,"hostname":"4829d5d9db2d","requestId":"65c9143d-232a-417c-aa80-623fd5f132b3","ms":2,"msg":"route_success"}
FAIL tests/unit/api.runtime.outcomes.iss-aud.negatives.spec.ts
  ● runtime outcomes provider JWT iss/aud negatives › invalid issuer/audience format yields 403 when present

    expect(received).toContain(expected) // indexOf

    Expected value: 400
    Received array: [401, 403]

      10 |     // Without a real JWT, this exercises the code path expectation only; actual 401/403 depends on signature verify
      11 |     const res = await (OutcomesPOST as any)(post(body, { authorization: 'Bearer bad.token.value' }));
    > 12 |     expect([401,403]).toContain(res.status);
         |                       ^
      13 |   });
      14 | });
      15 |

      at Object.<anonymous> (unit/api.runtime.outcomes.iss-aud.negatives.spec.ts:12:23)

PASS tests/unit/ui/SystemRequestId.spec.tsx
  ● Console

    console.debug
      [serverFetch] 404 /api/health 5ms

      at serverFetch (../apps/web/src/lib/serverFetch.ts:90:13)

PASS tests/unit/ui/SystemLatencySampler.spec.tsx
PASS tests/unit/lib.csp.frame-src-allow.spec.ts
PASS tests/unit/db.rls.quiz-attempts.negative.spec.ts
{"level":30,"time":1755747958185,"pid":21,"hostname":"4829d5d9db2d","requestId":"4c8c2d11-79d0-4f5f-957e-a79522c74eab","ms":1,"msg":"route_success"}
{"level":30,"time":1755747958187,"pid":21,"hostname":"4829d5d9db2d","requestId":"51a6dd14-d8e9-4ab6-9f03-63cc553367e2","ms":1,"msg":"route_success"}
{"level":30,"time":1755747958482,"pid":21,"hostname":"4829d5d9db2d","requestId":"cf38fdca-b2af-47d2-8872-b42698fa6e57","ms":0,"msg":"route_success"}
{"level":30,"time":1755747958483,"pid":21,"hostname":"4829d5d9db2d","requestId":"531abe60-fae7-4778-8160-dff8fda4cf88","ms":0,"msg":"route_success"}
PASS tests/unit/api.registry.licenses.auth.spec.ts
PASS tests/unit/api.dashboard.spec.ts
{"level":30,"time":1755747959117,"pid":21,"hostname":"4829d5d9db2d","requestId":"f3e8c9f5-0d1c-4a33-959a-4fdfe6714f50","ms":1,"msg":"route_success"}
{"level":20,"time":1755747959118,"pid":21,"hostname":"4829d5d9db2d","ms":0,"msg":"dash_teacher_widgets"}
{"level":30,"time":1755747959118,"pid":21,"hostname":"4829d5d9db2d","requestId":"dac82dec-c67d-45a2-96d1-b8bfa9aa994d","ms":0,"msg":"route_success"}
{"level":30,"time":1755747962091,"pid":21,"hostname":"4829d5d9db2d","requestId":"f53ad773-aead-4fbd-93f6-397b2e8c8a81","ms":1,"msg":"route_success"}
{"level":30,"time":1755747962092,"pid":21,"hostname":"4829d5d9db2d","requestId":"737f90bf-d8de-4e84-a9be-080569f3f256","ms":1,"msg":"route_success"}
PASS tests/unit/api.submissions.grade.validation.spec.ts
FAIL tests/unit/api.messages.threads.auth.spec.ts
  ● API /api/messages/threads auth › unauthenticated POST → 401

    expect(received).toBe(expected) // Object.is equality

    Expected: 401
    Received: 400

      12 |   test('unauthenticated POST → 401', async () => {
      13 |     const res = await (ThreadsPOST as any)(post('http://localhost/api/messages/threads', { participant_ids: [] }));
    > 14 |     expect(res.status).toBe(401);
         |                        ^
      15 |   });
      16 | });
      17 |

      at Object.<anonymous> (unit/api.messages.threads.auth.spec.ts:14:24)

{"level":30,"time":1755747962777,"pid":21,"hostname":"4829d5d9db2d","requestId":"b8e2603e-c6d3-4ff0-a326-cdbc25f228d7","ms":0,"msg":"route_success"}
{"level":30,"time":1755747962779,"pid":21,"hostname":"4829d5d9db2d","requestId":"d2da01f3-abc9-4406-a1ae-72e0561f40a6","ms":1,"msg":"route_success"}
{"level":30,"time":1755747963265,"pid":21,"hostname":"4829d5d9db2d","requestId":"c4f23135-fdce-431b-82f7-7c1227b9bd60","ms":0,"msg":"route_success"}
{"level":30,"time":1755747963267,"pid":21,"hostname":"4829d5d9db2d","requestId":"6367a7b9-70f6-4652-9876-bf2f3b19f998","ms":1,"msg":"route_success"}
PASS tests/unit/db.rls.messages.negative.spec.ts
PASS tests/unit/api.problem.envelope.codes.spec.ts
{"level":30,"time":1755747964402,"pid":21,"hostname":"4829d5d9db2d","requestId":"72798e32-e99f-41b9-8b6e-9840c663a29b","ms":1,"msg":"route_success"}
PASS tests/unit/ui/SystemUptimeTile.spec.tsx
PASS tests/unit/schemas.files.spec.ts
PASS tests/unit/api.messages.patch-negatives.spec.ts
{"level":30,"time":1755747967636,"pid":21,"hostname":"4829d5d9db2d","requestId":"m-p1","ms":0,"msg":"route_success"}
{"level":30,"time":1755747967637,"pid":21,"hostname":"4829d5d9db2d","requestId":"ce109015-cedc-47d1-a107-bb7ed1afb05d","ms":0,"msg":"route_success"}
{"level":30,"time":1755747968155,"pid":21,"hostname":"4829d5d9db2d","requestId":"fa593381-af6f-49dd-802c-8b776324713f","ms":1,"msg":"route_success"}
PASS tests/unit/api.reports.grade-distribution.empty.spec.ts
PASS tests/unit/lib.serverFetch.baseurl.spec.ts
PASS tests/unit/ui/StudentProfile.spec.tsx
  ● Console

    console.debug
      [serverFetch] 404 /api/user/profile 5ms

      at serverFetch (../apps/web/src/lib/serverFetch.ts:90:13)

PASS tests/unit/modules.update.spec.ts
PASS tests/unit/services.assignments.producer.spec.ts
PASS tests/unit/api.reports.engagement.headers.spec.ts
{"level":30,"time":1755747971705,"pid":21,"hostname":"4829d5d9db2d","requestId":"b5de9afb-274f-47a1-9b72-441f487cdea5","ms":1,"msg":"route_success"}
PASS tests/unit/ui/StudentPlanner.spec.tsx
PASS tests/unit/server.scheduler.spec.ts
PASS tests/unit/ui/SystemRoleBadge.spec.tsx
PASS tests/unit/api.user.profile.auth.spec.ts
{"level":30,"time":1755747977925,"pid":21,"hostname":"4829d5d9db2d","requestId":"077060f9-a49b-42fd-85b6-6e587ba72346","ms":1,"msg":"route_success"}
{"level":30,"time":1755747977927,"pid":21,"hostname":"4829d5d9db2d","requestId":"4f295dfc-c3f6-490f-8af8-b3e5743aa75b","ms":1,"msg":"route_success"}
PASS tests/unit/api.runtime.outcomes.preflight.spec.ts
FAIL tests/unit/ui/SystemAuthCheck.spec.tsx
  ● Console

    console.debug
      [serverFetch] 404 /api/user/profile 10ms

      at serverFetch (../apps/web/src/lib/serverFetch.ts:90:13)

  ● System Auth Check (labs) › renders email and role when authenticated

    expect(element).toHaveTextContent()

    Expected element to have text content:
      t@example.com
    Received:
      s@example.com

      15 |     const ui = await AuthCheckPage();
      16 |     render(ui);
    > 17 |     expect(await screen.findByTestId('auth-email')).toHaveTextContent('t@example.com');
         |                                                     ^
      18 |     expect(await screen.findByTestId('auth-role')).toHaveTextContent('teacher');
      19 |   });
      20 | });

      at Object.<anonymous> (unit/ui/SystemAuthCheck.spec.tsx:17:53)

PASS tests/unit/api.pagination.params.spec.ts
{"level":30,"time":1755747984185,"pid":21,"hostname":"4829d5d9db2d","requestId":"b8a00fc7-c1d1-414b-9b9e-daa579717f68","ms":1,"msg":"route_success"}
{"level":30,"time":1755747985534,"pid":21,"hostname":"4829d5d9db2d","requestId":"10bcc9ae-34ca-46b4-8577-bf3c9bf9fb14","ms":1,"msg":"route_success"}
{"level":30,"time":1755747985566,"pid":21,"hostname":"4829d5d9db2d","requestId":"43190c8c-66a8-48e3-80cf-6c6ec5e71353","ms":30,"msg":"route_success"}
FAIL tests/unit/api.parent.progress.api.spec.ts
  ● API /api/parent/progress (TEST_MODE) › parent linked to student gets data

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 403

      15 |     globalThis.__TEST_HEADERS_STORE__?.cookies?.set?.('x-test-auth', 'parent');
      16 |     const res = await (ParentProgressGET as any)(makeGet('http://localhost/api/parent/progress?student_id=22222222-2222-2222-2222-222222222222'));
    > 17 |     expect(res.status).toBe(200);
         |                        ^
      18 |   });
      19 | });
      20 |

      at Object.<anonymous> (unit/api.parent.progress.api.spec.ts:17:24)

PASS tests/unit/api.files.upload-url.content-type.spec.ts
{"level":30,"time":1755747987644,"pid":21,"hostname":"4829d5d9db2d","requestId":"c0dd6195-c93f-42e8-93e0-5b166070cc43","ms":1,"msg":"route_success"}
FAIL tests/unit/ui/ParentChildrenReport.spec.tsx
  ● Parent Children Report (labs) › renders total and items

    Unable to find an element by: [data-testid="children-total"]

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<main[39m
          [33mclass[39m=[32m"p-6"[39m
        [36m>[39m
          [36m<a[39m
            [33mclass[39m=[32m"text-blue-600 underline"[39m
            [33mhref[39m=[32m"/login"[39m
          [36m>[39m
            [0mSign in[0m
          [36m</a>[39m
        [36m</main>[39m
      [36m</div>[39m
    [36m</body>[39m

      17 |     const ui = await ParentChildrenReportPage();
      18 |     render(ui);
    > 19 |     expect(await screen.findByTestId('children-total')).toHaveTextContent('1');
         |                         ^
      20 |   });
      21 | });
      22 |

      at waitForWrapper (../node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at ../node_modules/@testing-library/dom/dist/query-helpers.js:86:33
      at Object.<anonymous> (unit/ui/ParentChildrenReport.spec.tsx:19:25)

PASS tests/unit/services.notifications.spec.ts
FAIL tests/unit/ui/SystemOkCard.spec.tsx
  ● System OK Card (labs) › renders ok and ts (human) on success

    TypeError: cookieStore.getAll is not a function

      22 |
      23 |   const cookieHeader = cookieStore
    > 24 |     .getAll()
         |      ^
      25 |     .map((c) => `${c.name}=${c.value}`)
      26 |     .join("; ");
      27 |   const xTestAuth = incomingHeaders.get("x-test-auth") ?? cookieStore.get("x-test-auth")?.value;

      at SystemOkCardPage (../apps/web/src/app/labs/system/ok-card/page.tsx:24:6)
      at Object.<anonymous> (unit/ui/SystemOkCard.spec.tsx:16:38)

PASS tests/unit/api.reports.grade-distribution.headers.spec.ts
{"level":30,"time":1755747994783,"pid":21,"hostname":"4829d5d9db2d","requestId":"f3d179df-83e2-4512-8208-dfea9556f4c0","ms":1,"msg":"route_success"}
PASS tests/unit/lib.logger.redaction.extended.spec.ts
PASS tests/unit/services.submissions.spec.ts
PASS tests/unit/api.runtime.asset.sign-url.preflight.spec.ts
PASS tests/unit/gateways/announcements.gateway.spec.ts
  ● Console

    console.debug
      [serverFetch] 200 /api/announcements 1ms

      at serverFetch (../apps/web/src/lib/serverFetch.ts:90:13)

PASS tests/unit/sdk.fetchJson.spec.ts
  ● Console

    console.debug
      [serverFetch] 400 /x 1ms

      at serverFetch (../apps/web/src/lib/serverFetch.ts:90:13)

    console.debug
      [serverFetch] 200 /y 0ms

      at serverFetch (../apps/web/src/lib/serverFetch.ts:90:13)

PASS tests/unit/schemas.progress.spec.ts
FAIL tests/unit/api.runtime.outcomes.iss-aud.strict.spec.ts
  ● runtime outcomes strict iss/aud enforcement › issuer/audience mismatch against provider domain yields 403 (path exercise)

    expect(received).toContain(expected) // indexOf

    Expected value: 400
    Received array: [401, 403]

       9 |     const body = { courseId: 'c1', userId: 'u1', event: { type: 'progress', pct: 10 } };
      10 |     const res = await (OutcomesPOST as any)(post(body, { authorization: 'Bearer bad.token.value' }));
    > 11 |     expect([401,403]).toContain(res.status);
         |                       ^
      12 |   });
      13 | });
      14 |

      at Object.<anonymous> (unit/api.runtime.outcomes.iss-aud.strict.spec.ts:11:23)

{"level":30,"time":1755748000193,"pid":21,"hostname":"4829d5d9db2d","requestId":"d23b71a7-3511-41ee-8ff6-56a0aafbb05a","ms":1,"msg":"route_success"}
{"level":30,"time":1755748002421,"pid":21,"hostname":"4829d5d9db2d","requestId":"n1","ms":1,"msg":"route_success"}
PASS tests/unit/api.notifications.guard.spec.ts
PASS tests/unit/ui/TeacherCourseCardsWithCounts.spec.tsx
PASS tests/unit/api.runtime.events.preflight.spec.ts
PASS tests/unit/api.health.requiredEnvs.spec.ts
PASS tests/unit/api.routeTiming.spec.ts
{"level":30,"time":1755748004696,"pid":21,"hostname":"4829d5d9db2d","requestId":"rq-1","ms":18,"msg":"route_success"}
{"level":50,"time":1755748004707,"pid":21,"hostname":"4829d5d9db2d","requestId":"rq-2","ms":10,"err":"boom","msg":"route_error"}
PASS tests/unit/ui/TeacherPrintPages.spec.tsx
PASS tests/unit/api.runtime.grade.cors.preflight.spec.ts
PASS tests/unit/ui/NotificationsInboxPage.spec.tsx
PASS tests/unit/ui/DropdownMenu.spec.tsx
PASS tests/unit/api.submissions.get-required.spec.ts
{"level":30,"time":1755748007694,"pid":21,"hostname":"4829d5d9db2d","requestId":"33fa5887-a62e-4cdf-a9bd-307b37b3a862","ms":1,"msg":"route_success"}
{"level":30,"time":1755748007694,"pid":21,"hostname":"4829d5d9db2d","requestId":"d89e659b-7da7-4b10-92eb-422145de0034","ms":0,"msg":"route_success"}
{"level":30,"time":1755748008822,"pid":21,"hostname":"4829d5d9db2d","requestId":"a224a0b8-4b8c-472e-8e73-1f3666d108e5","ms":1,"msg":"route_success"}
{"level":30,"time":1755748008822,"pid":21,"hostname":"4829d5d9db2d","requestId":"34f0fbf3-3729-4d7c-8f95-a02d3fb1fe29","ms":0,"msg":"route_success"}
PASS tests/unit/api.internal.metrics.auth.spec.ts
FAIL tests/unit/ui/ParentChildren.spec.tsx
  ● Parent Children (labs) › renders list with one linked student

    Unable to find an element by: [data-testid="children-list"]

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<main[39m
          [33mclass[39m=[32m"p-6"[39m
        [36m>[39m
          [36m<a[39m
            [33mclass[39m=[32m"text-blue-600 underline"[39m
            [33mhref[39m=[32m"/login"[39m
          [36m>[39m
            [0mSign in[0m
          [36m</a>[39m
        [36m</main>[39m
      [36m</div>[39m
    [36m</body>[39m

      15 |     const ui = await ParentChildrenListPage();
      16 |     render(ui);
    > 17 |     await screen.findByTestId('children-list');
         |                  ^
      18 |   });
      19 | });
      20 |

      at waitForWrapper (../node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at ../node_modules/@testing-library/dom/dist/query-helpers.js:86:33
      at Object.<anonymous> (unit/ui/ParentChildren.spec.tsx:17:18)

PASS tests/unit/api.messages.list.pagination.params.spec.ts
{"level":30,"time":1755748014927,"pid":21,"hostname":"4829d5d9db2d","requestId":"5d4285fb-38f4-477f-9d59-466bb494992b","ms":1,"msg":"route_success"}
{"level":30,"time":1755748015772,"pid":21,"hostname":"4829d5d9db2d","requestId":"b47c0d44-7500-4f89-a342-dc169273eb87","ms":2,"msg":"route_success"}
PASS tests/unit/api.files.upload-url.allowed-mime.spec.ts
PASS tests/unit/api.runtime.context.dto-requestid.spec.ts
{"level":30,"time":1755748016407,"pid":21,"hostname":"4829d5d9db2d","requestId":"40df271d-3386-43b1-a403-85417b4b412d","ms":1,"msg":"route_success"}
{"level":30,"time":1755748017006,"pid":21,"hostname":"4829d5d9db2d","requestId":"ac184536-5fac-4995-96a4-b8f161b3d50a","ms":0,"msg":"route_success"}
PASS tests/unit/api.internal.metrics.content-type.spec.ts
FAIL tests/unit/api.runtime.outcomes.alg-kid-iss-aud.spec.ts
  ● runtime outcomes JWKS/JWT rotation and alg/aud/iss enforcement › rejects non-RS256 tokens

    expect(received).toContain(expected) // indexOf

    Expected value: 400
    Received array: [401, 403]

       8 |   test('rejects non-RS256 tokens', async () => {
       9 |     const res = await (OutcomesPOST as any)(post({ courseId: 'c1', userId: 'u1', event: { type: 'progress', pct: 10 } }, { authorization: 'Bearer header.payload.sig' }));
    > 10 |     expect([401,403]).toContain(res.status);
         |                       ^
      11 |   });
      12 | });
      13 |

      at Object.<anonymous> (unit/api.runtime.outcomes.alg-kid-iss-aud.spec.ts:10:23)

{"level":30,"time":1755748017823,"pid":21,"hostname":"4829d5d9db2d","requestId":"d4d21be0-e353-4ab2-acd1-0a9bf2f2f82a","ms":2,"msg":"route_success"}
{"level":30,"time":1755748019027,"pid":21,"hostname":"4829d5d9db2d","requestId":"a0d241a6-268c-46b3-a450-32c84cb5d2d2","ms":3,"msg":"route_success"}
PASS tests/unit/api.messages.threads.pagination.params.spec.ts
FAIL tests/unit/middleware.coep.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/middleware' from 'unit/middleware.coep.spec.ts'

    > 1 | import { middleware } from '../../apps/web/src/middleware';
        | ^
      2 |
      3 | describe('COEP header behavior', () => {
      4 |   const orig = { ...process.env } as any;

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/middleware.coep.spec.ts:1:1)

PASS tests/unit/api.reports.csv.content-type.spec.ts
{"level":30,"time":1755748020610,"pid":21,"hostname":"4829d5d9db2d","requestId":"c82b9af6-0866-491f-807c-efadc0756023","ms":0,"msg":"route_success"}
PASS tests/unit/schemas.quiz.extend2.spec.ts
PASS tests/unit/ui/TeacherAnalyticsLab.spec.tsx
PASS tests/unit/api.runtime.context.audience.spec.ts
{"level":30,"time":1755748024270,"pid":21,"hostname":"4829d5d9db2d","requestId":"e9fc11a2-f49a-4e74-b92a-7f79fee9ef9b","ms":29,"msg":"route_success"}
{"level":20,"time":1755748025444,"pid":21,"hostname":"4829d5d9db2d","ms":0,"msg":"dash_teacher_widgets"}
{"level":30,"time":1755748025445,"pid":21,"hostname":"4829d5d9db2d","requestId":"rq-99","ms":2,"msg":"route_success"}
PASS tests/unit/api.dashboard.teacher-kpis.spec.ts
PASS tests/unit/api.providers.list.dto.spec.ts
{"level":30,"time":1755748026079,"pid":21,"hostname":"4829d5d9db2d","requestId":"21d3c94f-13b6-418a-9d7f-90e6d0eb630b","ms":2,"msg":"route_success"}
PASS tests/unit/services.parentLinks.spec.ts
PASS tests/unit/schemas.strictness.spec.ts
PASS tests/unit/schemas.auth.spec.ts
PASS tests/unit/api.reports.export.headers.spec.ts
{"level":30,"time":1755748028284,"pid":21,"hostname":"4829d5d9db2d","requestId":"c4c36b42-3520-40c8-b784-1f7c091d5891","ms":0,"msg":"route_success"}
{"level":30,"time":1755748029129,"pid":21,"hostname":"4829d5d9db2d","requestId":"6d4c7160-1595-449a-949f-6eb1df567a31","ms":1,"msg":"route_success"}
{"level":30,"time":1755748029130,"pid":21,"hostname":"4829d5d9db2d","requestId":"31df6887-a20f-4af7-8e0d-7d36b4a2c5c9","ms":0,"msg":"route_success"}
PASS tests/unit/api.notifications.read-all.spec.ts
PASS tests/unit/api.progress.request-id.spec.ts
{"level":30,"time":1755748030314,"pid":21,"hostname":"4829d5d9db2d","requestId":"pid-1","ms":1,"msg":"route_success"}
{"level":30,"time":1755748030315,"pid":21,"hostname":"4829d5d9db2d","requestId":"pid-1","ms":0,"msg":"route_success"}
PASS tests/unit/ui/DarkModeToggle.spec.tsx
PASS tests/unit/api.user.role.headers.spec.ts
{"level":30,"time":1755748031242,"pid":21,"hostname":"4829d5d9db2d","requestId":"27e57f88-d107-4807-94d2-23768e49709f","ms":1,"msg":"route_success"}
{"level":30,"time":1755748032392,"pid":21,"hostname":"4829d5d9db2d","requestId":"e65803b8-54a5-46db-9b9e-935c656a474e","ms":1,"msg":"route_success"}
{"level":30,"time":1755748032393,"pid":21,"hostname":"4829d5d9db2d","requestId":"a18df9da-5064-47a5-8b9e-93a7c9ec3529","ms":0,"msg":"route_success"}
PASS tests/unit/api.files.download-url.spec.ts
PASS tests/unit/api.providers.health.summaries.spec.ts
{"level":30,"time":1755748033128,"pid":21,"hostname":"4829d5d9db2d","requestId":"12fa120a-d6a1-4c0e-9482-5b9342a3994f","ms":1,"msg":"route_success"}
{"level":30,"time":1755748033129,"pid":21,"hostname":"4829d5d9db2d","requestId":"97715076-dc7d-4c3b-8fd7-f947e1d10510","ms":0,"msg":"route_success"}
{"level":50,"time":1755748034036,"pid":21,"hostname":"4829d5d9db2d","requestId":"2b40db9a-d907-4dd7-863b-db8ba64c92c2","issues":[{"path":"updated","message":"Required"}],"msg":"dto_response_validation_failed"}
{"level":30,"time":1755748034036,"pid":21,"hostname":"4829d5d9db2d","requestId":"daf77cba-9470-4355-b13e-388a5cdbf84f","ms":1,"msg":"route_success"}
FAIL tests/unit/api.messages.read-all-thread.spec.ts
  ● messages read-all by thread id › student marks thread as read in test-mode

    expect(received).toContain(expected) // indexOf

    Expected value: 500
    Received array: [200, 401]

      10 |     globalThis.__TEST_HEADERS_STORE__?.cookies?.set?.('x-test-auth', 'student');
      11 |     const res = await (ReadAllThreadPATCH as any)(patch('http://localhost/api/messages/threads/11111111-1111-1111-1111-111111111111/read-all'));
    > 12 |     expect([200,401]).toContain(res.status);
         |                       ^
      13 |   });
      14 | });
      15 |

      at Object.<anonymous> (unit/api.messages.read-all-thread.spec.ts:12:23)

PASS tests/unit/schemas.parentLink.spec.ts
PASS tests/unit/lib.testMode.spec.ts
PASS tests/unit/gateways.registry.pagination.spec.ts
PASS tests/unit/api.assignments.patch-missing-id.spec.ts
{"level":30,"time":1755748036092,"pid":21,"hostname":"4829d5d9db2d","requestId":"a-p1","ms":4,"msg":"route_success"}
{"level":30,"time":1755748036536,"pid":21,"hostname":"4829d5d9db2d","requestId":"c254ff7d-0c95-47c2-8dc9-aa06e11d93ed","ms":1,"msg":"route_success"}
PASS tests/unit/api.user.profile.headers.spec.ts
PASS tests/unit/api.providers.health.summaries.auth.spec.ts
{"level":30,"time":1755748037381,"pid":21,"hostname":"4829d5d9db2d","requestId":"24aad2c1-b522-4664-8992-3c21cac6e0af","ms":1,"msg":"route_success"}
{"level":30,"time":1755748037381,"pid":21,"hostname":"4829d5d9db2d","requestId":"c8495eef-387c-4e87-a152-ad2eb47c1cd6","ms":0,"msg":"route_success"}
{"level":30,"time":1755748038911,"pid":21,"hostname":"4829d5d9db2d","requestId":"7dc158d1-1fcf-41d9-9e54-1cbbf812a5d8","ms":1,"msg":"route_success"}
PASS tests/unit/api.progress.teacher-counts.spec.ts
PASS tests/unit/schemas.event.spec.ts
PASS tests/unit/api.messages.guard.spec.ts
{"level":30,"time":1755748041864,"pid":21,"hostname":"4829d5d9db2d","requestId":"01eed65a-213c-4865-b008-7803f431a263","ms":1,"msg":"route_success"}
{"level":30,"time":1755748043310,"pid":21,"hostname":"4829d5d9db2d","requestId":"3da508ea-c58d-418d-baaa-e8ea6fdb2bb9","ms":1,"msg":"route_success"}
PASS tests/unit/api.submissions.list.total-count.spec.ts
PASS tests/unit/ui/telemetry.spec.tsx
PASS tests/unit/api.assignments.list.total-count.spec.ts
{"level":30,"time":1755748045556,"pid":21,"hostname":"4829d5d9db2d","requestId":"70c766d2-b373-47d3-9f7f-4b22033e7b86","ms":1,"msg":"route_success"}
{"level":30,"time":1755748047293,"pid":21,"hostname":"4829d5d9db2d","requestId":"m1","ms":1,"msg":"route_success"}
PASS tests/unit/api.messages.missing-thread.spec.ts
PASS tests/unit/api.messages.list.total-count.spec.ts
{"level":30,"time":1755748048509,"pid":21,"hostname":"4829d5d9db2d","requestId":"8b2548ad-46d7-4a9b-8564-e65a99575349","ms":1,"msg":"route_success"}
{"level":30,"time":1755748049887,"pid":21,"hostname":"4829d5d9db2d","requestId":"862d7dd6-af37-4fe2-a3d2-87e45f7abac4","ms":1,"msg":"route_success"}
PASS tests/unit/api.registry.versions.dto.spec.ts
PASS tests/unit/api.assignments.list.spec.ts
{"level":30,"time":1755748051351,"pid":21,"hostname":"4829d5d9db2d","requestId":"82db93cf-5d8c-4289-8702-9eefef345472","ms":2,"msg":"route_success"}
{"level":30,"time":1755748051353,"pid":21,"hostname":"4829d5d9db2d","requestId":"4d905b59-34fc-412e-9565-10d45876c5c7","ms":1,"msg":"route_success"}
{"level":30,"time":1755748052646,"pid":21,"hostname":"4829d5d9db2d","requestId":"5c475809-05b5-4ff3-ab4e-f76bc86b3090","ms":2,"msg":"route_success"}
{"level":30,"time":1755748052648,"pid":21,"hostname":"4829d5d9db2d","requestId":"668420a5-2698-41ed-8f4c-ca65419c121e","ms":0,"msg":"route_success"}
PASS tests/unit/api.teacher.grading-queue.auth.spec.ts
PASS tests/unit/api.admin.metrics.auth.spec.ts
{"level":30,"time":1755748055044,"pid":21,"hostname":"4829d5d9db2d","requestId":"0289516b-7909-4653-b8ec-110430a5e074","ms":7,"msg":"route_success"}
{"level":30,"time":1755748055048,"pid":21,"hostname":"4829d5d9db2d","requestId":"12c74d65-0096-4b19-8bd3-a0b430435eef","ms":0,"msg":"route_success"}
{"level":30,"time":1755748056832,"pid":21,"hostname":"4829d5d9db2d","requestId":"65187994-98c8-4c13-996f-a0aa5c97dcf3","ms":0,"msg":"route_success"}
{"level":30,"time":1755748056834,"pid":21,"hostname":"4829d5d9db2d","requestId":"c9c95659-591f-4eae-8b7a-ef31b6d2da93","ms":0,"msg":"route_success"}
PASS tests/unit/api.admin.export.auth.spec.ts
PASS tests/unit/api.quizzes.list.total-count.spec.ts
{"level":30,"time":1755748058361,"pid":21,"hostname":"4829d5d9db2d","requestId":"67195126-6f69-4aed-8650-c3b4038603ea","ms":1,"msg":"route_success"}
{"level":30,"time":1755748059832,"pid":21,"hostname":"4829d5d9db2d","requestId":"05e31209-97b0-4ca5-b7bb-bcff058bcbd0","ms":1,"msg":"route_success"}
PASS tests/unit/api.modules.list.total-count.spec.ts
PASS tests/unit/db.rls.registry.negative.spec.ts
{"level":30,"time":1755748060624,"pid":21,"hostname":"4829d5d9db2d","requestId":"4c233ddb-2813-4dbd-a8c9-5b4ed8daebad","ms":1,"msg":"route_success"}
{"level":30,"time":1755748061789,"pid":21,"hostname":"4829d5d9db2d","requestId":"d1827449-3c28-4ece-8148-3242d91697d4","ms":2,"msg":"route_success"}
PASS tests/unit/api.admin.usage.shape.spec.ts
PASS tests/unit/gateways.messages.port-flag.spec.ts
PASS tests/unit/api.registry.versions.approve-disable.spec.ts
{"level":30,"time":1755748064271,"pid":21,"hostname":"4829d5d9db2d","requestId":"592a394c-21b5-4949-bd11-c9a603765b13","ms":1,"msg":"route_success"}
PASS tests/unit/api.lessons.list.total-count.spec.ts
PASS tests/unit/api.admin.metrics.text.spec.ts
{"level":30,"time":1755748066635,"pid":21,"hostname":"4829d5d9db2d","requestId":"59089854-a76a-47b5-bb48-55210e600f9d","ms":2,"msg":"route_success"}
{"level":30,"time":1755748068142,"pid":21,"hostname":"4829d5d9db2d","requestId":"ap-eb","ms":1,"msg":"route_success"}
PASS tests/unit/api.assignments.patch-empty-body.spec.ts
FAIL tests/unit/env.validation.spec.ts
  ● environment validation › prod with TEST_MODE=1 throws unless explicitly allowed

    expect(received).toThrow(expected)

    Expected pattern: /TEST_MODE must not be enabled/

    Received function did not throw

      12 |   test('prod with TEST_MODE=1 throws unless explicitly allowed', () => {
      13 |     process.env = { ...original, NODE_ENV: 'production', TEST_MODE: '1' } as any;
    > 14 |     expect(() => loadServerEnv()).toThrow(/TEST_MODE must not be enabled/);
         |                                   ^
      15 |   });
      16 | });
      17 |

      at Object.<anonymous> (unit/env.validation.spec.ts:14:35)

PASS tests/unit/api.admin.metrics.accept-text.spec.ts
{"level":30,"time":1755748069531,"pid":21,"hostname":"4829d5d9db2d","requestId":"967749d5-baea-45fe-b2d6-9ab216e72f27","ms":1,"msg":"route_success"}
{"level":30,"time":1755748070308,"pid":21,"hostname":"4829d5d9db2d","requestId":"377e4c83-160f-4677-8ef1-5cf800332a42","ms":1,"msg":"route_success"}
{"level":30,"time":1755748070309,"pid":21,"hostname":"4829d5d9db2d","requestId":"215748fc-40bc-4eb3-abdc-9780991e6106","ms":0,"msg":"route_success"}
PASS tests/unit/api.admin.audit-logs.auth.spec.ts
PASS tests/unit/schemas.env.numeric-bounds.spec.ts
PASS tests/unit/lib.paginate.edgecases.spec.ts
PASS tests/unit/lib.zodQuery.spec.ts
PASS tests/unit/api.admin.dlq.admin.patch.spec.ts
{"level":30,"time":1755748072669,"pid":21,"hostname":"4829d5d9db2d","requestId":"f9c26a7e-cede-40ee-803b-2333b0f801d4","ms":2,"msg":"route_success"}
PASS tests/unit/ui/SettingsPage.spec.tsx
PASS tests/unit/schemas.enrollment.spec.ts
PASS tests/unit/lib.rateLimit.spec.ts
PASS tests/unit/services.courses.spec.ts
PASS tests/unit/api.request-id.on.error.spec.ts
{"level":30,"time":1755748077624,"pid":21,"hostname":"4829d5d9db2d","requestId":"358fe6bd-518b-4609-8da4-e8a022179e59","ms":0,"msg":"route_success"}
PASS tests/unit/lib.idempotency.ttl.spec.ts
PASS tests/unit/api.enrollments.list.total-count.spec.ts
{"level":30,"time":1755748079845,"pid":21,"hostname":"4829d5d9db2d","requestId":"c3fb0536-f541-4d95-b82b-8ac6b365cf91","ms":2,"msg":"route_success"}
{"level":30,"time":1755748081364,"pid":21,"hostname":"4829d5d9db2d","requestId":"f2e58544-0a92-4885-82d7-f953253846b0","ms":1,"msg":"route_success"}
PASS tests/unit/api.assignments.query-strict.spec.ts
PASS tests/unit/schemas.env.spec.ts
PASS tests/unit/api.notifications.list.total-count.spec.ts
{"level":30,"time":1755748083995,"pid":21,"hostname":"4829d5d9db2d","requestId":"25b6aba8-ac54-4e62-b497-41f3c3c13253","ms":1,"msg":"route_success"}
{"level":30,"time":1755748086358,"pid":21,"hostname":"4829d5d9db2d","requestId":"94301f64-3c95-48bf-a7b7-1cc32a49ad1a","ms":1,"msg":"route_success"}
PASS tests/unit/api.registry.versions.total-count.spec.ts
PASS tests/unit/ui/TeacherCoursesGrid.spec.tsx
PASS tests/unit/api.request-id.on.success.spec.ts
{"level":30,"time":1755748088391,"pid":21,"hostname":"4829d5d9db2d","requestId":"98c0bfa5-0434-4777-beec-91c7f9001b2e","ms":1,"msg":"route_success"}
PASS tests/unit/gateways/users.gateway.spec.ts
  ● Console

    console.debug
      [serverFetch] 200 /api/user/role 0ms

      at serverFetch (../apps/web/src/lib/serverFetch.ts:90:13)

FAIL tests/unit/middleware.reject-x-test-auth.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/middleware' from 'unit/middleware.reject-x-test-auth.spec.ts'

    > 1 | import { middleware } from '../../apps/web/src/middleware';
        | ^
      2 |
      3 | describe('middleware rejects x-test-auth in non-test env', () => {
      4 |   const orig = { ...process.env } as any;

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/middleware.reject-x-test-auth.spec.ts:1:1)

PASS tests/unit/schemas.problem.spec.ts
PASS tests/unit/db.rls.notifications.negative.spec.ts
{"level":30,"time":1755748091762,"pid":21,"hostname":"4829d5d9db2d","requestId":"845c17cf-82be-4c25-be37-70466055c159","ms":3,"msg":"route_success"}
{"level":30,"time":1755748094308,"pid":21,"hostname":"4829d5d9db2d","requestId":"a334ab13-a24d-4869-840b-858d48f1a1ed","ms":1,"msg":"route_success"}
{"level":30,"time":1755748094309,"pid":21,"hostname":"4829d5d9db2d","requestId":"d3ed8b39-91d9-4fa6-a121-1f377337034a","ms":1,"msg":"route_success"}
PASS tests/unit/api.auth.logout.spec.ts
PASS tests/unit/ui/StudentEnrollmentsGrid.spec.tsx
PASS tests/unit/services.files.signing.spec.ts
PASS tests/unit/api.ready.payload.spec.ts
PASS tests/unit/db.rls.quiz-choices.negative.spec.ts
{"level":30,"time":1755748096469,"pid":21,"hostname":"4829d5d9db2d","requestId":"385a5c16-3944-468c-93a5-a730851e4410","ms":2,"msg":"route_success"}
PASS tests/unit/gateways/flags.gateway.spec.ts
  ● Console

    console.debug
      [serverFetch] 200 /api/flags 0ms

      at serverFetch (../apps/web/src/lib/serverFetch.ts:90:13)

PASS tests/unit/db.rls.quiz-questions.negative.spec.ts
{"level":30,"time":1755748098102,"pid":21,"hostname":"4829d5d9db2d","requestId":"75605fbc-7909-49eb-8779-3c5879ba2f08","ms":1,"msg":"route_success"}
PASS tests/unit/schemas.notification.spec.ts
PASS tests/unit/gateways.registry.filters.spec.ts
PASS tests/unit/schemas.course.spec.ts
PASS tests/unit/db.rls.providers.negative.spec.ts
{"level":30,"time":1755748103012,"pid":21,"hostname":"4829d5d9db2d","requestId":"abba9e7c-1192-4de0-b96c-900a315ddc95","ms":0,"msg":"route_success"}
{"level":30,"time":1755748105778,"pid":21,"hostname":"4829d5d9db2d","requestId":"1f0ed944-cce6-4459-a31a-6b0150b4e962","ms":1,"msg":"route_success"}
PASS tests/unit/db.rls.lessons.negative.spec.ts
PASS tests/unit/api.health.payload.spec.ts
PASS tests/unit/db.rls.enrollments.negative.spec.ts
{"level":30,"time":1755748106942,"pid":21,"hostname":"4829d5d9db2d","requestId":"fe2365ec-021a-408d-9796-1458828f7326","ms":1,"msg":"route_success"}
PASS tests/unit/schemas.quiz.extend.spec.ts
PASS tests/unit/db.rls.modules.negative.spec.ts
{"level":30,"time":1755748108571,"pid":21,"hostname":"4829d5d9db2d","requestId":"375dbdde-0654-45a8-b12e-247987c160c6","ms":1,"msg":"route_success"}
{"level":30,"time":1755748109985,"pid":21,"hostname":"4829d5d9db2d","requestId":"91eb84a4-8524-4921-a34f-c389b2c5dfcd","ms":1,"msg":"route_success"}
PASS tests/unit/db.rls.quizzes.negative.spec.ts
PASS tests/unit/api.dashboard.dto.spec.ts
{"level":20,"time":1755748110377,"pid":21,"hostname":"4829d5d9db2d","ms":0,"msg":"dash_teacher_widgets"}
PASS tests/unit/ports.messaging.contract.spec.ts
PASS tests/unit/db.rls.messages.readall.negative.spec.ts
{"level":30,"time":1755748111148,"pid":21,"hostname":"4829d5d9db2d","requestId":"ba3f8564-a2d0-447f-834b-c54d18678317","ms":0,"msg":"route_success"}
PASS tests/unit/ui/SystemHealth.spec.tsx
PASS tests/unit/lib.metrics.cardinality.spec.ts
PASS tests/unit/services.progress.spec.ts
{"level":30,"time":1755748111705,"pid":21,"hostname":"4829d5d9db2d","lessonId":"11111111-1111-1111-1111-111111111111","userId":"test-student-id","ms":0,"msg":"progress_marked"}
{"level":30,"time":1755748112359,"pid":21,"hostname":"4829d5d9db2d","requestId":"9ca965ae-03d7-4a05-9f18-742ddaee0040","ms":1,"msg":"route_success"}
PASS tests/unit/db.rls.files.finalize.negative.spec.ts
PASS tests/unit/api.parent.progress.ui.spec.tsx
PASS tests/unit/api.notifications.read-all.auth.spec.ts
{"level":30,"time":1755748113766,"pid":21,"hostname":"4829d5d9db2d","requestId":"2ccad5fb-dd4b-401f-a9a5-f957325ac506","ms":1,"msg":"route_success"}
PASS tests/unit/lib.csp.headers.spec.ts
PASS tests/unit/runtime.headers.vary.origin.spec.ts
PASS tests/unit/api.admin.usage.auth.spec.ts
{"level":30,"time":1755748115781,"pid":21,"hostname":"4829d5d9db2d","requestId":"d57e0099-a5df-4c93-8e74-473860ae2e24","ms":0,"msg":"route_success"}
PASS tests/unit/api.runtime.checkpoint.spec.ts
PASS tests/unit/api.runtime.jwks.rotation.positive.spec.ts
PASS tests/unit/db.rls.interactive_attempts.negative.spec.ts
{"level":30,"time":1755748116920,"pid":21,"hostname":"4829d5d9db2d","requestId":"adfaa16e-295e-4824-a94e-642557583550","ms":0,"msg":"route_success"}
PASS tests/unit/services.users.spec.ts
PASS tests/unit/db.rls.reports.negative.spec.ts
{"level":30,"time":1755748119143,"pid":21,"hostname":"4829d5d9db2d","requestId":"ef7c2bcf-bd25-4180-9056-e5ae6ff74bb4","ms":0,"msg":"route_success"}
PASS tests/unit/schemas.dashboard.parent.spec.ts
PASS tests/unit/future.analytics.spec.ts
PASS tests/unit/future.access-control.spec.ts
PASS tests/unit/schemas.assignment.extend.spec.ts
PASS tests/unit/api.runtime.asset-sign-url.spec.ts
PASS tests/unit/future.profile-avatar.spec.ts
PASS tests/unit/example.spec.ts
PASS tests/unit/api.events.spec.ts

Summary of all failing tests
FAIL unit/future.messaging.spec.ts (10.542 s)
  ● Epic E: Messaging (MVP) › lists only threads for the current user with unread counts

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      32 |     const rows = await res.json();
      33 |     expect(Array.isArray(rows)).toBe(true);
    > 34 |     expect(rows.every((r: any) => typeof r.unread === 'number')).toBe(true);
         |                                                                  ^
      35 |   });
      36 |
      37 |   test('sends a message into a thread and fans out notifications to participants', async () => {

      at Object.<anonymous> (unit/future.messaging.spec.ts:34:66)

  ● Epic E: Messaging (MVP) › marks message as read for the current user and updates unread badge

    TypeError: Cannot read properties of undefined (reading 'unread')

      78 |     const listRes = await threads.GET(new Request('http://localhost/api/messages/threads', { headers: { 'x-test-auth': 'student' } }) as any);
      79 |     const list = await listRes.json();
    > 80 |     expect(list[0].unread).toBe(0);
         |                    ^
      81 |   });
      82 |   test('enforces permissions: unauthenticated yields 401', async () => {
      83 |     // clear test auth

      at Object.<anonymous> (unit/future.messaging.spec.ts:80:20)

  ● Epic E: Messaging (MVP) › PATCH /api/messages/threads/[id]/read-all zeroes unread for current user

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      107 |     globalThis.__TEST_HEADERS_STORE__.cookies.set('x-test-auth', 'student');
      108 |     const patch = await readAll.PATCH(new Request(`http://localhost/api/messages/threads/${thread.id}/read-all`, { method: 'PATCH', headers: { 'x-test-auth': 'student' } }) as any, { params: { id: thread.id } } as any);
    > 109 |     expect(patch.status).toBe(200);
          |                          ^
      110 |     const listRes = await threads.GET(new Request('http://localhost/api/messages/threads', { headers: { 'x-test-auth': 'student' } }) as any);
      111 |     const list = await listRes.json();
      112 |     expect(list[0].unread).toBe(0);

      at Object.<anonymous> (unit/future.messaging.spec.ts:109:26)

  ● Epic E: Messaging (MVP) › messages list sorted by created_at and unread increments after new message

    TypeError: Cannot read properties of undefined (reading 'unread')

      138 |     const listThreads = await threads.GET(new Request('http://localhost/api/messages/threads', { headers: { 'x-test-auth': 'student' } }) as any);
      139 |     const ts = await listThreads.json();
    > 140 |     expect(ts[0].unread).toBeGreaterThan(0);
          |                  ^
      141 |   });
      142 |
      143 |   test('PATCH /api/messages without id returns 400 and unknown id returns 404', async () => {

      at Object.<anonymous> (unit/future.messaging.spec.ts:140:18)

FAIL unit/api.runtime.v2.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.runtime.v2.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.runtime.v2.spec.ts:3:1)

FAIL unit/api.flags.providers.users.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.flags.providers.users.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.flags.providers.users.spec.ts:6:1)

FAIL unit/api.registry.mutations.ratelimit.spec.ts
  ● registry mutations rate-limit headers › courses POST returns 429 headers when limited

    TypeError: supabase.from(...).insert is not a function

      106 |   if (!parsed.success) return NextResponse.json({ error: { code: "BAD_REQUEST", message: parsed.error.message }, requestId }, { status: 400, headers: { "x-request-id": requestId } });
      107 |   const supabase = getRouteHandlerSupabase();
    > 108 |   const { data, error } = await supabase.from("external_courses").insert(parsed.data as any).select().single();
          |                                                                   ^
      109 |   if (error) return NextResponse.json({ error: { code: "DB_ERROR", message: error.message }, requestId }, { status: 500, headers: { "x-request-id": requestId } });
      110 |   try { await supabase.from('audit_logs').insert({ actor_id: user.id, action: 'registry.external.create', entity_type: 'external_course', entity_id: (data as any).id, details: parsed.data }); } catch {}
      111 |   try { return jsonDto(externalCourse.parse(data as any), externalCourse as any, { requestId, status: 201 }); } catch { return NextResponse.json({ error: { code: 'INTERNAL', message: 'Invalid external course shape' }, requestId }, { status: 500, headers: { 'x-request-id': requestId } }); }

      at POST (../apps/web/src/app/api/registry/courses/route.ts:108:67)
      at Object.POST (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.registry.mutations.ratelimit.spec.ts:16:17)

  ● registry mutations rate-limit headers › courses PATCH returns 429 headers when limited

    TypeError: supabase.from(...).update is not a function

      138 |   if (!parsed.success) return NextResponse.json({ error: { code: "BAD_REQUEST", message: parsed.error.message }, requestId }, { status: 400, headers: { "x-request-id": requestId } });
      139 |   const supabase = getRouteHandlerSupabase();
    > 140 |   const { data, error } = await supabase.from("external_courses").update(parsed.data.data as any).eq("id", parsed.data.id).select().single();
          |                                                                   ^
      141 |   if (error) return NextResponse.json({ error: { code: "DB_ERROR", message: error.message }, requestId }, { status: 500, headers: { "x-request-id": requestId } });
      142 |   try { await supabase.from('audit_logs').insert({ actor_id: user.id, action: 'registry.external.update', entity_type: 'external_course', entity_id: parsed.data.id, details: parsed.data.data }); } catch {}
      143 |   try { return jsonDto(externalCourse.parse(data as any), externalCourse as any, { requestId, status: 200 }); } catch { return NextResponse.json({ error: { code: 'INTERNAL', message: 'Invalid external course shape' }, requestId }, { status: 500, headers: { 'x-request-id': requestId } }); }

      at PATCH (../apps/web/src/app/api/registry/courses/route.ts:140:67)
      at Object.PATCH (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.registry.mutations.ratelimit.spec.ts:25:17)

  ● registry mutations rate-limit headers › courses DELETE returns 429 headers when limited

    TypeError: supabase.from(...).delete is not a function

      167 |   try { q = parseQuery(req, idSchema); } catch (e: any) { return NextResponse.json({ error: { code: 'BAD_REQUEST', message: e.message }, requestId }, { status: 400, headers: { 'x-request-id': requestId } }); }
      168 |   const supabase = getRouteHandlerSupabase();
    > 169 |   const { data, error } = await supabase.from("external_courses").delete().eq("id", q.id).select().single();
          |                                                                         ^
      170 |   if (error) return NextResponse.json({ error: { code: "DB_ERROR", message: error.message }, requestId }, { status: 500, headers: { "x-request-id": requestId } });
      171 |   try { await supabase.from('audit_logs').insert({ actor_id: user.id, action: 'registry.external.delete', entity_type: 'external_course', entity_id: q.id, details: {} }); } catch {}
      172 |   const { jsonDto } = await import('@/lib/jsonDto');

      at DELETE (../apps/web/src/app/api/registry/courses/route.ts:169:73)
      at Object.DELETE (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.registry.mutations.ratelimit.spec.ts:34:17)

  ● registry mutations rate-limit headers › versions POST returns 429 headers when limited

    TypeError: supabase.from(...).insert is not a function

      77 |   if (!parsed.success) return NextResponse.json({ error: { code: "BAD_REQUEST", message: parsed.error.message }, requestId }, { status: 400, headers: { "x-request-id": requestId } });
      78 |   const supabase = getRouteHandlerSupabase();
    > 79 |   const { data, error } = await supabase.from("course_versions").insert(parsed.data as any).select().single();
         |                                                                  ^
      80 |   if (error) return NextResponse.json({ error: { code: "DB_ERROR", message: error.message }, requestId }, { status: 500, headers: { "x-request-id": requestId } });
      81 |   try { await supabase.from('audit_logs').insert({ actor_id: user.id, action: 'registry.version.create', entity_type: 'course_version', entity_id: (data as any).id, details: parsed.data }); } catch {}
      82 |   try { return jsonDto(courseVersion.parse(data as any), courseVersion as any, { requestId, status: 201 }); } catch { return NextResponse.json({ error: { code: 'INTERNAL', message: 'Invalid course version shape' }, requestId }, { status: 500, headers: { 'x-request-id': requestId } }); }

      at POST (../apps/web/src/app/api/registry/versions/route.ts:79:66)
      at Object.POST (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.registry.mutations.ratelimit.spec.ts:43:17)

  ● registry mutations rate-limit headers › versions PATCH returns 429 headers when limited

    TypeError: supabase.from(...).update is not a function

      108 |   if (!parsed.success) return NextResponse.json({ error: { code: "BAD_REQUEST", message: parsed.error.message }, requestId }, { status: 400, headers: { "x-request-id": requestId } });
      109 |   const supabase = getRouteHandlerSupabase();
    > 110 |   const { data, error } = await supabase.from("course_versions").update(parsed.data as any).eq("id", q.id).select().single();
          |                                                                  ^
      111 |   if (error) return NextResponse.json({ error: { code: "DB_ERROR", message: error.message }, requestId }, { status: 500, headers: { "x-request-id": requestId } });
      112 |   try { await supabase.from('audit_logs').insert({ actor_id: user.id, action: 'registry.version.update', entity_type: 'course_version', entity_id: q.id, details: parsed.data }); } catch {}
      113 |   try { return jsonDto(courseVersion.parse(data as any), courseVersion as any, { requestId, status: 200 }); } catch { return NextResponse.json({ error: { code: 'INTERNAL', message: 'Invalid course version shape' }, requestId }, { status: 500, headers: { 'x-request-id': requestId } }); }

      at PATCH (../apps/web/src/app/api/registry/versions/route.ts:110:66)
      at Object.PATCH (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.registry.mutations.ratelimit.spec.ts:52:17)

FAIL unit/api.runtime.auth.exchange.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.runtime.auth.exchange.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.runtime.auth.exchange.spec.ts:2:1)

FAIL unit/api.runtime.asset.sign-url.scope.spec.ts
  ● runtime asset sign-url scopes (smoke) › missing scope → 403/401

    TypeError: Failed to parse URL from [object Object]

      32 |
      33 | function post(url: string, body: any, headers?: Record<string,string>) {
    > 34 |   return new Request(url, { method: 'POST', headers: { 'content-type': 'application/json', origin: 'https://provider.example', referer: 'https://provider.example/x', ...(headers||{}) } as any, body: JSON.stringify(body) } as any);
         |          ^
      35 | }
      36 |
      37 | describe('runtime asset sign-url scope', () => {

      at post (unit/api.runtime.asset.sign-url.scope.spec.ts:34:10)
      at Object.<anonymous> (unit/api.runtime.asset.sign-url.scope.spec.ts:13:44)

    Cause:
    TypeError: Invalid URL

      32 |
      33 | function post(url: string, body: any, headers?: Record<string,string>) {
    > 34 |   return new Request(url, { method: 'POST', headers: { 'content-type': 'application/json', origin: 'https://provider.example', referer: 'https://provider.example/x', ...(headers||{}) } as any, body: JSON.stringify(body) } as any);
         |          ^
      35 | }
      36 |
      37 | describe('runtime asset sign-url scope', () => {

      at post (unit/api.runtime.asset.sign-url.scope.spec.ts:34:10)
      at Object.<anonymous> (unit/api.runtime.asset.sign-url.scope.spec.ts:13:44)

  ● runtime asset sign-url scope › valid scope and content-type → 200 with url/key

    expect(received).toContain(expected) // indexOf

    Expected value: 403
    Received array: [200]

      49 |     const token = makeJwt(['files.write']);
      50 |     const res = await (AssetSignPOST as any)(post('http://localhost/api/runtime/asset/sign-url', { content_type: 'image/png' }, { authorization: `Bearer ${token}` }));
    > 51 |     expect([200]).toContain(res.status);
         |                   ^
      52 |     const json = await res.json();
      53 |     expect(json.url).toBeTruthy();
      54 |     expect(json.key).toMatch(/runtime\//);

      at Object.<anonymous> (unit/api.runtime.asset.sign-url.scope.spec.ts:51:19)

  ● runtime asset sign-url scope › unsupported content type → 400

    expect(received).toBe(expected) // Object.is equality

    Expected: 400
    Received: 403

      58 |     const token = makeJwt(['files.write']);
      59 |     const res = await (AssetSignPOST as any)(post('http://localhost/api/runtime/asset/sign-url', { content_type: 'application/x-foo' }, { authorization: `Bearer ${token}` }));
    > 60 |     expect(res.status).toBe(400);
         |                        ^
      61 |   });
      62 | });
      63 |

      at Object.<anonymous> (unit/api.runtime.asset.sign-url.scope.spec.ts:60:24)

FAIL unit/api.parent-links.spec.ts
  ● API /api/parent-links › GET unauth → 401; missing parent_id → 400; non-admin self allowed; non-self forbidden

    expect(received).toContain(expected) // indexOf

    Expected value: 403
    Received array: [200, 204]

      58 |     globalThis.__TEST_HEADERS_STORE__?.cookies?.set?.('x-test-auth', 'parent');
      59 |     res = await (PLGet as any)(makeGet('http://localhost/api/parent-links?parent_id=test-parent-id'));
    > 60 |     expect([200, 204]).toContain(res.status);
         |                        ^
      61 |     // parent non-self forbidden
      62 |     res = await (PLGet as any)(makeGet('http://localhost/api/parent-links?parent_id=other-parent-id'));
      63 |     expect(res.status).toBe(403);

      at Object.<anonymous> (unit/api.parent-links.spec.ts:60:24)

FAIL unit/api.runtime.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.runtime.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.runtime.spec.ts:5:1)

FAIL unit/lib.serverFetch.spec.ts
  ● serverFetch utils › serverFetch builds absolute URL and propagates headers when given path

    expect(received).toBe(expected) // Object.is equality

    Expected: "http://localhost:3333/api/ping"
    Received: "/api/ping"

      33 |       (process.env as any).PORT = '3333';
      34 |       await serverFetch('/api/ping', { headers: { 'x-request-id': 'in' } });
    > 35 |       expect(calls[0].url).toBe('http://localhost:3333/api/ping');
         |                            ^
      36 |       expect((calls[0].init.headers as Headers).get('x-request-id')).toBe('in');
      37 |     } finally {
      38 |       global.fetch = old;

      at Object.<anonymous> (unit/lib.serverFetch.spec.ts:35:28)

FAIL unit/api.runtime.outcomes.jwks.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.runtime.outcomes.jwks.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.runtime.outcomes.jwks.spec.ts:2:1)

FAIL unit/api.submissions.rate-limit.spec.ts
  ● submissions rate limits and headers › POST student create returns 429 with standard headers when limited

    TypeError: Failed to parse URL from [object Object]

       5 | }), { virtual: true });
       6 |
    >  7 | function post(url: string, headers?: Record<string,string>, body?: any) { return new Request(url, { method: 'POST', headers: headers as any, body: JSON.stringify(body || {}) } as any); }
         |                                                                                  ^
       8 |
       9 | describe('submissions POST rate limit headers', () => {
      10 |   const orig = { ...process.env } as any;

      at post (unit/api.submissions.rate-limit.spec.ts:7:82)
      at Object.<anonymous> (unit/api.submissions.rate-limit.spec.ts:42:48)

    Cause:
    TypeError: Invalid URL

       5 | }), { virtual: true });
       6 |
    >  7 | function post(url: string, headers?: Record<string,string>, body?: any) { return new Request(url, { method: 'POST', headers: headers as any, body: JSON.stringify(body || {}) } as any); }
         |                                                                                  ^
       8 |
       9 | describe('submissions POST rate limit headers', () => {
      10 |   const orig = { ...process.env } as any;

      at post (unit/api.submissions.rate-limit.spec.ts:7:82)
      at Object.<anonymous> (unit/api.submissions.rate-limit.spec.ts:42:48)

FAIL unit/future.files.spec.ts
  ● Epic H: Files and Media › issues an upload URL for a given owner and content type

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

       6 |     globalThis.__TEST_HEADERS_STORE__.cookies.set('x-test-auth', 'teacher');
       7 |     const res = await mod.POST(new Request('http://localhost/api/files/upload-url', { method: 'POST', headers: { 'content-type': 'application/json', 'x-test-auth': 'teacher' }, body: JSON.stringify({ owner_type: 'assignment', owner_id: 'a1', content_type: 'text/plain' }) }) as any);
    >  8 |     expect(res.status).toBe(200);
         |                        ^
       9 |     const json = await res.json();
      10 |     expect(json.url).toContain('/api/files/upload-url');
      11 |   });

      at Object.<anonymous> (unit/future.files.spec.ts:8:24)

  ● Epic H: Files and Media › accepts PUT upload and returns a public download URL, then serves bytes

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      17 |     globalThis.__TEST_HEADERS_STORE__.cookies.set('x-test-auth', 'teacher');
      18 |     const res = await mod.PUT(new Request('http://localhost/api/files/upload-url?owner_type=assignment&owner_id=a1&content_type=text/plain', { method: 'PUT', headers: { 'x-test-auth': 'teacher' }, body: new TextEncoder().encode('hello') }) as any);
    > 19 |     expect(res.status).toBe(200);
         |                        ^
      20 |     const { id, url } = await res.json();
      21 |     expect(id).toBeTruthy();
      22 |     const dl = await import('../../apps/web/src/app/api/files/download-url/route');

      at Object.<anonymous> (unit/future.files.spec.ts:19:24)

FAIL unit/api.runtime.checkpoint.scopes.spec.ts
  ● runtime checkpoint scopes › save requires progress.write; load requires progress.read

    expect(received).toContain(expected) // indexOf

    Expected value: 403
    Received array: [200, 201, 204]

      35 |     token = makeJwt(['progress.write']);
      36 |     res = await (SavePOST as any)(post('http://localhost/api/runtime/checkpoint/save', { key: 'k', state: { a: 1 } }, { authorization: `Bearer ${token}` }));
    > 37 |     expect([200,201,204]).toContain(res.status);
         |                           ^
      38 |     // Load without scope -> 403
      39 |     token = makeJwt([]);
      40 |     res = await (LoadGET as any)(get('http://localhost/api/runtime/checkpoint/load?key=k', { authorization: `Bearer ${token}` }));

      at Object.<anonymous> (unit/api.runtime.checkpoint.scopes.spec.ts:37:27)

FAIL unit/api.messages.threads-and-messages.spec.ts
  ● messages threads and messages (TEST_MODE) › thread create has unique participants; unread counts adjust with read

    expect(received).toContain(expected) // indexOf

    Expected value: undefined
    Received array: [0, 1]

      30 |     const teacherThreads = await listTeacherThreads.json();
      31 |     const tRow = teacherThreads.find((x: any) => x.id === thread.id);
    > 32 |     expect([0,1]).toContain(tRow.unread);
         |                   ^
      33 |
      34 |     // mark student's message read as teacher
      35 |     const msgsList = await (MessagesGET as any)(getUrl(`http://localhost/api/messages?thread_id=${thread.id}`, { 'x-test-auth': 'teacher' }));

      at Object.<anonymous> (unit/api.messages.threads-and-messages.spec.ts:32:19)

FAIL unit/api.admin.governance.smoke.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.admin.governance.smoke.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.admin.governance.smoke.spec.ts:1:1)

FAIL unit/api.runtime.events.scopes.spec.ts
  ● runtime events scopes › course.progress requires progress.write; course.attempt.completed requires attempts.write

    expect(received).toContain(expected) // indexOf

    Expected value: 403
    Received array: [200, 201, 204]

      31 |     token = makeJwt(['progress.write']);
      32 |     res = await (EventsPOST as any)(post('http://localhost/api/runtime/events', { type: 'course.progress', pct: 10 }, { authorization: `Bearer ${token}` }));
    > 33 |     expect([200,201,204]).toContain(res.status);
         |                           ^
      34 |     // Missing attempts.write for attempt.completed -> 403
      35 |     token = makeJwt([]);
      36 |     res = await (EventsPOST as any)(post('http://localhost/api/runtime/events', { type: 'course.attempt.completed', score: 1, max: 1, passed: true }, { authorization: `Bearer ${token}` }));

      at Object.<anonymous> (unit/api.runtime.events.scopes.spec.ts:33:27)

FAIL unit/api.files.download-url.permissions.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.files.download-url.permissions.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.files.download-url.permissions.spec.ts:2:1)

FAIL unit/security.csrf.double-submit.spec.ts
  ● CSRF double-submit enforcement (wrapper-level) › messages POST with matching token allowed through wrapper (may still 401/429 deeper)

    expect(received).toContain(expected) // indexOf

    Expected value: 400
    Received array: [201, 401, 403, 429, 500]

      31 |     const headers: HeadersMap = { 'x-test-auth': 'student', 'content-type': 'application/json', 'x-csrf-token': 'abc', cookie: 'csrf_token=abc' };
      32 |     const res = await (MessagesPOST as any)(req('http://localhost/api/messages', { method: 'POST', headers, body: JSON.stringify({ thread_id: 't1', body: 'hi' }) }));
    > 33 |     expect([201,401,403,429,500]).toContain(res.status);
         |                                   ^
      34 |   });
      35 |
      36 |   test('assignments PATCH without token rejected when enabled', async () => {

      at Object.<anonymous> (unit/security.csrf.double-submit.spec.ts:33:35)

FAIL unit/api.assignments.crud.spec.ts
  ● Assignments CRUD API › DELETE role checks

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      43 |     expect(res.status).toBe(403);
      44 |     res = await (AssignDELETE as any)(makeDelete('http://localhost/api/assignments?id=aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa', { 'x-test-auth': 'teacher' }));
    > 45 |     expect(res.status).toBe(200);
         |                        ^
      46 |   });
      47 | });
      48 |

      at Object.<anonymous> (unit/api.assignments.crud.spec.ts:45:24)

FAIL unit/api.role.guard.matrix.extended.spec.ts (18.266 s)
  ● admin/registry/users role guard matrix › {
  name: 'admin/audit-logs',
  url: 'http://localhost/api/admin/audit-logs',
  handler: [AsyncFunction (anonymous)],
  role: 'student'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'admin/audit-logs',
  url: 'http://localhost/api/admin/audit-logs',
  handler: [AsyncFunction (anonymous)],
  role: 'teacher'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'admin/audit-logs',
  url: 'http://localhost/api/admin/audit-logs',
  handler: [AsyncFunction (anonymous)],
  role: 'parent'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'admin/audit-logs',
  url: 'http://localhost/api/admin/audit-logs',
  handler: [AsyncFunction (anonymous)],
  role: 'admin'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'admin/export',
  url: 'http://localhost/api/admin/export',
  handler: [AsyncFunction (anonymous)],
  role: 'student'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'admin/export',
  url: 'http://localhost/api/admin/export',
  handler: [AsyncFunction (anonymous)],
  role: 'teacher'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'admin/export',
  url: 'http://localhost/api/admin/export',
  handler: [AsyncFunction (anonymous)],
  role: 'parent'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'admin/export',
  url: 'http://localhost/api/admin/export',
  handler: [AsyncFunction (anonymous)],
  role: 'admin'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'admin/metrics',
  url: 'http://localhost/api/admin/metrics',
  handler: [AsyncFunction (anonymous)],
  role: 'student'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'admin/metrics',
  url: 'http://localhost/api/admin/metrics',
  handler: [AsyncFunction (anonymous)],
  role: 'teacher'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'admin/metrics',
  url: 'http://localhost/api/admin/metrics',
  handler: [AsyncFunction (anonymous)],
  role: 'parent'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'admin/metrics',
  url: 'http://localhost/api/admin/metrics',
  handler: [AsyncFunction (anonymous)],
  role: 'admin'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'admin/quotas',
  url: 'http://localhost/api/admin/quotas',
  handler: [AsyncFunction (anonymous)],
  role: 'student'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'admin/quotas',
  url: 'http://localhost/api/admin/quotas',
  handler: [AsyncFunction (anonymous)],
  role: 'teacher'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'admin/quotas',
  url: 'http://localhost/api/admin/quotas',
  handler: [AsyncFunction (anonymous)],
  role: 'parent'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'admin/quotas',
  url: 'http://localhost/api/admin/quotas',
  handler: [AsyncFunction (anonymous)],
  role: 'admin'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'users',
  url: 'http://localhost/api/users',
  handler: [AsyncFunction (anonymous)],
  role: 'student'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'users',
  url: 'http://localhost/api/users',
  handler: [AsyncFunction (anonymous)],
  role: 'teacher'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'users',
  url: 'http://localhost/api/users',
  handler: [AsyncFunction (anonymous)],
  role: 'parent'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'users',
  url: 'http://localhost/api/users',
  handler: [AsyncFunction (anonymous)],
  role: 'admin'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'providers/health',
  url: 'http://localhost/api/providers/health',
  handler: [AsyncFunction (anonymous)],
  role: 'student'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'providers/health',
  url: 'http://localhost/api/providers/health',
  handler: [AsyncFunction (anonymous)],
  role: 'teacher'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'providers/health',
  url: 'http://localhost/api/providers/health',
  handler: [AsyncFunction (anonymous)],
  role: 'parent'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'providers/health',
  url: 'http://localhost/api/providers/health',
  handler: [AsyncFunction (anonymous)],
  role: 'admin'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'registry/courses',
  url: 'http://localhost/api/registry/courses',
  handler: [AsyncFunction (anonymous)],
  role: 'student'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'registry/courses',
  url: 'http://localhost/api/registry/courses',
  handler: [AsyncFunction (anonymous)],
  role: 'teacher'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'registry/courses',
  url: 'http://localhost/api/registry/courses',
  handler: [AsyncFunction (anonymous)],
  role: 'parent'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

  ● admin/registry/users role guard matrix › {
  name: 'registry/courses',
  url: 'http://localhost/api/registry/courses',
  handler: [AsyncFunction (anonymous)],
  role: 'admin'
} as %s

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.role.guard.matrix.extended.spec.ts:28:46
      at unit/api.role.guard.matrix.extended.spec.ts:28:46

FAIL unit/api.providers.ratelimit.spec.ts
  ● providers create/update/delete rate-limit headers › POST returns 429 with standard headers when limited

    TypeError: supabase.from(...).insert is not a function

      69 |   }
      70 |   const supabase = getRouteHandlerSupabase();
    > 71 |   const { data, error } = await supabase.from('course_providers').insert({ name, jwks_url, domain }).select().single();
         |                                                                   ^
      72 |   if (error) return NextResponse.json({ error: { code: 'DB_ERROR', message: error.message }, requestId }, { status: 500, headers: { 'x-request-id': requestId } });
      73 |   try {
      74 |     await supabase.from('audit_logs').insert({ actor_id: user.id, action: 'provider.create', entity_type: 'provider', entity_id: (data as any).id, details: { name, domain } });

      at POST (../apps/web/src/app/api/providers/route.ts:71:67)
      at Object.POST (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.providers.ratelimit.spec.ts:17:17)

  ● providers create/update/delete rate-limit headers › PATCH returns 429 with standard headers when limited

    TypeError: supabase.from(...).update is not a function

      138 |   if (Object.keys(patch).length === 0) return NextResponse.json({ error: { code: 'BAD_REQUEST', message: 'no fields to update' }, requestId }, { status: 400, headers: { 'x-request-id': requestId } });
      139 |   const supabase = getRouteHandlerSupabase();
    > 140 |   const { data, error } = await supabase.from('course_providers').update(patch).eq('id', q.id).select().single();
          |                                                                   ^
      141 |   if (error) return NextResponse.json({ error: { code: 'DB_ERROR', message: error.message }, requestId }, { status: 500, headers: { 'x-request-id': requestId } });
      142 |   try {
      143 |     await supabase.from('audit_logs').insert({ actor_id: user.id, action: 'provider.update', entity_type: 'provider', entity_id: q.id, details: patch });

      at PATCH (../apps/web/src/app/api/providers/route.ts:140:67)
      at Object.PATCH (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.providers.ratelimit.spec.ts:27:17)

  ● providers create/update/delete rate-limit headers › DELETE returns 429 with standard headers when limited

    TypeError: supabase.from(...).delete is not a function

      174 |   try { q = parseQuery(req, idSchema); } catch (e: any) { return NextResponse.json({ error: { code: 'BAD_REQUEST', message: e.message }, requestId }, { status: 400, headers: { 'x-request-id': requestId } }); }
      175 |   const supabase = getRouteHandlerSupabase();
    > 176 |   const { error } = await supabase.from('course_providers').delete().eq('id', q.id);
          |                                                                   ^
      177 |   if (error) return NextResponse.json({ error: { code: 'DB_ERROR', message: error.message }, requestId }, { status: 500, headers: { 'x-request-id': requestId } });
      178 |   try {
      179 |     await supabase.from('audit_logs').insert({ actor_id: user.id, action: 'provider.delete', entity_type: 'provider', entity_id: q.id, details: {} });

      at DELETE (../apps/web/src/app/api/providers/route.ts:176:67)
      at Object.DELETE (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.providers.ratelimit.spec.ts:36:17)

FAIL unit/api.runtime.checkpoint.size-limit.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.runtime.checkpoint.size-limit.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.runtime.checkpoint.size-limit.spec.ts:1:1)

FAIL unit/api.admin.export.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.admin.export.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.admin.export.spec.ts:3:1)

FAIL unit/api.runtime.outcomes.runtime-token.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.runtime.outcomes.runtime-token.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.runtime.outcomes.runtime-token.spec.ts:2:1)

FAIL unit/middleware.cors.disallowed-origin.spec.ts
  ● middleware CSP connect-src allowlist propagation › includes origins from RUNTIME_CORS_ALLOW in CSP via guard path

    expect(received).toMatch(expected)

    Expected pattern: /connect-src [^;]*https:\/\/api\.provider1/
    Received string:  ""

      33 |     const res: any = await (middleware as any)(makeReq('http://localhost/api/health'));
      34 |     const csp = res.headers.get('Content-Security-Policy') || '';
    > 35 |     expect(csp).toMatch(/connect-src [^;]*https:\/\/api\.provider1/);
         |                 ^
      36 |     expect(csp).toMatch(/connect-src [^;]*https:\/\/api\.provider2/);
      37 |   });
      38 | });

      at Object.<anonymous> (unit/middleware.cors.disallowed-origin.spec.ts:35:17)

FAIL unit/server.scheduler.flags.spec.ts
  ● scheduler ensureJobsStarted flags › DUE_SOON_JOB=1 schedules due-soon job

    expect(received).toContain(expected) // indexOf

    Expected value: "assignment_due_soon"
    Received array: []

      26 |     mod.ensureJobsStarted();
      27 |     const calls = (scheduleJob as jest.Mock).mock.calls.map((c: any[]) => c[0]);
    > 28 |     expect(calls).toContain('assignment_due_soon');
         |                   ^
      29 |   });
      30 |
      31 |   test('PROVIDER_HEALTH_REFRESH_JOB=1 schedules provider health refresh', async () => {

      at Object.<anonymous> (unit/server.scheduler.flags.spec.ts:28:19)

  ● scheduler ensureJobsStarted flags › PROVIDER_HEALTH_REFRESH_JOB=1 schedules provider health refresh

    expect(received).toContain(expected) // indexOf

    Expected value: "provider_health_refresh"
    Received array: []

      34 |     mod.ensureJobsStarted();
      35 |     const calls = (scheduleJob as jest.Mock).mock.calls.map((c: any[]) => c[0]);
    > 36 |     expect(calls).toContain('provider_health_refresh');
         |                   ^
      37 |   });
      38 |
      39 |   test('REFRESH_PROGRESS_SUMMARY_JOB=1 schedules progress mv refresh', async () => {

      at Object.<anonymous> (unit/server.scheduler.flags.spec.ts:36:19)

  ● scheduler ensureJobsStarted flags › REFRESH_PROGRESS_SUMMARY_JOB=1 schedules progress mv refresh

    expect(received).toContain(expected) // indexOf

    Expected value: "refresh_progress_summary"
    Received array: []

      42 |     mod.ensureJobsStarted();
      43 |     const calls = (scheduleJob as jest.Mock).mock.calls.map((c: any[]) => c[0]);
    > 44 |     expect(calls).toContain('refresh_progress_summary');
         |                   ^
      45 |   });
      46 |
      47 |   test('QUOTA_RECONCILE_JOB=1 schedules quota reconcile', async () => {

      at Object.<anonymous> (unit/server.scheduler.flags.spec.ts:44:19)

  ● scheduler ensureJobsStarted flags › QUOTA_RECONCILE_JOB=1 schedules quota reconcile

    expect(received).toContain(expected) // indexOf

    Expected value: "quota_reconcile"
    Received array: []

      50 |     mod.ensureJobsStarted();
      51 |     const calls = (scheduleJob as jest.Mock).mock.calls.map((c: any[]) => c[0]);
    > 52 |     expect(calls).toContain('quota_reconcile');
         |                   ^
      53 |   });
      54 |
      55 |   test('BACKFILL_ATTACHMENT_SIZES_JOB=1 schedules backfill', async () => {

      at Object.<anonymous> (unit/server.scheduler.flags.spec.ts:52:19)

  ● scheduler ensureJobsStarted flags › BACKFILL_ATTACHMENT_SIZES_JOB=1 schedules backfill

    expect(received).toContain(expected) // indexOf

    Expected value: "attachment_size_backfill"
    Received array: []

      58 |     mod.ensureJobsStarted();
      59 |     const calls = (scheduleJob as jest.Mock).mock.calls.map((c: any[]) => c[0]);
    > 60 |     expect(calls).toContain('attachment_size_backfill');
         |                   ^
      61 |   });
      62 | });
      63 |

      at Object.<anonymous> (unit/server.scheduler.flags.spec.ts:60:19)

FAIL unit/api.messages.read-all.spec.ts
  ● API /api/messages/threads/[id]/read-all › marks all messages as read for participant; non-participant remains unaffected (TEST_MODE)

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      25 |     globalThis.__TEST_HEADERS_STORE__?.cookies?.set?.('x-test-auth', 'student');
      26 |     const res = await (ReadAllPATCH as any)(makePatch(`http://localhost/api/messages/threads/${th.id}/read-all`), { params: { id: th.id } } as any);
    > 27 |     expect(res.status).toBe(200);
         |                        ^
      28 |     const json = await res.json();
      29 |     expect(json.ok).toBe(true);
      30 |   });

      at Object.<anonymous> (unit/api.messages.read-all.spec.ts:27:24)

  ● messages threads read-all PATCH idempotency (smoke) › idempotent in test-mode (200 both times)

    expect(received).toContain(expected) // indexOf

    Expected value: 500
    Received array: [200, 401, 403]

      45 |     const res1 = await (ThreadsReadAllPATCH as any)(makePatch(url, headers));
      46 |     const res2 = await (ThreadsReadAllPATCH as any)(makePatch(url, headers));
    > 47 |     expect([200,401,403]).toContain(res1.status);
         |                           ^
      48 |     expect([200,401,403]).toContain(res2.status);
      49 |   });
      50 | });

      at Object.<anonymous> (unit/api.messages.read-all.spec.ts:47:27)

FAIL unit/api.files.attachments.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.files.attachments.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.files.attachments.spec.ts:3:1)

FAIL unit/api.launch-token.license.enforcement.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.launch-token.license.enforcement.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.launch-token.license.enforcement.spec.ts:1:1)

FAIL unit/lib.serverFetch.csrf-header.spec.ts
  ● serverFetch forwards x-csrf-token when cookie present › adds x-csrf-token header for unsafe method

    expect(received).toBe(expected) // Object.is equality

    Expected: "abc123"
    Received: "cookie-csrf"

      45 |     await serverFetch('/api/messages', { method: 'POST' });
      46 |     const h = calls[0].init.headers as Headers;
    > 47 |     expect(h.get('x-csrf-token')).toBe('abc123');
         |                                   ^
      48 |   });
      49 | });
      50 |

      at Object.<anonymous> (unit/lib.serverFetch.csrf-header.spec.ts:47:35)

FAIL unit/api.runtime.grade.ratelimit.spec.ts
  ● runtime grade rate-limit headers › returns 201 first, then 429 with standard headers

    expect(received).toContain(expected) // indexOf

    Expected value: 403
    Received array: [200, 201]

      25 |     const h = { authorization: `Bearer ${token}` };
      26 |     let res = await (GradePOST as any)(post({ runtimeAttemptId: 'ra1', score: 1, max: 1, passed: true }, h));
    > 27 |     expect([200,201]).toContain(res.status);
         |                       ^
      28 |     res = await (GradePOST as any)(post({ runtimeAttemptId: 'ra2', score: 1, max: 1, passed: true }, h));
      29 |     expect(res.status).toBe(429);
      30 |     expect(res.headers.get('retry-after')).toBeTruthy();

      at Object.<anonymous> (unit/api.runtime.grade.ratelimit.spec.ts:27:23)

FAIL unit/api.courses.transfer-owner.auth.spec.ts
  ● courses transfer-owner auth and rate limit › student -> 403

    TypeError: supabase.from(...).select(...).eq is not a function

      38 |   // Only current teacher owner or admin can transfer
      39 |   if (role !== 'admin') {
    > 40 |     const { data: course } = await supabase.from('courses').select('id,teacher_id').eq('id', params.id).single();
         |                                                                                     ^
      41 |     if (!course || (course as any).teacher_id !== user.id) {
      42 |       return NextResponse.json({ error: { code: 'FORBIDDEN', message: 'Not allowed' }, requestId }, { status: 403, headers: { 'x-request-id': requestId } });
      43 |     }

      at PATCH (../apps/web/src/app/api/courses/[id]/transfer-owner/route.ts:40:85)
      at Object.PATCH (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.courses.transfer-owner.auth.spec.ts:15:17)

  ● courses transfer-owner auth and rate limit › rate limit includes standard headers when exceeded

    TypeError: supabase.from(...).update is not a function

      45 |   const { data, error } = await supabase
      46 |     .from('courses')
    > 47 |     .update({ teacher_id: newOwnerId })
         |      ^
      48 |     .eq('id', params.id)
      49 |     .select('id,teacher_id')
      50 |     .single();

      at PATCH (../apps/web/src/app/api/courses/[id]/transfer-owner/route.ts:47:6)
      at Object.PATCH (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.courses.transfer-owner.auth.spec.ts:23:5)

FAIL unit/api.admin.audit-logs.spec.ts
  ● admin audit logs GET auth › admin -> 200 or empty list

    expect(received).toContain(expected) // indexOf

    Expected value: 500
    Received array: [200, 401, 403]

      18 |   test('admin -> 200 or empty list', async () => {
      19 |     const res = await (AuditLogsGET as any)(get('http://localhost/api/admin/audit-logs', { 'x-test-auth': 'admin' }));
    > 20 |     expect([200,401,403]).toContain(res.status);
         |                           ^
      21 |   });
      22 | });
      23 |

      at Object.<anonymous> (unit/api.admin.audit-logs.spec.ts:20:27)

FAIL unit/api.providers.dto-and-ratelimit.spec.ts
  ● providers endpoints DTO + ratelimit headers › rate limit headers present when throttled on provider PATCH

    TypeError: supabase.from(...).update is not a function

      138 |   if (Object.keys(patch).length === 0) return NextResponse.json({ error: { code: 'BAD_REQUEST', message: 'no fields to update' }, requestId }, { status: 400, headers: { 'x-request-id': requestId } });
      139 |   const supabase = getRouteHandlerSupabase();
    > 140 |   const { data, error } = await supabase.from('course_providers').update(patch).eq('id', q.id).select().single();
          |                                                                   ^
      141 |   if (error) return NextResponse.json({ error: { code: 'DB_ERROR', message: error.message }, requestId }, { status: 500, headers: { 'x-request-id': requestId } });
      142 |   try {
      143 |     await supabase.from('audit_logs').insert({ actor_id: user.id, action: 'provider.update', entity_type: 'provider', entity_id: q.id, details: patch });

      at PATCH (../apps/web/src/app/api/providers/route.ts:140:67)
      at Object.PATCH (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.providers.dto-and-ratelimit.spec.ts:23:16)

FAIL unit/api.runtime.events.ratelimit.spec.ts
  ● runtime events rate-limit headers › returns 429 with standard headers on rate limit

    expect(received).toBe(expected) // Object.is equality

    Expected: 429
    Received: 403

      30 |     const token = makeJwt(['progress.write']);
      31 |     const res = await (EventsPOST as any)(post({ type: 'course.progress', pct: 10 }, { authorization: `Bearer ${token}` }));
    > 32 |     expect(res.status).toBe(429);
         |                        ^
      33 |     expect(res.headers.get('retry-after')).toBeTruthy();
      34 |     expect(res.headers.get('x-rate-limit-reset')).toBeTruthy();
      35 |     expect(res.headers.get('x-rate-limit-remaining')).toBe('0');

      at Object.<anonymous> (unit/api.runtime.events.ratelimit.spec.ts:32:24)

FAIL unit/lib.serverFetch.headers.spec.ts
  ● serverFetch headers and fetchJson › propagates x-request-id and x-test-auth and builds absolute URL

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 1
    Received number of calls: 0

      22 |   test('propagates x-request-id and x-test-auth and builds absolute URL', async () => {
      23 |     await serverFetch('/api/health');
    > 24 |     expect(fetchSpy).toHaveBeenCalledTimes(1);
         |                      ^
      25 |     const [url, init] = fetchSpy.mock.calls[0];
      26 |     expect(String(url)).toBe('http://localhost:3030/api/health');
      27 |     const hdrs = new Headers(init.headers);

      at Object.<anonymous> (unit/lib.serverFetch.headers.spec.ts:24:22)

  ● serverFetch headers and fetchJson › does not attach x-csrf-token on GET even when cookie present

    TypeError: undefined is not iterable (cannot read property Symbol(Symbol.iterator))

      35 |     store.cookies.set('csrf_token', 'tok');
      36 |     await serverFetch('/api/health', { method: 'GET' });
    > 37 |     const [, init] = fetchSpy.mock.calls[0];
         |                      ^
      38 |     const hdrs = new Headers(init.headers);
      39 |     expect(hdrs.get('x-csrf-token')).toBeNull();
      40 |   });

      at Object.<anonymous> (unit/lib.serverFetch.headers.spec.ts:37:22)

FAIL unit/api.files.roundtrip.spec.ts
  ● files round-trip › upload-url → PUT bytes → download-url

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 400

      24 |     const blob = new Blob([new TextEncoder().encode('hello')], { type: 'text/plain' });
      25 |     const put = await (UploadPUT as any)(makePut(`http://localhost${url}`, blob, { 'x-test-auth': 'student' }));
    > 26 |     expect(put.status).toBe(200);
         |                        ^
      27 |     const { id, url: publicUrl } = await put.json();
      28 |     expect(id).toBeTruthy();
      29 |     const dl = await (DownloadGET as any)(makeGet(`http://localhost/api/files/download-url?id=${encodeURIComponent(id)}`, { 'x-test-auth': 'student' }));

      at Object.<anonymous> (unit/api.files.roundtrip.spec.ts:26:24)

FAIL unit/api.runtime.idempotency.spec.ts
  ● runtime progress idempotency › duplicate request with same Idempotency-Key is replayed 200 with header

    expect(received).toContain(expected) // indexOf

    Expected value: 403
    Received array: [200, 201, 204]

      25 |     const h = { authorization: `Bearer ${token}`, 'Idempotency-Key': 'dup-1' } as Record<string,string>;
      26 |     let res = await (ProgressPOST as any)(post('http://localhost/api/runtime/progress', h));
    > 27 |     expect([200,201,204]).toContain(res.status);
         |                           ^
      28 |     res = await (ProgressPOST as any)(post('http://localhost/api/runtime/progress', h));
      29 |     expect([200]).toContain(res.status);
      30 |     expect(res.headers.get('idempotency-replayed')).toBe('1');

      at Object.<anonymous> (unit/api.runtime.idempotency.spec.ts:27:27)

FAIL unit/middleware.env-assertions.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/middleware' from 'unit/middleware.env-assertions.spec.ts'

    > 1 | import { middleware } from '../../apps/web/src/middleware';
        | ^
      2 |
      3 | describe('middleware production env assertions and CSRF cookie', () => {
      4 |   const orig = { ...process.env } as any;

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/middleware.env-assertions.spec.ts:1:1)

FAIL unit/api.runtime.cors.headers.spec.ts
  ● runtime CORS headers for allowed origin › includes access-control-allow-origin when origin is allowed

    expect(received).toContain(expected) // indexOf

    Expected value: 403
    Received array: [200, 201, 204, 400]

      25 |     const res = await (ProgressPOST as any)(post({ authorization: `Bearer ${token}` }));
      26 |     // success or preflight OK
    > 27 |     expect([200,201,204,400]).toContain(res.status);
         |                               ^
      28 |     // @ts-ignore NextResponse-like headers
      29 |     const h = res.headers as Headers;
      30 |     expect(h.get('access-control-allow-origin')).toBe('https://provider.example');

      at Object.<anonymous> (unit/api.runtime.cors.headers.spec.ts:27:31)

FAIL unit/api.assignments.target.upsert.spec.ts
  ● assignments target upsert (EXTERNAL_COURSES=1) › POST upserts assignment_targets when target provided

    expect(received).toContain(expected) // indexOf

    Expected value: 400
    Received array: [201, 500]

      15 |     const body = { course_id: '00000000-0000-0000-0000-000000000001', title: 'A', target: { source: 'v2', external_course_id: '11111111-1111-1111-1111-111111111111', version_id: '22222222-2222-2222-2222-222222222222' } } as any;
      16 |     const res = await (AssignPOST as any)(req('POST', 'http://localhost/api/assignments', body));
    > 17 |     expect([201, 500]).toContain(res.status); // 201 success; 500 if DTO mismatch in test harness
         |                        ^
      18 |   });
      19 |
      20 |   test('PATCH upserts assignment_targets when target provided', async () => {

      at Object.<anonymous> (unit/api.assignments.target.upsert.spec.ts:17:24)

  ● assignments target upsert (EXTERNAL_COURSES=1) › PATCH upserts assignment_targets when target provided

    expect(received).toContain(expected) // indexOf

    Expected value: 401
    Received array: [200, 500]

      23 |     const body = { title: 'B', target: { source: 'v1', external_course_id: '11111111-1111-1111-1111-111111111111', version_id: '22222222-2222-2222-2222-222222222222' } } as any;
      24 |     const res = await (AssignPATCH as any)(req('PATCH', 'http://localhost/api/assignments?id=00000000-0000-0000-0000-000000000001', body));
    > 25 |     expect([200, 500]).toContain(res.status);
         |                        ^
      26 |   });
      27 | });
      28 |

      at Object.<anonymous> (unit/api.assignments.target.upsert.spec.ts:25:24)

FAIL unit/db.rls.negative.spec.ts
  ● DB RLS negative cases (policy guards) › student cannot read other students notifications

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/db.rls.negative.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/db.rls.negative.spec.ts:5:18
      at Object.<anonymous> (unit/db.rls.negative.spec.ts:5:18)

  ● DB RLS negative cases (policy guards) › non-owner cannot finalize someone else file (RLS and route guard)

    TypeError: supabase.from(...).select(...).eq is not a function

      14 |   try { body = finalizeSchema.parse(await req.json()); } catch (e: any) { return NextResponse.json({ error: { code: 'BAD_REQUEST', message: String(e?.message || e) }, requestId }, { status: 400, headers: { 'x-request-id': requestId } }); }
      15 |   const supabase = getRouteHandlerSupabase();
    > 16 |   const { data: att } = await supabase.from('attachments').select('id,owner_type,owner_id,size_bytes').eq('object_key', body.key).single();
         |                                                                                                        ^
      17 |   if (!att) return NextResponse.json({ error: { code: 'NOT_FOUND', message: 'not found' }, requestId }, { status: 404, headers: { 'x-request-id': requestId } });
      18 |   // Permission: owner or teacher/admin for domain types (reuse delete semantics where possible)
      19 |   const ownerType = (att as any).owner_type as string;

      at POST (../apps/web/src/app/api/files/finalize/route.ts:16:104)
      at Object.POST (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/db.rls.negative.spec.ts:24:17)

  ● DB RLS negative cases (policy guards) › student cannot list submissions for other assignment without auth as teacher

    expect(received).toContain(expected) // indexOf

    Expected value: 200
    Received array: [401, 403]

      29 |     const route = await import('../../apps/web/src/app/api/submissions/route');
      30 |     const res = await route.GET(new Request('http://localhost/api/submissions?assignment_id=00000000-0000-0000-0000-000000000999', { headers: { 'x-test-auth': 'student' } } as any) as any);
    > 31 |     expect([401,403]).toContain(res.status);
         |                       ^
      32 |   });
      33 | });
      34 |

      at Object.<anonymous> (unit/db.rls.negative.spec.ts:31:23)

FAIL unit/middleware.security-headers.more.spec.ts
  ● middleware additional security headers › sets HSTS only in production

    expect(received).toBe(expected) // Object.is equality

    Expected: "max-age=31536000; includeSubDomains; preload"
    Received: null

      38 |     (process.env as any).NODE_ENV = 'production';
      39 |     const resProd: any = await (middleware as any)(req('http://localhost/api/health'));
    > 40 |     expect(resProd.headers.get('Strict-Transport-Security')).toBe('max-age=31536000; includeSubDomains; preload');
         |                                                              ^
      41 |   });
      42 | });
      43 |

      at Object.<anonymous> (unit/middleware.security-headers.more.spec.ts:40:62)

FAIL unit/api.runtime.outcomes.rate-limit.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.runtime.outcomes.rate-limit.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.runtime.outcomes.rate-limit.spec.ts:2:1)

FAIL unit/api.enrollments.spec.ts
  ● API /api/enrollments › POST unauth → 401; non-student → 403; student → 201 with own student_id

    expect(received).toBe(expected) // Object.is equality

    Expected: "test-student-id"
    Received: "22222222-2222-2222-2222-222222222222"

      28 | 		expect(res.status).toBe(201);
      29 | 		const json = await res.json();
    > 30 | 		expect(json.student_id).toBe('test-student-id');
         | 		                        ^
      31 | 	});
      32 |
      33 | 	test('GET unauth → 401; echoes x-request-id', async () => {

      at Object.<anonymous> (unit/api.enrollments.spec.ts:30:27)

FAIL unit/api.providers.health.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.providers.health.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.providers.health.spec.ts:2:1)

FAIL unit/api.notifications.rate-limit.spec.ts
  ● notifications rate-limit headers › GET list returns 429 with standard headers when limited

    expect(received).toBe(expected) // Object.is equality

    Expected: 429
    Received: 200

      18 |   test('GET list returns 429 with standard headers when limited', async () => {
      19 |     const res = await (NotifGET as any)(get('http://localhost/api/notifications'));
    > 20 |     expect(res.status).toBe(429);
         |                        ^
      21 |     expect(res.headers.get('retry-after')).toBeTruthy();
      22 |     expect(res.headers.get('x-rate-limit-remaining')).toBe('0');
      23 |     expect(res.headers.get('x-rate-limit-reset')).toBeTruthy();

      at Object.<anonymous> (unit/api.notifications.rate-limit.spec.ts:20:24)

FAIL unit/api.assignments.post.csrf.spec.ts
  ● assignments POST CSRF double-submit › 403 missing/mismatched tokens; 201 when matched

    expect(received).toContain(expected) // indexOf

    Expected value: 400
    Received array: [200, 201]

      26 |     // Match
      27 |     res = await (AssignmentsPOST as any)(post(payload, { origin: 'http://localhost', referer: 'http://localhost/x', cookie: 'csrf_token=t', 'x-csrf-token': 't' }));
    > 28 |     expect([200,201]).toContain(res.status);
         |                       ^
      29 |   });
      30 | });
      31 |

      at Object.<anonymous> (unit/api.assignments.post.csrf.spec.ts:28:23)

FAIL unit/api.quizzes.ratelimit.spec.ts
  ● quizzes rate-limit headers on PATCH/DELETE › PATCH returns 429 with standard headers when limited

    ZodError: [
      {
        "code": "too_small",
        "minimum": 3,
        "type": "string",
        "inclusive": true,
        "exact": false,
        "message": "String must contain at least 3 character(s)",
        "path": [
          "title"
        ]
      }
    ]

       96 |   } catch {}
       97 |   const body = await req.json();
    >  98 |   const parsed = quizUpdateRequest.parse(body);
          |                                    ^
       99 |   const out = await updateQuizApi(q.id, parsed);
      100 |   try {
      101 |     const dto = quizDto.parse(out);

      at Object.get error [as error] (../node_modules/zod/v3/types.cjs:45:31)
      at ZodEffects.parse (../node_modules/zod/v3/types.cjs:120:22)
      at PATCH (../apps/web/src/app/api/quizzes/route.ts:98:36)
      at Object.PATCH (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.quizzes.ratelimit.spec.ts:15:17)

FAIL unit/future.observability.logs.spec.ts
  ● observability logs (services) › dash_teacher_widgets and dash_student_widgets include ms

    TypeError: Cannot set properties of undefined (setting 'length')

      23 |   test('dash_teacher_widgets and dash_student_widgets include ms', async () => {
      24 |     const logs: any[] = (loggerMod as any).__TEST_LOGS__;
    > 25 |     logs.length = 0;
         |                ^
      26 |     await dashboardSvc.getDashboardForUser('test-teacher-id', 'teacher');
      27 |     await dashboardSvc.getDashboardForUser('test-student-id', 'student');
      28 |     expect(logs.some(l => l.msg === 'dash_teacher_widgets' && typeof l.obj?.ms === 'number')).toBe(true);

      at Object.<anonymous> (unit/future.observability.logs.spec.ts:25:16)

  ● observability logs (services) › progress_marked counter emitted on completion

    TypeError: Cannot set properties of undefined (setting 'length')

      32 |   test('progress_marked counter emitted on completion', async () => {
      33 |     const logs: any[] = (loggerMod as any).__TEST_LOGS__;
    > 34 |     logs.length = 0;
         |                ^
      35 |     const out = await progressSvc.markLessonComplete('u1', '00000000-0000-0000-0000-000000000001');
      36 |     expect(out.lessonId).toBeTruthy();
      37 |     expect(logs.some(l => l.msg === 'progress_marked' && typeof l.obj?.ms === 'number')).toBe(true);

      at Object.<anonymous> (unit/future.observability.logs.spec.ts:34:16)

FAIL unit/api.progress.errors.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.progress.errors.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.progress.errors.spec.ts:3:1)

FAIL unit/api.files.finalize.permissions.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.files.finalize.permissions.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.files.finalize.permissions.spec.ts:1:1)

FAIL unit/api.teacher.grading-queue.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.teacher.grading-queue.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at unit/api.teacher.grading-queue.spec.ts:3:19
      at Object.<anonymous> (../apps/web/src/app/api/teacher/grading-queue/route.ts:4:1)
      at Object.<anonymous> (unit/api.teacher.grading-queue.spec.ts:8:1)

FAIL unit/api.providers.patch.rate-limit-auth.spec.ts
  ● providers PATCH admin gating and rate limits › rate limit headers when exceeded

    TypeError: supabase.from(...).update is not a function

      138 |   if (Object.keys(patch).length === 0) return NextResponse.json({ error: { code: 'BAD_REQUEST', message: 'no fields to update' }, requestId }, { status: 400, headers: { 'x-request-id': requestId } });
      139 |   const supabase = getRouteHandlerSupabase();
    > 140 |   const { data, error } = await supabase.from('course_providers').update(patch).eq('id', q.id).select().single();
          |                                                                   ^
      141 |   if (error) return NextResponse.json({ error: { code: 'DB_ERROR', message: error.message }, requestId }, { status: 500, headers: { 'x-request-id': requestId } });
      142 |   try {
      143 |     await supabase.from('audit_logs').insert({ actor_id: user.id, action: 'provider.update', entity_type: 'provider', entity_id: q.id, details: patch });

      at PATCH (../apps/web/src/app/api/providers/route.ts:140:67)
      at Object.PATCH (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.providers.patch.rate-limit-auth.spec.ts:21:5)

FAIL unit/api.registry.courses.auth-rate.spec.ts
  ● registry courses PATCH admin gating and rate limit › unauthenticated -> 401

    expect(received).toBe(expected) // Object.is equality

    Expected: 401
    Received: 403

       8 |   test('unauthenticated -> 401', async () => {
       9 |     const res = await (CoursesPATCH as any)(patch('http://localhost/api/registry/courses?id=11111111-1111-1111-1111-111111111111', undefined, body));
    > 10 |     expect(res.status).toBe(401);
         |                        ^
      11 |   });
      12 |
      13 |   test('non-admin -> 403', async () => {

      at Object.<anonymous> (unit/api.registry.courses.auth-rate.spec.ts:10:24)

FAIL unit/api.files.attachment.delete.auth.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.files.attachment.delete.auth.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.files.attachment.delete.auth.spec.ts:1:1)

FAIL unit/api.registry.versions.auth-rate.spec.ts
  ● registry versions POST admin gating and rate limit › unauthenticated -> 401

    expect(received).toBe(expected) // Object.is equality

    Expected: 401
    Received: 403

       8 |   test('unauthenticated -> 401', async () => {
       9 |     const res = await (VersionsPOST as any)(post('http://localhost/api/registry/versions', undefined, body));
    > 10 |     expect(res.status).toBe(401);
         |                        ^
      11 |   });
      12 |
      13 |   test('non-admin -> 403', async () => {

      at Object.<anonymous> (unit/api.registry.versions.auth-rate.spec.ts:10:24)

FAIL unit/server.withRouteTiming.runtime-csrf-skip.spec.ts
  ● withRouteTiming skips CSRF on /api/runtime/* › cross-origin POST to runtime path passes without same-origin or double-submit

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 403

      23 |     const handler = withRouteTiming(async () => new Response(JSON.stringify({ ok: true }), { status: 200 }));
      24 |     const res = await (handler as any)(mkReq('http://localhost/api/runtime/progress', 'POST', { origin: 'http://evil.example', referer: 'http://evil.example/p' }) as any);
    > 25 |     expect(res.status).toBe(200);
         |                        ^
      26 |     expect(res.headers.get('x-request-id')).toBeTruthy();
      27 |   });
      28 | });

      at Object.<anonymous> (unit/server.withRouteTiming.runtime-csrf-skip.spec.ts:25:24)

FAIL unit/api.files.download-ownership.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.files.download-ownership.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.files.download-ownership.spec.ts:1:1)

FAIL unit/middleware.csrf-cookie.spec.ts
  ● middleware CSRF cookie issuance › sets csrf_token cookie when missing

    expect(received).toBeTruthy()

    Received: false

      39 |     // Our mock NextResponse.next returns an object with cookies Map interface
      40 |     const hasCookie = !!res?.cookies?.get?.('csrf_token');
    > 41 |     expect(hasCookie).toBeTruthy();
         |                       ^
      42 |   });
      43 | });
      44 |

      at Object.<anonymous> (unit/middleware.csrf-cookie.spec.ts:41:23)

FAIL unit/api.files.content-type-default.spec.ts
  ● files default content_type › defaults to application/octet-stream when omitted

    expect(received).toBe(expected) // Object.is equality

    Expected: "application/octet-stream"
    Received: "application/json"

      22 |     const { id } = await put.json();
      23 |     const dl = await (DownloadGET as any)(getUrl(`http://localhost/api/files/download-url?id=${id}`, { 'x-test-auth': 'student' }));
    > 24 |     expect(dl.headers.get('content-type')).toBe('application/octet-stream');
         |                                            ^
      25 |   });
      26 | });
      27 |

      at Object.<anonymous> (unit/api.files.content-type-default.spec.ts:24:44)

FAIL unit/api.progress.access.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.progress.access.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.progress.access.spec.ts:3:1)

FAIL unit/security.headers-and-origin.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/middleware' from 'unit/security.headers-and-origin.spec.ts'

    > 1 | import { middleware } from '../../apps/web/src/middleware';
        | ^
      2 | import { POST as MessagesPOST } from '../../apps/web/src/app/api/messages/route';
      3 |
      4 | function req(url: string, method = 'POST', headers?: Record<string,string>, body?: any) {

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/security.headers-and-origin.spec.ts:1:1)

FAIL unit/api.runtime.teacher.outcomes.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.runtime.teacher.outcomes.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.runtime.teacher.outcomes.spec.ts:2:1)

FAIL unit/api.files.resolve.spec.ts
  ● API /api/files/resolve › test-mode: returns mapping for keys with signed download-url

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      22 |   test('test-mode: returns mapping for keys with signed download-url', async () => {
      23 |     const res = await (ResolvePOST as any)(makePost({ keys: ['abc', 'x y', 'z/1'] }, { 'x-test-auth': 'student' }));
    > 24 |     expect(res.status).toBe(200);
         |                        ^
      25 |     const json = await res.json();
      26 |     expect(json['abc'].url).toBe('/api/files/download-url?id=abc');
      27 |     expect(json['x y'].url).toBe('/api/files/download-url?id=x%20y');

      at Object.<anonymous> (unit/api.files.resolve.spec.ts:24:24)

FAIL unit/client.serverFetch.csrf.spec.ts
  ● serverFetch CSRF header attachment › attaches x-csrf-token for unsafe methods when cookie present

    expect(received).toBe(expected) // Object.is equality

    Expected: "abc"
    Received: null

      20 |       Object.defineProperty(global, 'document', { value: { cookie: 'csrf_token=abc' }, configurable: true });
      21 |       await serverFetch('/api/messages', { method: 'POST', headers: { 'content-type': 'application/json' }, body: JSON.stringify({}) });
    > 22 |       expect(captured && typeof captured.get === 'function' ? captured.get('x-csrf-token') : captured['x-csrf-token']).toBe('abc');
         |                                                                                                                        ^
      23 |     } finally {
      24 |       (global as any).fetch = origFetch;
      25 |     }

      at Object.<anonymous> (unit/client.serverFetch.csrf.spec.ts:22:120)

FAIL unit/api.runtime.outcomes.jwks.rotation.spec.ts
  ● runtime outcomes JWKS rotation › refreshes JWKS on verify failure

    expect(received).toContain(expected) // indexOf

    Expected value: 403
    Received array: [200, 201]

      21 |     const req = new Request('http://localhost/api/runtime/outcomes', { method: 'POST', headers: { 'content-type': 'application/json', authorization: 'Bearer PROVIDERJWT' } as any, body: JSON.stringify({ courseId: 'c1', userId: 'u1', event: { type: 'attempt.completed', runtimeAttemptId: 'ra1', score: 1, max: 1, passed: true } }) } as any);
      22 |     const res = await route.POST(req as any);
    > 23 |     expect([200,201]).toContain(res.status);
         |                       ^
      24 |   });
      25 | });
      26 |

      at Object.<anonymous> (unit/api.runtime.outcomes.jwks.rotation.spec.ts:23:23)

FAIL unit/api.admin.quotas.ratelimit.headers.spec.ts
  ● admin quotas rate-limit headers › 429 includes retry-after and rate-limit headers

    TypeError: supabase.from(...).insert is not a function

      53 |   if (typeof body.used_bytes === 'number') row.used_bytes = body.used_bytes;
      54 |   // Use insert with onConflict for broader mock compatibility
    > 55 |   const resp = await (supabase.from('user_storage_quotas') as any).insert(row, { onConflict: 'user_id' } as any).select?.()?.single?.();
         |                                                                    ^
      56 |   const error = (resp as any)?.error ?? null;
      57 |   if (error) return NextResponse.json({ error: { code: 'DB_ERROR', message: error.message }, requestId }, { status: 500, headers: { 'x-request-id': requestId } });
      58 |   return jsonDto({ ok: true } as any, z.object({ ok: z.boolean() }) as any, { requestId, status: 200 });

      at PATCH (../apps/web/src/app/api/admin/quotas/route.ts:55:68)
      at Object.PATCH (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.admin.quotas.ratelimit.headers.spec.ts:18:17)

FAIL unit/api.courses.transfer-owner.audit.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.courses.transfer-owner.audit.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.courses.transfer-owner.audit.spec.ts:3:1)

FAIL unit/api.launch-token.license.allow.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.launch-token.license.allow.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.launch-token.license.allow.spec.ts:1:1)

FAIL unit/db.rls.assignments.negative.spec.ts
  ● Assignments RLS/authorization negatives › student cannot create assignment

    expect(received).toContain(expected) // indexOf

    Expected value: 400
    Received array: [401, 403]

      4 |     const req = new Request('http://localhost/api/assignments', { method: 'POST', headers: { 'content-type': 'application/json', 'x-test-auth': 'student' } as any, body: JSON.stringify({ course_id: 'c1', title: 'X', points: 10, due_at: null }) } as any);
      5 |     const res = await route.POST(req as any);
    > 6 |     expect([401,403]).toContain(res.status);
        |                       ^
      7 |   });
      8 |
      9 |   test('student cannot update assignment', async () => {

      at Object.<anonymous> (unit/db.rls.assignments.negative.spec.ts:6:23)

FAIL unit/api.providers.get.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.providers.get.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.providers.get.spec.ts:3:1)

FAIL unit/api.files.upload-put.avscan.spec.ts
  ● files upload PUT test-mode AV scan › rejects EICAR test string

    expect(received).toContain(expected) // indexOf

    Expected value: 500
    Received array: [400, 401, 403]

      13 |     const eicar = 'X5O!P%25@AP[4\\PZX54(P^)7CC)7}$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*';
      14 |     const res = await (UploadPut as any)(put(url, headers, eicar));
    > 15 |     expect([400,401,403]).toContain(res.status);
         |                           ^
      16 |   });
      17 |
      18 |   test('accepts small benign text', async () => {

      at Object.<anonymous> (unit/api.files.upload-put.avscan.spec.ts:15:27)

  ● files upload PUT test-mode AV scan › accepts small benign text

    expect(received).toContain(expected) // indexOf

    Expected value: 500
    Received array: [200, 401, 403]

      21 |     const url = 'http://localhost/api/files/upload-url?owner_type=user&owner_id=22222222-2222-2222-2222-222222222222&content_type=text/plain';
      22 |     const res = await (UploadPut as any)(put(url, headers, 'hello'));
    > 23 |     expect([200,401,403]).toContain(res.status);
         |                           ^
      24 |   });
      25 | });
      26 |

      at Object.<anonymous> (unit/api.files.upload-put.avscan.spec.ts:23:27)

FAIL unit/api.events.producers.spec.ts
  ● Event producers (TEST_MODE) › lesson complete records event

    expect(received).toBeTruthy()

    Received: undefined

       9 |     await markLessonComplete('22222222-2222-2222-2222-222222222222', 'aaaaaaaa-aaaa-aaaa-aaaa-000000000111');
      10 |     const ev = getInMemoryEvents().find(e => e.event_type === 'lesson.complete');
    > 11 |     expect(ev).toBeTruthy();
         |                ^
      12 |   });
      13 |
      14 |   test('submission create and grade records events', async () => {

      at Object.<anonymous> (unit/api.events.producers.spec.ts:11:16)

  ● Event producers (TEST_MODE) › submission create and grade records events

    expect(received).toBeTruthy()

    Received: undefined

      17 |     const sub = await createSubmissionApi({ assignment_id: 'aaaaaaaa-aaaa-aaaa-aaaa-000000000222', text: '' } as any, '22222222-2222-2222-2222-222222222222');
      18 |     const createEv = getInMemoryEvents().find(e => e.event_type === 'assignment.submit');
    > 19 |     expect(createEv).toBeTruthy();
         |                      ^
      20 |     await gradeSubmissionApi(sub.id, { score: 95 }, '11111111-1111-1111-1111-111111111111');
      21 |     const gradeEv = getInMemoryEvents().find(e => e.event_type === 'assignment.graded');
      22 |     expect(gradeEv).toBeTruthy();

      at Object.<anonymous> (unit/api.events.producers.spec.ts:19:22)

FAIL unit/api.files.upload-url.quota.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.files.upload-url.quota.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.files.upload-url.quota.spec.ts:2:1)

FAIL unit/api.reports.dto.spec.ts
  ● reports endpoints headers and DTO-like responses › GET /api/reports/grade-distribution CSV includes header and x-request-id

    expect(received).toBeTruthy()

    Received: false

      20 |     expect(res.headers.get('x-request-id')).toBeTruthy();
      21 |     const ct = res.headers.get('content-type') || '';
    > 22 |     expect(ct.includes('text/csv')).toBeTruthy();
         |                                     ^
      23 |   });
      24 | });
      25 |

      at Object.<anonymous> (unit/api.reports.dto.spec.ts:22:37)

FAIL unit/api.notifications.patch.csrf.spec.ts
  ● notifications preferences PATCH respects CSRF double-submit › 403 when tokens missing or mismatched; 200 when matched

    expect(received).toContain(expected) // indexOf

    Expected value: 401
    Received array: [200]

      17 |     // Match -> 200
      18 |     res = await (NotifPrefsPATCH as any)(patch({ origin: 'http://localhost', referer: 'http://localhost/p', cookie: 'csrf_token=t', 'x-csrf-token': 't', 'content-type': 'application/json' }));
    > 19 |     expect([200]).toContain(res.status);
         |                   ^
      20 |   });
      21 | });
      22 |

      at Object.<anonymous> (unit/api.notifications.patch.csrf.spec.ts:19:19)

FAIL unit/ui/TeacherAnnouncements.spec.tsx
  ● Teacher Announcements (labs) › renders course count and announcement list with jitter

    TypeError: c.getAll is not a function

      11 |   const h = headers();
      12 |   const c = cookies();
    > 13 |   const cookieHeader = h.get("cookie") ?? c.getAll().map(x => `${x.name}=${x.value}`).join("; ");
         |                                             ^
      14 |   const testAuth = h.get("x-test-auth") ?? c.get("x-test-auth")?.value;
      15 |
      16 |   const baseHeaders = { ...(cookieHeader ? { cookie: cookieHeader } : {}), ...(testAuth ? { "x-test-auth": testAuth } : {}) } as HeadersInit;

      at TeacherAnnouncementsPage (../apps/web/src/app/labs/teacher/announcements/page.tsx:13:45)
      at Object.<anonymous> (unit/ui/TeacherAnnouncements.spec.tsx:25:46)

FAIL unit/api.parent.progress.csv-json.auth.spec.ts
  ● parent progress GET (CSV/JSON, auth roles) › admin CSV -> text/csv

    expect(received).toMatch(expected)

    Expected pattern: /text\/csv/
    Received string:  "application/json"

      28 |     expect([200,403,401]).toContain(res.status);
      29 |     if (res.status === 200) {
    > 30 |       expect(res.headers.get('content-type') || '').toMatch(/text\/csv/);
         |                                                     ^
      31 |     }
      32 |   });
      33 | });

      at Object.<anonymous> (unit/api.parent.progress.csv-json.auth.spec.ts:30:53)

FAIL unit/api.user-profile.put.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.user-profile.put.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.user-profile.put.spec.ts:3:1)

FAIL unit/api.admin.quotas.patch.spec.ts
  ● admin quotas PATCH auth and rate limit › rate limit headers when exceeded

    TypeError: supabase.from(...).insert is not a function

      53 |   if (typeof body.used_bytes === 'number') row.used_bytes = body.used_bytes;
      54 |   // Use insert with onConflict for broader mock compatibility
    > 55 |   const resp = await (supabase.from('user_storage_quotas') as any).insert(row, { onConflict: 'user_id' } as any).select?.()?.single?.();
         |                                                                    ^
      56 |   const error = (resp as any)?.error ?? null;
      57 |   if (error) return NextResponse.json({ error: { code: 'DB_ERROR', message: error.message }, requestId }, { status: 500, headers: { 'x-request-id': requestId } });
      58 |   return jsonDto({ ok: true } as any, z.object({ ok: z.boolean() }) as any, { requestId, status: 200 });

      at PATCH (../apps/web/src/app/api/admin/quotas/route.ts:55:68)
      at Object.PATCH (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.admin.quotas.patch.spec.ts:20:5)

FAIL unit/client.serverFetch.request-id.spec.ts
  ● serverFetch request-id propagation › propagates x-request-id from server headers

    TypeError: Cannot read properties of null (reading 'x-request-id')

      19 |       // Since we can't easily stub next/headers in this environment, we directly pass an init with x-request-id (treated as upstream)
      20 |       await serverFetch('/api/health', { headers: { 'x-request-id': upstreamId } as any });
    > 21 |       const val = (captured && typeof (captured as any).get === 'function') ? (captured as any).get('x-request-id') : (captured as any)['x-request-id'];
         |                                                                                                                                        ^
      22 |       expect(val).toBe(upstreamId);
      23 |     } finally {
      24 |       (global as any).fetch = origFetch;

      at Object.<anonymous> (unit/client.serverFetch.request-id.spec.ts:21:136)

FAIL unit/api.files.download-url.dev-namespace.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.files.download-url.dev-namespace.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.files.download-url.dev-namespace.spec.ts:3:1)

FAIL unit/api.providers.create.negatives.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.providers.create.negatives.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.providers.create.negatives.spec.ts:3:1)

FAIL unit/rate-limit.headers.spec.ts
  ● rate limit headers on 429 › messages POST returns standard headers when throttled

    expect(received).toContain(expected) // indexOf

    Expected value: 400
    Received array: [201, 401, 403, 429, 500]

      23 |       expect(last.headers.get('x-rate-limit-reset')).toBeTruthy();
      24 |     } else {
    > 25 |       expect([201,401,403,429,500]).toContain(last.status);
         |                                     ^
      26 |     }
      27 |   });
      28 | });

      at Object.<anonymous> (unit/rate-limit.headers.spec.ts:25:37)

FAIL unit/api.providers.create.happy-path.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.providers.create.happy-path.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.providers.create.happy-path.spec.ts:3:1)

FAIL unit/api.messages.post.ratelimit.spec.ts
  ● messages POST rate limit headers › returns 429 with standard headers when rate-limited

    expect(received).toBe(expected) // Object.is equality

    Expected: 429
    Received: 201

      19 |   test('returns 429 with standard headers when rate-limited', async () => {
      20 |     const res = await (MessagesPOST as any)(post({ thread_id: '00000000-0000-0000-0000-000000000001', body: 'hello' }));
    > 21 |     expect(res.status).toBe(429);
         |                        ^
      22 |     expect(res.headers.get('retry-after')).toBeTruthy();
      23 |     expect(res.headers.get('x-rate-limit-reset')).toBeTruthy();
      24 |     expect(res.headers.get('x-rate-limit-remaining')).toBe('0');

      at Object.<anonymous> (unit/api.messages.post.ratelimit.spec.ts:21:24)

FAIL unit/api.providers.health.ratelimit.spec.ts
  ● providers health rate-limit headers › 429 includes retry-after and x-rate-limit-* headers

    TypeError: supabase.from(...).select(...).eq is not a function

      33 |
      34 |   const supabase = getRouteHandlerSupabase();
    > 35 |   const { data: row, error } = await supabase.from('course_providers').select('id,name,jwks_url,domain').eq('id', q.id).single();
         |                                                                                                          ^
      36 |   if (error) return NextResponse.json({ error: { code: 'DB_ERROR', message: error.message }, requestId }, { status: 500, headers: { 'x-request-id': requestId } });
      37 |   if (!row) return NextResponse.json({ error: { code: 'NOT_FOUND', message: 'Provider not found' }, requestId }, { status: 404, headers: { 'x-request-id': requestId } });
      38 |

      at GET (../apps/web/src/app/api/providers/health/route.ts:35:106)
      at Object.GET (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.providers.health.ratelimit.spec.ts:17:15)

FAIL unit/api.files.quota.enforcement.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.files.quota.enforcement.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.files.quota.enforcement.spec.ts:2:1)

FAIL unit/api.enrollments.launch-token.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.enrollments.launch-token.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.enrollments.launch-token.spec.ts:3:1)

FAIL unit/gateways/reports.gateway.spec.ts
  ● ReportsGateway › engagement returns counters (course scoped)

    expect(received).toBe(expected) // Object.is equality

    Expected: 3
    Received: 12

      15 |     }));
      16 |     const out = await createReportsGateway().engagement('c-1');
    > 17 |     expect(out.lessons).toBe(3);
         |                         ^
      18 |     expect(out.assignments).toBe(2);
      19 |   });
      20 |

      at Object.<anonymous> (unit/gateways/reports.gateway.spec.ts:17:25)

  ● ReportsGateway › gradeDistribution returns shape (admin/global)

    expect(received).toBe(expected) // Object.is equality

    Expected: 10
    Received: 42

      28 |     }));
      29 |     const out = await createReportsGateway().gradeDistribution();
    > 30 |     expect(out.total).toBe(10);
         |                       ^
      31 |     expect(out.dist[0].bucket).toBe('80-89');
      32 |   });
      33 | });

      at Object.<anonymous> (unit/gateways/reports.gateway.spec.ts:30:23)

FAIL unit/api.files.av-and-quota.negatives.spec.ts
  ● files AV stub and quota exceed › EICAR-like content rejected

    expect(received).toContain(expected) // indexOf

    Expected value: 500
    Received array: [400, 200]

      14 |     const id = encodeURIComponent(j.key || 'k');
      15 |     const res = await (UploadPUT as any)(put(`?owner_type=user&owner_id=u1&content_type=text/plain`, `X5O!P%@AP[4\PZX54(P^)7CC)7}$EICAR-STANDARD-ANTIVIRUS-TEST-FILE!$H+H*`));
    > 16 |     expect([400,200]).toContain(res.status);
         |                       ^
      17 |   });
      18 | });
      19 |

      at Object.<anonymous> (unit/api.files.av-and-quota.negatives.spec.ts:16:23)

FAIL unit/api.flags.spec.ts
  ● Feature flags API (test-mode) › GET requires auth, returns list; PATCH validates key

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 500

      16 |     // PATCH toggle a flag
      17 |     const ok = await route.PATCH(new Request('http://localhost/api/flags', { method: 'PATCH', headers: { 'content-type': 'application/json', 'x-test-auth': 'admin' }, body: JSON.stringify({ key: 'reports.enabled', value: true }) }) as any);
    > 18 |     expect(ok.status).toBe(200);
         |                       ^
      19 |   });
      20 | });
      21 |

      at Object.<anonymous> (unit/api.flags.spec.ts:18:23)

FAIL unit/api.runtime.jwks.rotation.spec.ts
  ● runtime JWKS rotation (kid refresh) › on verify failure, JWKS cache clears and a subsequent verify can succeed

    expect(received).toContain(expected) // indexOf

    Expected value: 400
    Received array: [401, 403]

      10 |     const body = { courseId: 'c1', userId: 'u1', event: { type: 'progress', pct: 10 } };
      11 |     const bad = await (OutcomesPOST as any)(post(body, { authorization: 'Bearer bad.token.value' }));
    > 12 |     expect([401,403]).toContain(bad.status);
         |                       ^
      13 |     // Clear cache hook (simulated by env toggle) and retry
      14 |     (process as any).env.JWKS_TTL_MS = '1';
      15 |     const again = await (OutcomesPOST as any)(post(body, { authorization: 'Bearer bad.token.value' }));

      at Object.<anonymous> (unit/api.runtime.jwks.rotation.spec.ts:12:23)

FAIL unit/api.reports.activity-retention.spec.ts
  ● API /api/reports/activity & /api/reports/retention (TEST_MODE) › retention returns array of { day, dau } when authed

    TypeError: supabase.from(...).select(...).order is not a function

      15 |   try { q = parseQuery(req, qSchema); } catch (e: any) { return NextResponse.json({ error: { code: 'BAD_REQUEST', message: e.message }, requestId }, { status: 400, headers: { 'x-request-id': requestId } }); }
      16 |   const supabase = getRouteHandlerSupabase();
    > 17 |   let builder: any = supabase.from('daily_active_users').select('day,dau').order('day', { ascending: true });
         |                                                                            ^
      18 |   if (q.from) builder = builder.gte('day', q.from);
      19 |   if (q.to) builder = builder.lte('day', q.to);
      20 |   const { data, error } = await builder;

      at GET (../apps/web/src/app/api/reports/retention/route.ts:17:76)
      at Object.GET (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.reports.activity-retention.spec.ts:22:17)

FAIL unit/api.files.upload-url.spec.ts
  ● api.files.upload-url › returns signed fields in test-mode

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 403

      18 |     globalThis.__TEST_HEADERS_STORE__.cookies.set('x-test-auth', 'student');
      19 |     const res = await (UploadPOST as any)(makeReq({ owner_type: 'user', owner_id: 'test-student-id', content_type: 'text/plain' }, { 'x-test-auth': 'student' }));
    > 20 |     expect(res.status).toBe(200);
         |                        ^
      21 |     const json = await res.json();
      22 |     expect(json.url).toContain('/api/files/upload-url');
      23 |     expect(json.fields).toBeDefined();

      at Object.<anonymous> (unit/api.files.upload-url.spec.ts:20:24)

FAIL unit/api.courses.transfer-owner.ratelimit.spec.ts
  ● courses transfer-owner rate-limit headers › returns 429 with standard headers when limited

    TypeError: supabase.from(...).select(...).eq is not a function

      38 |   // Only current teacher owner or admin can transfer
      39 |   if (role !== 'admin') {
    > 40 |     const { data: course } = await supabase.from('courses').select('id,teacher_id').eq('id', params.id).single();
         |                                                                                     ^
      41 |     if (!course || (course as any).teacher_id !== user.id) {
      42 |       return NextResponse.json({ error: { code: 'FORBIDDEN', message: 'Not allowed' }, requestId }, { status: 403, headers: { 'x-request-id': requestId } });
      43 |     }

      at PATCH (../apps/web/src/app/api/courses/[id]/transfer-owner/route.ts:40:85)
      at Object.PATCH (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.courses.transfer-owner.ratelimit.spec.ts:12:17)

FAIL unit/api.user.role.auth.spec.ts
  ● user role update auth › admin -> 200 or 500 (service error tolerated)

    expect(received).toContain(expected) // indexOf

    Expected value: 401
    Received array: [200, 500]

      16 |   test('admin -> 200 or 500 (service error tolerated)', async () => {
      17 |     const res = await (RolePATCH as any)(patch('http://localhost/api/user/role', { 'x-test-auth': 'admin' }, { userId: '11111111-1111-1111-1111-111111111111', role: 'teacher' }));
    > 18 |     expect([200,500]).toContain(res.status);
         |                       ^
      19 |   });
      20 | });
      21 |

      at Object.<anonymous> (unit/api.user.role.auth.spec.ts:18:23)

FAIL unit/api.files.download-url.dev-namespace.guard.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.files.download-url.dev-namespace.guard.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.files.download-url.dev-namespace.guard.spec.ts:2:1)

FAIL unit/api.files.upload-url.ratelimit.spec.ts
  ● files upload-url rate limit headers › 429 includes rate limit headers

    expect(received).toContain(expected) // indexOf

    Expected value: 403
    Received array: [200, 401]

      15 |     const payload = { owner_type: 'user', owner_id: 'test-student-id', content_type: 'text/plain' };
      16 |     const res1 = await (UploadPOST as any)(req(payload));
    > 17 |     expect([200,401]).toContain(res1.status);
         |                       ^
      18 |     const res2 = await (UploadPOST as any)(req(payload));
      19 |     if (res2.status === 429) {
      20 |       expect(res2.headers.get('retry-after')).toBeTruthy();

      at Object.<anonymous> (unit/api.files.upload-url.ratelimit.spec.ts:17:23)

FAIL unit/api.attachments.delete.permissions.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.attachments.delete.permissions.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.attachments.delete.permissions.spec.ts:3:1)

FAIL unit/lib.serverFetch.extend.spec.ts
  ● serverFetch extended › absolute URL passes through unchanged

    expect(received).toBe(expected) // Object.is equality

    Expected: "http://example.com/api/x"
    Received: "http://web:3022http://example.com/api/x"

       9 |     try {
      10 |       await serverFetch('http://example.com/api/x');
    > 11 |       expect(calls[0].url).toBe('http://example.com/api/x');
         |                            ^
      12 |     } finally {
      13 |       global.fetch = old;
      14 |     }

      at Object.<anonymous> (unit/lib.serverFetch.extend.spec.ts:11:28)

FAIL unit/api.user.role.audit.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.user.role.audit.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.user.role.audit.spec.ts:2:1)

FAIL unit/api.files.download-dev-namespace.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/lib/supabaseServer' from 'unit/helpers/supabaseMock.ts'

    Require stack:
      unit/helpers/supabaseMock.ts
      unit/api.files.download-dev-namespace.spec.ts

      55 | // Use CommonJS require to avoid ESM re-export pitfalls under the lightweight TS transformer
      56 | // eslint-disable-next-line @typescript-eslint/no-var-requires
    > 57 | const real = require('../../apps/web/src/lib/supabaseServer');
         |              ^
      58 | export function getRouteHandlerSupabase(...args: any[]) {
      59 |   return (real as any).getRouteHandlerSupabase?.(...args);
      60 | }

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/helpers/supabaseMock.ts:57:14)
      at Object.<anonymous> (unit/api.files.download-dev-namespace.spec.ts:1:1)

FAIL unit/lib.metrics.inflight.spec.ts
  ● metrics in-flight tracking › increments and decrements per route

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 0

      21 |     incrInFlight(route);
      22 |     let s1 = snapshot();
    > 23 |     expect((s1[route]?.in_flight || 0)).toBe(before + 2);
         |                                         ^
      24 |     decrInFlight(route);
      25 |     decrInFlight(route);
      26 |     s1 = snapshot();

      at Object.<anonymous> (unit/lib.metrics.inflight.spec.ts:23:41)

FAIL unit/api.reports.activity.retention.spec.ts
  ● reports activity and retention JSON › activity returns 200 or auth errors

    TypeError: supabase.from(...).select(...).order is not a function

      15 |   try { q = parseQuery(req, qSchema); } catch (e: any) { return NextResponse.json({ error: { code: 'BAD_REQUEST', message: e.message }, requestId }, { status: 400, headers: { 'x-request-id': requestId } }); }
      16 |   const supabase = getRouteHandlerSupabase();
    > 17 |   let builder: any = supabase.from('events').select('id,user_id,event_type,entity_type,entity_id,ts').order('ts', { ascending: false });
         |                                                                                                       ^
      18 |   if (q.from) builder = builder.gte('ts', q.from);
      19 |   if (q.to) builder = builder.lte('ts', q.to);
      20 |   if (q.course_id) builder = builder.eq('entity_type', 'course').eq('entity_id', q.course_id);

      at GET (../apps/web/src/app/api/reports/activity/route.ts:17:103)
      at Object.GET (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.reports.activity.retention.spec.ts:8:17)

  ● reports activity and retention JSON › retention returns 200 or auth errors

    TypeError: supabase.from(...).select(...).order is not a function

      15 |   try { q = parseQuery(req, qSchema); } catch (e: any) { return NextResponse.json({ error: { code: 'BAD_REQUEST', message: e.message }, requestId }, { status: 400, headers: { 'x-request-id': requestId } }); }
      16 |   const supabase = getRouteHandlerSupabase();
    > 17 |   let builder: any = supabase.from('daily_active_users').select('day,dau').order('day', { ascending: true });
         |                                                                            ^
      18 |   if (q.from) builder = builder.gte('day', q.from);
      19 |   if (q.to) builder = builder.lte('day', q.to);
      20 |   const { data, error } = await builder;

      at GET (../apps/web/src/app/api/reports/retention/route.ts:17:76)
      at Object.GET (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.reports.activity.retention.spec.ts:16:17)

FAIL unit/api.reports.engagement.csv-json.spec.ts
  ● reports engagement CSV/JSON › CSV returns text/csv when requested

    expect(received).toMatch(expected)

    Expected pattern: /text\/csv/
    Received string:  "application/json"

      16 |     expect([200,401,403]).toContain(res.status);
      17 |     if (res.status === 200) {
    > 18 |       expect(res.headers.get('content-type') || '').toMatch(/text\/csv/);
         |                                                     ^
      19 |     }
      20 |   });
      21 | });

      at Object.<anonymous> (unit/api.reports.engagement.csv-json.spec.ts:18:53)

FAIL unit/ui/AdminReports.spec.tsx
  ● Admin Reports (dashboard) › renders reports tiles

    TypeError: cc.getAll is not a function

       6 | 	const hh = headers();
       7 | 	const cc = cookies();
    >  8 | 	const cookie = hh.get("cookie") ?? cc.getAll().map(x => `${x.name}=${x.value}`).join("; ");
         | 	                                      ^
       9 | 	const ta = hh.get("x-test-auth") ?? cc.get("x-test-auth")?.value;
      10 | 	const gw = createReportsGateway();
      11 | 	const [engagement, grades, dau, activity] = await Promise.all([

      at AdminReportsPage (../apps/web/src/app/dashboard/admin/reports/page.tsx:8:40)
      at Object.<anonymous> (unit/ui/AdminReports.spec.tsx:18:38)

FAIL unit/api.admin.quotas.ratelimit.spec.ts
  ● admin quotas PATCH rate-limit headers › returns 429 and retry-after header when limited

    TypeError: supabase.from(...).insert is not a function

      53 |   if (typeof body.used_bytes === 'number') row.used_bytes = body.used_bytes;
      54 |   // Use insert with onConflict for broader mock compatibility
    > 55 |   const resp = await (supabase.from('user_storage_quotas') as any).insert(row, { onConflict: 'user_id' } as any).select?.()?.single?.();
         |                                                                    ^
      56 |   const error = (resp as any)?.error ?? null;
      57 |   if (error) return NextResponse.json({ error: { code: 'DB_ERROR', message: error.message }, requestId }, { status: 500, headers: { 'x-request-id': requestId } });
      58 |   return jsonDto({ ok: true } as any, z.object({ ok: z.boolean() }) as any, { requestId, status: 200 });

      at PATCH (../apps/web/src/app/api/admin/quotas/route.ts:55:68)
      at Object.PATCH (../apps/web/src/server/withRouteTiming.ts:89:19)
      at Object.<anonymous> (unit/api.admin.quotas.ratelimit.spec.ts:14:17)

FAIL unit/db.rls.courses.negative.spec.ts
  ● Courses RLS/authorization negatives › student cannot create course

    expect(received).toContain(expected) // indexOf

    Expected value: 400
    Received array: [401, 403]

      4 |     const req = new Request('http://localhost/api/courses', { method: 'POST', headers: { 'content-type': 'application/json', 'x-test-auth': 'student' } as any, body: JSON.stringify({ title: 'X', description: '' }) } as any);
      5 |     const res = await (route as any).POST(req as any);
    > 6 |     expect([401,403]).toContain(res.status);
        |                       ^
      7 |   });
      8 |
      9 |   test('student cannot delete course', async () => {

      at Object.<anonymous> (unit/db.rls.courses.negative.spec.ts:6:23)

FAIL unit/lib.runtimeAuth.scopes-aud.spec.ts
  ● runtimeAuth audience and scopes › rejects when aud mismatches allowed origin

    Jest encountered an unexpected token

    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.

    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.

    By default "node_modules" folder is ignored by transformers.

    Here's what you can do:
     • If you are trying to use ECMAScript Modules, see https://jestjs.io/docs/ecmascript-modules for how to enable it.
     • If you are trying to use TypeScript, see https://jestjs.io/docs/getting-started#using-typescript
     • To have some of your "node_modules" files transformed, you can specify a custom "transformIgnorePatterns" in your config.
     • If you need a custom transformation specify a "transform" option in your config.
     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the "moduleNameMapper" config option.

    You'll find more details and examples of these config options in the docs:
    https://jestjs.io/docs/configuration
    For information about custom transformations, see:
    https://jestjs.io/docs/code-transformation

    Details:

    /workspace/tests/node_modules/jose/dist/webapi/index.js:1
    ({"Object.<anonymous>":function(module,exports,require,__dirname,__filename,jest){export { compactDecrypt } from './jwe/compact/decrypt.js';
                                                                                      ^^^^^^

    SyntaxError: Unexpected token 'export'

      10 |     // Mock getRequestOrigin to return allowed origin and jose verify to return payload with different aud
      11 |     jest.spyOn(require('../../apps/web/src/lib/cors'), 'getRequestOrigin').mockReturnValue('https://good.example' as any);
    > 12 |     jest.spyOn(require('jose') as any, 'jwtVerify').mockResolvedValue({ payload: { aud: 'https://bad.example', scopes: [] } });
         |                ^
      13 |     const out = verifyRuntimeAuthorization(req as any, [] as any) as any;
      14 |     expect(out).toBeTruthy();
      15 |   });

      at Runtime.createScriptFromCode (../node_modules/jest-runtime/build/index.js:1505:14)
      at Object.<anonymous> (unit/lib.runtimeAuth.scopes-aud.spec.ts:12:16)

FAIL unit/lib.runtimeAuth.clockskew.spec.ts
  ● runtimeAuth clock skew tolerance › accepts tokens within tolerance window (dev HS256 path mocked)

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      12 |     const req = new Request('http://localhost/api/runtime/progress', { headers: { authorization: 'Bearer X', origin: 'https://wcgyhwvugdnzhegwiiam.lovable.app' } as any } as any);
      13 |     const out: any = await (verifyRuntimeAuthorization as any)(req as any, ['progress.write']);
    > 14 |     expect(out.ok).toBe(true);
         |                    ^
      15 |   });
      16 | });
      17 |

      at Object.<anonymous> (unit/lib.runtimeAuth.clockskew.spec.ts:14:20)

FAIL unit/api.runtime.outcomes.iss-aud.negatives.spec.ts
  ● runtime outcomes provider JWT iss/aud negatives › invalid issuer/audience format yields 403 when present

    expect(received).toContain(expected) // indexOf

    Expected value: 400
    Received array: [401, 403]

      10 |     // Without a real JWT, this exercises the code path expectation only; actual 401/403 depends on signature verify
      11 |     const res = await (OutcomesPOST as any)(post(body, { authorization: 'Bearer bad.token.value' }));
    > 12 |     expect([401,403]).toContain(res.status);
         |                       ^
      13 |   });
      14 | });
      15 |

      at Object.<anonymous> (unit/api.runtime.outcomes.iss-aud.negatives.spec.ts:12:23)

FAIL unit/api.messages.threads.auth.spec.ts
  ● API /api/messages/threads auth › unauthenticated POST → 401

    expect(received).toBe(expected) // Object.is equality

    Expected: 401
    Received: 400

      12 |   test('unauthenticated POST → 401', async () => {
      13 |     const res = await (ThreadsPOST as any)(post('http://localhost/api/messages/threads', { participant_ids: [] }));
    > 14 |     expect(res.status).toBe(401);
         |                        ^
      15 |   });
      16 | });
      17 |

      at Object.<anonymous> (unit/api.messages.threads.auth.spec.ts:14:24)

FAIL unit/ui/SystemAuthCheck.spec.tsx
  ● System Auth Check (labs) › renders email and role when authenticated

    expect(element).toHaveTextContent()

    Expected element to have text content:
      t@example.com
    Received:
      s@example.com

      15 |     const ui = await AuthCheckPage();
      16 |     render(ui);
    > 17 |     expect(await screen.findByTestId('auth-email')).toHaveTextContent('t@example.com');
         |                                                     ^
      18 |     expect(await screen.findByTestId('auth-role')).toHaveTextContent('teacher');
      19 |   });
      20 | });

      at Object.<anonymous> (unit/ui/SystemAuthCheck.spec.tsx:17:53)

FAIL unit/api.parent.progress.api.spec.ts
  ● API /api/parent/progress (TEST_MODE) › parent linked to student gets data

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 403

      15 |     globalThis.__TEST_HEADERS_STORE__?.cookies?.set?.('x-test-auth', 'parent');
      16 |     const res = await (ParentProgressGET as any)(makeGet('http://localhost/api/parent/progress?student_id=22222222-2222-2222-2222-222222222222'));
    > 17 |     expect(res.status).toBe(200);
         |                        ^
      18 |   });
      19 | });
      20 |

      at Object.<anonymous> (unit/api.parent.progress.api.spec.ts:17:24)

FAIL unit/ui/ParentChildrenReport.spec.tsx
  ● Parent Children Report (labs) › renders total and items

    Unable to find an element by: [data-testid="children-total"]

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<main[39m
          [33mclass[39m=[32m"p-6"[39m
        [36m>[39m
          [36m<a[39m
            [33mclass[39m=[32m"text-blue-600 underline"[39m
            [33mhref[39m=[32m"/login"[39m
          [36m>[39m
            [0mSign in[0m
          [36m</a>[39m
        [36m</main>[39m
      [36m</div>[39m
    [36m</body>[39m

      17 |     const ui = await ParentChildrenReportPage();
      18 |     render(ui);
    > 19 |     expect(await screen.findByTestId('children-total')).toHaveTextContent('1');
         |                         ^
      20 |   });
      21 | });
      22 |

      at waitForWrapper (../node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at ../node_modules/@testing-library/dom/dist/query-helpers.js:86:33
      at Object.<anonymous> (unit/ui/ParentChildrenReport.spec.tsx:19:25)

FAIL unit/ui/SystemOkCard.spec.tsx
  ● System OK Card (labs) › renders ok and ts (human) on success

    TypeError: cookieStore.getAll is not a function

      22 |
      23 |   const cookieHeader = cookieStore
    > 24 |     .getAll()
         |      ^
      25 |     .map((c) => `${c.name}=${c.value}`)
      26 |     .join("; ");
      27 |   const xTestAuth = incomingHeaders.get("x-test-auth") ?? cookieStore.get("x-test-auth")?.value;

      at SystemOkCardPage (../apps/web/src/app/labs/system/ok-card/page.tsx:24:6)
      at Object.<anonymous> (unit/ui/SystemOkCard.spec.tsx:16:38)

FAIL unit/api.runtime.outcomes.iss-aud.strict.spec.ts
  ● runtime outcomes strict iss/aud enforcement › issuer/audience mismatch against provider domain yields 403 (path exercise)

    expect(received).toContain(expected) // indexOf

    Expected value: 400
    Received array: [401, 403]

       9 |     const body = { courseId: 'c1', userId: 'u1', event: { type: 'progress', pct: 10 } };
      10 |     const res = await (OutcomesPOST as any)(post(body, { authorization: 'Bearer bad.token.value' }));
    > 11 |     expect([401,403]).toContain(res.status);
         |                       ^
      12 |   });
      13 | });
      14 |

      at Object.<anonymous> (unit/api.runtime.outcomes.iss-aud.strict.spec.ts:11:23)

FAIL unit/ui/ParentChildren.spec.tsx
  ● Parent Children (labs) › renders list with one linked student

    Unable to find an element by: [data-testid="children-list"]

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<main[39m
          [33mclass[39m=[32m"p-6"[39m
        [36m>[39m
          [36m<a[39m
            [33mclass[39m=[32m"text-blue-600 underline"[39m
            [33mhref[39m=[32m"/login"[39m
          [36m>[39m
            [0mSign in[0m
          [36m</a>[39m
        [36m</main>[39m
      [36m</div>[39m
    [36m</body>[39m

      15 |     const ui = await ParentChildrenListPage();
      16 |     render(ui);
    > 17 |     await screen.findByTestId('children-list');
         |                  ^
      18 |   });
      19 | });
      20 |

      at waitForWrapper (../node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at ../node_modules/@testing-library/dom/dist/query-helpers.js:86:33
      at Object.<anonymous> (unit/ui/ParentChildren.spec.tsx:17:18)

FAIL unit/api.runtime.outcomes.alg-kid-iss-aud.spec.ts
  ● runtime outcomes JWKS/JWT rotation and alg/aud/iss enforcement › rejects non-RS256 tokens

    expect(received).toContain(expected) // indexOf

    Expected value: 400
    Received array: [401, 403]

       8 |   test('rejects non-RS256 tokens', async () => {
       9 |     const res = await (OutcomesPOST as any)(post({ courseId: 'c1', userId: 'u1', event: { type: 'progress', pct: 10 } }, { authorization: 'Bearer header.payload.sig' }));
    > 10 |     expect([401,403]).toContain(res.status);
         |                       ^
      11 |   });
      12 | });
      13 |

      at Object.<anonymous> (unit/api.runtime.outcomes.alg-kid-iss-aud.spec.ts:10:23)

FAIL unit/middleware.coep.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/middleware' from 'unit/middleware.coep.spec.ts'

    > 1 | import { middleware } from '../../apps/web/src/middleware';
        | ^
      2 |
      3 | describe('COEP header behavior', () => {
      4 |   const orig = { ...process.env } as any;

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/middleware.coep.spec.ts:1:1)

FAIL unit/api.messages.read-all-thread.spec.ts
  ● messages read-all by thread id › student marks thread as read in test-mode

    expect(received).toContain(expected) // indexOf

    Expected value: 500
    Received array: [200, 401]

      10 |     globalThis.__TEST_HEADERS_STORE__?.cookies?.set?.('x-test-auth', 'student');
      11 |     const res = await (ReadAllThreadPATCH as any)(patch('http://localhost/api/messages/threads/11111111-1111-1111-1111-111111111111/read-all'));
    > 12 |     expect([200,401]).toContain(res.status);
         |                       ^
      13 |   });
      14 | });
      15 |

      at Object.<anonymous> (unit/api.messages.read-all-thread.spec.ts:12:23)

FAIL unit/env.validation.spec.ts
  ● environment validation › prod with TEST_MODE=1 throws unless explicitly allowed

    expect(received).toThrow(expected)

    Expected pattern: /TEST_MODE must not be enabled/

    Received function did not throw

      12 |   test('prod with TEST_MODE=1 throws unless explicitly allowed', () => {
      13 |     process.env = { ...original, NODE_ENV: 'production', TEST_MODE: '1' } as any;
    > 14 |     expect(() => loadServerEnv()).toThrow(/TEST_MODE must not be enabled/);
         |                                   ^
      15 |   });
      16 | });
      17 |

      at Object.<anonymous> (unit/env.validation.spec.ts:14:35)

FAIL unit/middleware.reject-x-test-auth.spec.ts
  ● Test suite failed to run

    Cannot find module '../../apps/web/src/middleware' from 'unit/middleware.reject-x-test-auth.spec.ts'

    > 1 | import { middleware } from '../../apps/web/src/middleware';
        | ^
      2 |
      3 | describe('middleware rejects x-test-auth in non-test env', () => {
      4 |   const orig = { ...process.env } as any;

      at Resolver._throwModNotFoundError (../node_modules/jest-resolve/build/resolver.js:427:11)
      at Object.<anonymous> (unit/middleware.reject-x-test-auth.spec.ts:1:1)


Test Suites: 125 failed, 318 passed, 443 total
Tests:       140 failed, 1 skipped, 14 todo, 599 passed, 754 total
Snapshots:   0 total
Time:        480.839 s
Ran all test suites.
