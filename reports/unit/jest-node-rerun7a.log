PASS tests/unit/api.runtime.v2.spec.ts
{"level":30,"time":1755744790542,"pid":20,"hostname":"7b31c716ef90","requestId":"92c170f4-8ed8-4132-9744-f13e691f3c95","ms":2,"msg":"route_success"}
{"level":30,"time":1755744791030,"pid":20,"hostname":"7b31c716ef90","requestId":"019e8915-7027-41f2-a4fb-824a77729bbf","ms":0,"msg":"route_success"}
{"level":30,"time":1755744791034,"pid":20,"hostname":"7b31c716ef90","requestId":"68b2050e-ed4c-4cd5-98cb-139dedad697c","ms":3,"msg":"route_success"}
{"level":30,"time":1755744791035,"pid":20,"hostname":"7b31c716ef90","requestId":"36fddf6d-872d-4310-9a14-d812f8942dcc","ms":0,"msg":"route_success"}
{"level":30,"time":1755744791038,"pid":20,"hostname":"7b31c716ef90","requestId":"3acd929f-650b-4c0b-8c37-4565f17bfa54","ms":2,"msg":"route_success"}
{"level":30,"time":1755744791039,"pid":20,"hostname":"7b31c716ef90","requestId":"accadc52-c130-4bc5-b518-a89264c426b4","ms":1,"msg":"route_success"}
{"level":30,"time":1755744791040,"pid":20,"hostname":"7b31c716ef90","requestId":"8cd37d96-19c5-448c-a2e6-a68e8a733bb5","ms":0,"msg":"route_success"}
{"level":30,"time":1755744791040,"pid":20,"hostname":"7b31c716ef90","requestId":"ac449292-f6d0-4aa6-adab-c482b3dc820a","ms":0,"msg":"route_success"}
{"level":30,"time":1755744791041,"pid":20,"hostname":"7b31c716ef90","requestId":"e0358d17-6c87-4448-a6ff-e9b17af34559","ms":0,"msg":"route_success"}
PASS tests/unit/api.runtime.spec.ts
FAIL tests/unit/api.runtime.outcomes.jwks.spec.ts
  ● runtime outcomes JWKS verification › missing provider token -> 401 when jwks_url present

    expect(received).toBe(expected) // Object.is equality

    Expected: 401
    Received: 400

      18 |     jest.spyOn(supa as any, 'getRouteHandlerSupabase').mockReturnValue(mock);
      19 |     const res = await (OutcomesPOST as any)(post('http://localhost/api/runtime/outcomes', { courseId: 'c1', userId: 'u1', event: { type: 'progress', pct: 10 } }));
    > 20 |     expect(res.status).toBe(401);
         |                        ^
      21 |   });
      22 |
      23 |   test('invalid provider token -> 403', async () => {

      at Object.<anonymous> (unit/api.runtime.outcomes.jwks.spec.ts:20:24)

  ● runtime outcomes JWKS verification › invalid provider token -> 403

    Property `import` does not exist in the provided object

      27 |     } as any);
      28 |     jest.spyOn(supa as any, 'getRouteHandlerSupabase').mockReturnValue(mock);
    > 29 |     jest.spyOn<any, any>(global as any, 'import').mockImplementation((path: string) => {
         |          ^
      30 |       if (path.includes('jwksCache')) return Promise.resolve({ verifyJwtWithJwks: async () => { throw new Error('bad') } });
      31 |       return (jest.requireActual as any)(path);
      32 |     });

      at ModuleMocker.spyOn (../node_modules/jest-mock/build/index.js:731:13)
      at Object.<anonymous> (unit/api.runtime.outcomes.jwks.spec.ts:29:10)

  ● runtime outcomes JWKS verification › valid provider token (mocked) -> 201

    Property `import` does not exist in the provided object

      42 |     } as any);
      43 |     jest.spyOn(supa as any, 'getRouteHandlerSupabase').mockReturnValue(mock);
    > 44 |     jest.spyOn<any, any>(global as any, 'import').mockImplementation((path: string) => {
         |          ^
      45 |       if (path.includes('jwksCache')) return Promise.resolve({ verifyJwtWithJwks: async () => ({ courseId: 'c1' }) });
      46 |       return (jest.requireActual as any)(path);
      47 |     });

      at ModuleMocker.spyOn (../node_modules/jest-mock/build/index.js:731:13)
      at Object.<anonymous> (unit/api.runtime.outcomes.jwks.spec.ts:44:10)

{"level":30,"time":1755744791495,"pid":20,"hostname":"7b31c716ef90","requestId":"72d2dbca-4173-48de-b9bc-35cc96d378ba","ms":1,"msg":"route_success"}
FAIL tests/unit/api.files.download-url.permissions.spec.ts
  ● files download-url ownership checks › owner can download; non-owner teacher of course can download submission files; others 403

    Property `getCurrentUserInRoute` does not exist in the provided object

      11 |   test('owner can download; non-owner teacher of course can download submission files; others 403', async () => {
      12 |     // Owner case
    > 13 |     jest.spyOn(supa as any, 'getCurrentUserInRoute').mockResolvedValue({ id: 'u1' } as any);
         |          ^
      14 |     const mock = (supa as any).makeSupabaseMock({
      15 |       attachments: ({ object_key }: any) => supa.supabaseOk({ bucket: 'b', object_key, owner_id: 'u1', owner_type: 'user', filename: 'f.txt', content_type: 'text/plain' }),
      16 |     } as any);

      at ModuleMocker.spyOn (../node_modules/jest-mock/build/index.js:731:13)
      at Object.<anonymous> (unit/api.files.download-url.permissions.spec.ts:13:10)

Test Suites: 2 failed, 2 passed, 4 total
Tests:       4 failed, 4 passed, 8 total
Snapshots:   0 total
Time:        5.262 s
Ran all test suites related to files matching /tests\/unit\/api.runtime.v2.spec.ts|tests\/unit\/api.runtime.spec.ts|tests\/unit\/api.runtime.outcomes.jwks.spec.ts|tests\/unit\/api.files.download-url.permissions.spec.ts/i.
