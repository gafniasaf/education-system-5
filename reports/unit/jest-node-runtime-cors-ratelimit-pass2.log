FAIL tests/unit/api.runtime.outcomes.rate-limit.spec.ts
  ● runtime outcomes rate limiting (list + export) › list for course: third request -> 429 with headers

    expect(received).toContain(expected) // indexOf

    Expected value: 403
    Received array: [200, 500]

      17 |     const h = { 'x-test-auth': 'teacher' } as Record<string, string>;
      18 |     const r1 = await (OutcomesListGET as any)(get(base, h));
    > 19 |     expect([200,500]).toContain(r1.status);
         |                       ^
      20 |     const r2 = await (OutcomesListGET as any)(get(base, h));
      21 |     expect([200,500]).toContain(r2.status);
      22 |     const r3 = await (OutcomesListGET as any)(get(base, h));

      at Object.<anonymous> (unit/api.runtime.outcomes.rate-limit.spec.ts:19:23)

  ● runtime outcomes rate limiting (list + export) › export for course: third request -> 429 with headers

    expect(received).toContain(expected) // indexOf

    Expected value: 403
    Received array: [200, 500]

      35 |     const h = { 'x-test-auth': 'teacher' } as Record<string, string>;
      36 |     const r1 = await (OutcomesExportGET as any)(get(url, h));
    > 37 |     expect([200,500]).toContain(r1.status);
         |                       ^
      38 |     const r2 = await (OutcomesExportGET as any)(get(url, h));
      39 |     expect([200,500]).toContain(r2.status);
      40 |     const r3 = await (OutcomesExportGET as any)(get(url, h));

      at Object.<anonymous> (unit/api.runtime.outcomes.rate-limit.spec.ts:37:23)

  ● runtime outcomes rate-limit headers › 429 includes retry-after and rate-limit headers

    expect(received).toBe(expected) // Object.is equality

    Expected: 429
    Received: 403

      75 |     });
      76 |     const res = await (OutcomesPOST as any)(post('http://localhost/api/runtime/outcomes', { courseId: 'c1', userId: 'u1', event: { type: 'progress', pct: 10 } }, { authorization: 'Bearer good' }));
    > 77 |     expect(res.status).toBe(429);
         |                        ^
      78 |     expect(res.headers.get('retry-after')).toBeTruthy();
      79 |     expect(res.headers.get('x-rate-limit-remaining')).toBe('0');
      80 |     expect(res.headers.get('x-rate-limit-reset')).toBeTruthy();

      at Object.<anonymous> (unit/api.runtime.outcomes.rate-limit.spec.ts:77:24)

{"level":30,"time":1755759958765,"pid":106,"hostname":"f15ee47b3290","requestId":"489c8f94-806d-4084-a1a1-31685b1761b5","ms":10,"msg":"route_success"}
{"level":30,"time":1755759958772,"pid":106,"hostname":"f15ee47b3290","requestId":"fc4eb541-d0d1-45aa-aae7-1ca6a808d378","ms":0,"msg":"route_success"}
{"level":30,"time":1755759958847,"pid":106,"hostname":"f15ee47b3290","requestId":"71ad417d-adaf-41bc-8600-7fb167cc671e","ms":72,"msg":"route_success"}
{"level":30,"time":1755759959670,"pid":106,"hostname":"f15ee47b3290","requestId":"0cf0bbbb-b2f2-4e72-aa45-56e0793d37c4","ms":2,"msg":"route_success"}
{"level":30,"time":1755759959686,"pid":106,"hostname":"f15ee47b3290","requestId":"8182f09a-47ef-4343-bd6e-cf863e88bba4","ms":9,"msg":"route_success"}
{"level":30,"time":1755759959693,"pid":106,"hostname":"f15ee47b3290","requestId":"03f5bfcd-65d2-4dd0-bc7f-621004e0ccf1","ms":6,"msg":"route_success"}
FAIL tests/unit/api.runtime.outcomes.jwks.spec.ts
  ● runtime outcomes JWKS verification › missing provider token -> 401 when jwks_url present

    expect(received).toBe(expected) // Object.is equality

    Expected: 401
    Received: 400

      18 |     jest.spyOn(supa as any, 'getRouteHandlerSupabase').mockReturnValue(mock);
      19 |     const res = await (OutcomesPOST as any)(post('http://localhost/api/runtime/outcomes', { courseId: 'c1', userId: 'u1', event: { type: 'progress', pct: 10 } }));
    > 20 |     expect(res.status).toBe(401);
         |                        ^
      21 |   });
      22 |
      23 |   test('invalid provider token -> 403', async () => {

      at Object.<anonymous> (unit/api.runtime.outcomes.jwks.spec.ts:20:24)

  ● runtime outcomes JWKS verification › valid provider token (mocked) -> 201

    expect(received).toContain(expected) // indexOf

    Expected value: 403
    Received array: [200, 201]

      47 |     });
      48 |     const res = await (OutcomesPOST as any)(post('http://localhost/api/runtime/outcomes', { courseId: 'c1', userId: 'u1', event: { type: 'attempt.completed', score: 1, max: 1, passed: true } }, { authorization: 'Bearer good' }));
    > 49 |     expect([200,201]).toContain(res.status);
         |                       ^
      50 |   });
      51 | });
      52 |

      at Object.<anonymous> (unit/api.runtime.outcomes.jwks.spec.ts:49:23)

FAIL tests/unit/api.runtime.outcomes.runtime-token.spec.ts
  ● runtime outcomes accepts runtime token when no jwks › 403 when missing attempts.write scope; 201 when scope present

    expect(received).toContain(expected) // indexOf

    Expected value: 403
    Received array: [200, 201]

      36 |     token = makeHsToken({ sub: 'u1', courseId: 'c1', scopes: ['attempts.write'], iat: now, exp: now + 60 });
      37 |     res = await (OutcomesPOST as any)(post('http://localhost/api/runtime/outcomes', { courseId: 'c1', userId: 'u1', event: { type: 'attempt.completed', score: 1, max: 1, passed: true } }, { authorization: `Bearer ${token}` }));
    > 38 |     expect([200,201]).toContain(res.status);
         |                       ^
      39 |   });
      40 | });
      41 |

      at Object.<anonymous> (unit/api.runtime.outcomes.runtime-token.spec.ts:38:23)

{"level":30,"time":1755759960047,"pid":106,"hostname":"f15ee47b3290","requestId":"af316691-5caa-4c4e-a460-8a4c07493f8a","ms":12,"msg":"route_success"}
{"level":30,"time":1755759960056,"pid":106,"hostname":"f15ee47b3290","requestId":"55186ff7-5429-44fd-a91f-128b4ef58ccc","ms":9,"msg":"route_success"}
{"level":30,"time":1755759960320,"pid":106,"hostname":"f15ee47b3290","requestId":"a576d3bb-029b-4090-aad9-656ef1bbfcca","ms":0,"msg":"route_success"}
FAIL tests/unit/api.runtime.outcomes.export.headers.spec.ts
  ● runtime outcomes export CSV headers › 200 response includes CSV content-type and content-disposition

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      16 |
      17 |     const res = await (OutcomesExportGET as any)(get('http://localhost/api/runtime/outcomes/export?course_id=11111111-1111-1111-1111-111111111111'));
    > 18 |     expect(res.status).toBe(200);
         |                        ^
      19 |     expect(res.headers.get('content-type') || '').toMatch(/text\/csv/);
      20 |     const cd = res.headers.get('content-disposition') || '';
      21 |     expect(cd).toMatch(/attachment; filename="interactive_attempts_11111111-1111-1111-1111-111111111111.csv"/);

      at Object.<anonymous> (unit/api.runtime.outcomes.export.headers.spec.ts:18:24)

FAIL tests/unit/api.runtime.outcomes.list.headers.spec.ts
  ● runtime outcomes list headers › vary: Origin and x-request-id are set on 200

    expect(received).toBe(expected) // Object.is equality

    Expected: 200
    Received: 401

      16 |
      17 |     const res = await (OutcomesListGET as any)(get('http://localhost/api/runtime/outcomes?course_id=11111111-1111-1111-1111-111111111111'));
    > 18 |     expect(res.status).toBe(200);
         |                        ^
      19 |     expect(res.headers.get('x-request-id') || '').not.toEqual('');
      20 |     expect(res.headers.get('vary')).toBe('Origin');
      21 |   });

      at Object.<anonymous> (unit/api.runtime.outcomes.list.headers.spec.ts:18:24)

Test Suites: 5 failed, 5 total
Tests:       8 failed, 1 passed, 9 total
Snapshots:   0 total
Time:        3.888 s
Ran all test suites matching /tests\/unit\/api.runtime.outcomes.jwks.spec.ts|tests\/unit\/api.runtime.outcomes.runtime-token.spec.ts|tests\/unit\/api.runtime.outcomes.rate-limit.spec.ts|tests\/unit\/api.runtime.outcomes.list.headers.spec.ts|tests\/unit\/api.runtime.outcomes.export.headers.spec.ts/i.
{"level":30,"time":1755759960577,"pid":106,"hostname":"f15ee47b3290","requestId":"e62c1a0d-e0d3-4d68-afc8-aadd8312c614","ms":1,"msg":"route_success"}
